module.exports = {

"[project]/node_modules/@opentelemetry/resource-detector-aws/node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ //----------------------------------------------------------------------------------------------------------
// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2
//----------------------------------------------------------------------------------------------------------
/**
 * ASP.NET Core exception middleware handling result
 *
 * @example handled
 * @example unhandled
 */ __turbopack_context__.s({
    "ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED": (()=>ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED),
    "ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED": (()=>ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED),
    "ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED": (()=>ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED),
    "ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED": (()=>ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED),
    "ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED": (()=>ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED),
    "ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER": (()=>ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER),
    "ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER": (()=>ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER),
    "ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED": (()=>ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED),
    "ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE": (()=>ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE),
    "ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS": (()=>ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS),
    "ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT": (()=>ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT),
    "ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE": (()=>ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE),
    "ATTR_ASPNETCORE_RATE_LIMITING_POLICY": (()=>ATTR_ASPNETCORE_RATE_LIMITING_POLICY),
    "ATTR_ASPNETCORE_RATE_LIMITING_RESULT": (()=>ATTR_ASPNETCORE_RATE_LIMITING_RESULT),
    "ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED": (()=>ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED),
    "ATTR_ASPNETCORE_ROUTING_IS_FALLBACK": (()=>ATTR_ASPNETCORE_ROUTING_IS_FALLBACK),
    "ATTR_ASPNETCORE_ROUTING_MATCH_STATUS": (()=>ATTR_ASPNETCORE_ROUTING_MATCH_STATUS),
    "ATTR_CLIENT_ADDRESS": (()=>ATTR_CLIENT_ADDRESS),
    "ATTR_CLIENT_PORT": (()=>ATTR_CLIENT_PORT),
    "ATTR_CODE_COLUMN_NUMBER": (()=>ATTR_CODE_COLUMN_NUMBER),
    "ATTR_CODE_FILE_PATH": (()=>ATTR_CODE_FILE_PATH),
    "ATTR_CODE_FUNCTION_NAME": (()=>ATTR_CODE_FUNCTION_NAME),
    "ATTR_CODE_LINE_NUMBER": (()=>ATTR_CODE_LINE_NUMBER),
    "ATTR_CODE_STACKTRACE": (()=>ATTR_CODE_STACKTRACE),
    "ATTR_DB_COLLECTION_NAME": (()=>ATTR_DB_COLLECTION_NAME),
    "ATTR_DB_NAMESPACE": (()=>ATTR_DB_NAMESPACE),
    "ATTR_DB_OPERATION_BATCH_SIZE": (()=>ATTR_DB_OPERATION_BATCH_SIZE),
    "ATTR_DB_OPERATION_NAME": (()=>ATTR_DB_OPERATION_NAME),
    "ATTR_DB_QUERY_SUMMARY": (()=>ATTR_DB_QUERY_SUMMARY),
    "ATTR_DB_QUERY_TEXT": (()=>ATTR_DB_QUERY_TEXT),
    "ATTR_DB_RESPONSE_STATUS_CODE": (()=>ATTR_DB_RESPONSE_STATUS_CODE),
    "ATTR_DB_STORED_PROCEDURE_NAME": (()=>ATTR_DB_STORED_PROCEDURE_NAME),
    "ATTR_DB_SYSTEM_NAME": (()=>ATTR_DB_SYSTEM_NAME),
    "ATTR_DOTNET_GC_HEAP_GENERATION": (()=>ATTR_DOTNET_GC_HEAP_GENERATION),
    "ATTR_ERROR_TYPE": (()=>ATTR_ERROR_TYPE),
    "ATTR_EXCEPTION_ESCAPED": (()=>ATTR_EXCEPTION_ESCAPED),
    "ATTR_EXCEPTION_MESSAGE": (()=>ATTR_EXCEPTION_MESSAGE),
    "ATTR_EXCEPTION_STACKTRACE": (()=>ATTR_EXCEPTION_STACKTRACE),
    "ATTR_EXCEPTION_TYPE": (()=>ATTR_EXCEPTION_TYPE),
    "ATTR_HTTP_REQUEST_HEADER": (()=>ATTR_HTTP_REQUEST_HEADER),
    "ATTR_HTTP_REQUEST_METHOD": (()=>ATTR_HTTP_REQUEST_METHOD),
    "ATTR_HTTP_REQUEST_METHOD_ORIGINAL": (()=>ATTR_HTTP_REQUEST_METHOD_ORIGINAL),
    "ATTR_HTTP_REQUEST_RESEND_COUNT": (()=>ATTR_HTTP_REQUEST_RESEND_COUNT),
    "ATTR_HTTP_RESPONSE_HEADER": (()=>ATTR_HTTP_RESPONSE_HEADER),
    "ATTR_HTTP_RESPONSE_STATUS_CODE": (()=>ATTR_HTTP_RESPONSE_STATUS_CODE),
    "ATTR_HTTP_ROUTE": (()=>ATTR_HTTP_ROUTE),
    "ATTR_JVM_GC_ACTION": (()=>ATTR_JVM_GC_ACTION),
    "ATTR_JVM_GC_NAME": (()=>ATTR_JVM_GC_NAME),
    "ATTR_JVM_MEMORY_POOL_NAME": (()=>ATTR_JVM_MEMORY_POOL_NAME),
    "ATTR_JVM_MEMORY_TYPE": (()=>ATTR_JVM_MEMORY_TYPE),
    "ATTR_JVM_THREAD_DAEMON": (()=>ATTR_JVM_THREAD_DAEMON),
    "ATTR_JVM_THREAD_STATE": (()=>ATTR_JVM_THREAD_STATE),
    "ATTR_NETWORK_LOCAL_ADDRESS": (()=>ATTR_NETWORK_LOCAL_ADDRESS),
    "ATTR_NETWORK_LOCAL_PORT": (()=>ATTR_NETWORK_LOCAL_PORT),
    "ATTR_NETWORK_PEER_ADDRESS": (()=>ATTR_NETWORK_PEER_ADDRESS),
    "ATTR_NETWORK_PEER_PORT": (()=>ATTR_NETWORK_PEER_PORT),
    "ATTR_NETWORK_PROTOCOL_NAME": (()=>ATTR_NETWORK_PROTOCOL_NAME),
    "ATTR_NETWORK_PROTOCOL_VERSION": (()=>ATTR_NETWORK_PROTOCOL_VERSION),
    "ATTR_NETWORK_TRANSPORT": (()=>ATTR_NETWORK_TRANSPORT),
    "ATTR_NETWORK_TYPE": (()=>ATTR_NETWORK_TYPE),
    "ATTR_OTEL_SCOPE_NAME": (()=>ATTR_OTEL_SCOPE_NAME),
    "ATTR_OTEL_SCOPE_VERSION": (()=>ATTR_OTEL_SCOPE_VERSION),
    "ATTR_OTEL_STATUS_CODE": (()=>ATTR_OTEL_STATUS_CODE),
    "ATTR_OTEL_STATUS_DESCRIPTION": (()=>ATTR_OTEL_STATUS_DESCRIPTION),
    "ATTR_SERVER_ADDRESS": (()=>ATTR_SERVER_ADDRESS),
    "ATTR_SERVER_PORT": (()=>ATTR_SERVER_PORT),
    "ATTR_SERVICE_NAME": (()=>ATTR_SERVICE_NAME),
    "ATTR_SERVICE_VERSION": (()=>ATTR_SERVICE_VERSION),
    "ATTR_SIGNALR_CONNECTION_STATUS": (()=>ATTR_SIGNALR_CONNECTION_STATUS),
    "ATTR_SIGNALR_TRANSPORT": (()=>ATTR_SIGNALR_TRANSPORT),
    "ATTR_TELEMETRY_SDK_LANGUAGE": (()=>ATTR_TELEMETRY_SDK_LANGUAGE),
    "ATTR_TELEMETRY_SDK_NAME": (()=>ATTR_TELEMETRY_SDK_NAME),
    "ATTR_TELEMETRY_SDK_VERSION": (()=>ATTR_TELEMETRY_SDK_VERSION),
    "ATTR_URL_FRAGMENT": (()=>ATTR_URL_FRAGMENT),
    "ATTR_URL_FULL": (()=>ATTR_URL_FULL),
    "ATTR_URL_PATH": (()=>ATTR_URL_PATH),
    "ATTR_URL_QUERY": (()=>ATTR_URL_QUERY),
    "ATTR_URL_SCHEME": (()=>ATTR_URL_SCHEME),
    "ATTR_USER_AGENT_ORIGINAL": (()=>ATTR_USER_AGENT_ORIGINAL),
    "DB_SYSTEM_NAME_VALUE_MARIADB": (()=>DB_SYSTEM_NAME_VALUE_MARIADB),
    "DB_SYSTEM_NAME_VALUE_MICROSOFT_SQL_SERVER": (()=>DB_SYSTEM_NAME_VALUE_MICROSOFT_SQL_SERVER),
    "DB_SYSTEM_NAME_VALUE_MYSQL": (()=>DB_SYSTEM_NAME_VALUE_MYSQL),
    "DB_SYSTEM_NAME_VALUE_POSTGRESQL": (()=>DB_SYSTEM_NAME_VALUE_POSTGRESQL),
    "DOTNET_GC_HEAP_GENERATION_VALUE_GEN0": (()=>DOTNET_GC_HEAP_GENERATION_VALUE_GEN0),
    "DOTNET_GC_HEAP_GENERATION_VALUE_GEN1": (()=>DOTNET_GC_HEAP_GENERATION_VALUE_GEN1),
    "DOTNET_GC_HEAP_GENERATION_VALUE_GEN2": (()=>DOTNET_GC_HEAP_GENERATION_VALUE_GEN2),
    "DOTNET_GC_HEAP_GENERATION_VALUE_LOH": (()=>DOTNET_GC_HEAP_GENERATION_VALUE_LOH),
    "DOTNET_GC_HEAP_GENERATION_VALUE_POH": (()=>DOTNET_GC_HEAP_GENERATION_VALUE_POH),
    "ERROR_TYPE_VALUE_OTHER": (()=>ERROR_TYPE_VALUE_OTHER),
    "HTTP_REQUEST_METHOD_VALUE_CONNECT": (()=>HTTP_REQUEST_METHOD_VALUE_CONNECT),
    "HTTP_REQUEST_METHOD_VALUE_DELETE": (()=>HTTP_REQUEST_METHOD_VALUE_DELETE),
    "HTTP_REQUEST_METHOD_VALUE_GET": (()=>HTTP_REQUEST_METHOD_VALUE_GET),
    "HTTP_REQUEST_METHOD_VALUE_HEAD": (()=>HTTP_REQUEST_METHOD_VALUE_HEAD),
    "HTTP_REQUEST_METHOD_VALUE_OPTIONS": (()=>HTTP_REQUEST_METHOD_VALUE_OPTIONS),
    "HTTP_REQUEST_METHOD_VALUE_OTHER": (()=>HTTP_REQUEST_METHOD_VALUE_OTHER),
    "HTTP_REQUEST_METHOD_VALUE_PATCH": (()=>HTTP_REQUEST_METHOD_VALUE_PATCH),
    "HTTP_REQUEST_METHOD_VALUE_POST": (()=>HTTP_REQUEST_METHOD_VALUE_POST),
    "HTTP_REQUEST_METHOD_VALUE_PUT": (()=>HTTP_REQUEST_METHOD_VALUE_PUT),
    "HTTP_REQUEST_METHOD_VALUE_TRACE": (()=>HTTP_REQUEST_METHOD_VALUE_TRACE),
    "JVM_MEMORY_TYPE_VALUE_HEAP": (()=>JVM_MEMORY_TYPE_VALUE_HEAP),
    "JVM_MEMORY_TYPE_VALUE_NON_HEAP": (()=>JVM_MEMORY_TYPE_VALUE_NON_HEAP),
    "JVM_THREAD_STATE_VALUE_BLOCKED": (()=>JVM_THREAD_STATE_VALUE_BLOCKED),
    "JVM_THREAD_STATE_VALUE_NEW": (()=>JVM_THREAD_STATE_VALUE_NEW),
    "JVM_THREAD_STATE_VALUE_RUNNABLE": (()=>JVM_THREAD_STATE_VALUE_RUNNABLE),
    "JVM_THREAD_STATE_VALUE_TERMINATED": (()=>JVM_THREAD_STATE_VALUE_TERMINATED),
    "JVM_THREAD_STATE_VALUE_TIMED_WAITING": (()=>JVM_THREAD_STATE_VALUE_TIMED_WAITING),
    "JVM_THREAD_STATE_VALUE_WAITING": (()=>JVM_THREAD_STATE_VALUE_WAITING),
    "NETWORK_TRANSPORT_VALUE_PIPE": (()=>NETWORK_TRANSPORT_VALUE_PIPE),
    "NETWORK_TRANSPORT_VALUE_QUIC": (()=>NETWORK_TRANSPORT_VALUE_QUIC),
    "NETWORK_TRANSPORT_VALUE_TCP": (()=>NETWORK_TRANSPORT_VALUE_TCP),
    "NETWORK_TRANSPORT_VALUE_UDP": (()=>NETWORK_TRANSPORT_VALUE_UDP),
    "NETWORK_TRANSPORT_VALUE_UNIX": (()=>NETWORK_TRANSPORT_VALUE_UNIX),
    "NETWORK_TYPE_VALUE_IPV4": (()=>NETWORK_TYPE_VALUE_IPV4),
    "NETWORK_TYPE_VALUE_IPV6": (()=>NETWORK_TYPE_VALUE_IPV6),
    "OTEL_STATUS_CODE_VALUE_ERROR": (()=>OTEL_STATUS_CODE_VALUE_ERROR),
    "OTEL_STATUS_CODE_VALUE_OK": (()=>OTEL_STATUS_CODE_VALUE_OK),
    "SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN": (()=>SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN),
    "SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE": (()=>SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE),
    "SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT": (()=>SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT),
    "SIGNALR_TRANSPORT_VALUE_LONG_POLLING": (()=>SIGNALR_TRANSPORT_VALUE_LONG_POLLING),
    "SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS": (()=>SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS),
    "SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS": (()=>SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS),
    "TELEMETRY_SDK_LANGUAGE_VALUE_CPP": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_CPP),
    "TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET),
    "TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG),
    "TELEMETRY_SDK_LANGUAGE_VALUE_GO": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_GO),
    "TELEMETRY_SDK_LANGUAGE_VALUE_JAVA": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_JAVA),
    "TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS),
    "TELEMETRY_SDK_LANGUAGE_VALUE_PHP": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_PHP),
    "TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON),
    "TELEMETRY_SDK_LANGUAGE_VALUE_RUBY": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_RUBY),
    "TELEMETRY_SDK_LANGUAGE_VALUE_RUST": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_RUST),
    "TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT),
    "TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS": (()=>TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS)
});
const ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = 'aspnetcore.diagnostics.exception.result';
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = "aborted";
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = "handled";
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = "skipped";
const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = "unhandled";
const ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = 'aspnetcore.diagnostics.handler.type';
const ATTR_ASPNETCORE_RATE_LIMITING_POLICY = 'aspnetcore.rate_limiting.policy';
const ATTR_ASPNETCORE_RATE_LIMITING_RESULT = 'aspnetcore.rate_limiting.result';
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = "acquired";
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = "endpoint_limiter";
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = "global_limiter";
const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = "request_canceled";
const ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = 'aspnetcore.request.is_unhandled';
const ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = 'aspnetcore.routing.is_fallback';
const ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = 'aspnetcore.routing.match_status';
const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = "failure";
const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = "success";
const ATTR_CLIENT_ADDRESS = 'client.address';
const ATTR_CLIENT_PORT = 'client.port';
const ATTR_CODE_COLUMN_NUMBER = 'code.column.number';
const ATTR_CODE_FILE_PATH = 'code.file.path';
const ATTR_CODE_FUNCTION_NAME = 'code.function.name';
const ATTR_CODE_LINE_NUMBER = 'code.line.number';
const ATTR_CODE_STACKTRACE = 'code.stacktrace';
const ATTR_DB_COLLECTION_NAME = 'db.collection.name';
const ATTR_DB_NAMESPACE = 'db.namespace';
const ATTR_DB_OPERATION_BATCH_SIZE = 'db.operation.batch.size';
const ATTR_DB_OPERATION_NAME = 'db.operation.name';
const ATTR_DB_QUERY_SUMMARY = 'db.query.summary';
const ATTR_DB_QUERY_TEXT = 'db.query.text';
const ATTR_DB_RESPONSE_STATUS_CODE = 'db.response.status_code';
const ATTR_DB_STORED_PROCEDURE_NAME = 'db.stored_procedure.name';
const ATTR_DB_SYSTEM_NAME = 'db.system.name';
const DB_SYSTEM_NAME_VALUE_MARIADB = "mariadb";
const DB_SYSTEM_NAME_VALUE_MICROSOFT_SQL_SERVER = "microsoft.sql_server";
const DB_SYSTEM_NAME_VALUE_MYSQL = "mysql";
const DB_SYSTEM_NAME_VALUE_POSTGRESQL = "postgresql";
const ATTR_DOTNET_GC_HEAP_GENERATION = 'dotnet.gc.heap.generation';
const DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = "gen0";
const DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = "gen1";
const DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = "gen2";
const DOTNET_GC_HEAP_GENERATION_VALUE_LOH = "loh";
const DOTNET_GC_HEAP_GENERATION_VALUE_POH = "poh";
const ATTR_ERROR_TYPE = 'error.type';
const ERROR_TYPE_VALUE_OTHER = "_OTHER";
const ATTR_EXCEPTION_ESCAPED = 'exception.escaped';
const ATTR_EXCEPTION_MESSAGE = 'exception.message';
const ATTR_EXCEPTION_STACKTRACE = 'exception.stacktrace';
const ATTR_EXCEPTION_TYPE = 'exception.type';
const ATTR_HTTP_REQUEST_HEADER = (key)=>`http.request.header.${key}`;
const ATTR_HTTP_REQUEST_METHOD = 'http.request.method';
const HTTP_REQUEST_METHOD_VALUE_OTHER = "_OTHER";
const HTTP_REQUEST_METHOD_VALUE_CONNECT = "CONNECT";
const HTTP_REQUEST_METHOD_VALUE_DELETE = "DELETE";
const HTTP_REQUEST_METHOD_VALUE_GET = "GET";
const HTTP_REQUEST_METHOD_VALUE_HEAD = "HEAD";
const HTTP_REQUEST_METHOD_VALUE_OPTIONS = "OPTIONS";
const HTTP_REQUEST_METHOD_VALUE_PATCH = "PATCH";
const HTTP_REQUEST_METHOD_VALUE_POST = "POST";
const HTTP_REQUEST_METHOD_VALUE_PUT = "PUT";
const HTTP_REQUEST_METHOD_VALUE_TRACE = "TRACE";
const ATTR_HTTP_REQUEST_METHOD_ORIGINAL = 'http.request.method_original';
const ATTR_HTTP_REQUEST_RESEND_COUNT = 'http.request.resend_count';
const ATTR_HTTP_RESPONSE_HEADER = (key)=>`http.response.header.${key}`;
const ATTR_HTTP_RESPONSE_STATUS_CODE = 'http.response.status_code';
const ATTR_HTTP_ROUTE = 'http.route';
const ATTR_JVM_GC_ACTION = 'jvm.gc.action';
const ATTR_JVM_GC_NAME = 'jvm.gc.name';
const ATTR_JVM_MEMORY_POOL_NAME = 'jvm.memory.pool.name';
const ATTR_JVM_MEMORY_TYPE = 'jvm.memory.type';
const JVM_MEMORY_TYPE_VALUE_HEAP = "heap";
const JVM_MEMORY_TYPE_VALUE_NON_HEAP = "non_heap";
const ATTR_JVM_THREAD_DAEMON = 'jvm.thread.daemon';
const ATTR_JVM_THREAD_STATE = 'jvm.thread.state';
const JVM_THREAD_STATE_VALUE_BLOCKED = "blocked";
const JVM_THREAD_STATE_VALUE_NEW = "new";
const JVM_THREAD_STATE_VALUE_RUNNABLE = "runnable";
const JVM_THREAD_STATE_VALUE_TERMINATED = "terminated";
const JVM_THREAD_STATE_VALUE_TIMED_WAITING = "timed_waiting";
const JVM_THREAD_STATE_VALUE_WAITING = "waiting";
const ATTR_NETWORK_LOCAL_ADDRESS = 'network.local.address';
const ATTR_NETWORK_LOCAL_PORT = 'network.local.port';
const ATTR_NETWORK_PEER_ADDRESS = 'network.peer.address';
const ATTR_NETWORK_PEER_PORT = 'network.peer.port';
const ATTR_NETWORK_PROTOCOL_NAME = 'network.protocol.name';
const ATTR_NETWORK_PROTOCOL_VERSION = 'network.protocol.version';
const ATTR_NETWORK_TRANSPORT = 'network.transport';
const NETWORK_TRANSPORT_VALUE_PIPE = "pipe";
const NETWORK_TRANSPORT_VALUE_QUIC = "quic";
const NETWORK_TRANSPORT_VALUE_TCP = "tcp";
const NETWORK_TRANSPORT_VALUE_UDP = "udp";
const NETWORK_TRANSPORT_VALUE_UNIX = "unix";
const ATTR_NETWORK_TYPE = 'network.type';
const NETWORK_TYPE_VALUE_IPV4 = "ipv4";
const NETWORK_TYPE_VALUE_IPV6 = "ipv6";
const ATTR_OTEL_SCOPE_NAME = 'otel.scope.name';
const ATTR_OTEL_SCOPE_VERSION = 'otel.scope.version';
const ATTR_OTEL_STATUS_CODE = 'otel.status_code';
const OTEL_STATUS_CODE_VALUE_ERROR = "ERROR";
const OTEL_STATUS_CODE_VALUE_OK = "OK";
const ATTR_OTEL_STATUS_DESCRIPTION = 'otel.status_description';
const ATTR_SERVER_ADDRESS = 'server.address';
const ATTR_SERVER_PORT = 'server.port';
const ATTR_SERVICE_NAME = 'service.name';
const ATTR_SERVICE_VERSION = 'service.version';
const ATTR_SIGNALR_CONNECTION_STATUS = 'signalr.connection.status';
const SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = "app_shutdown";
const SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = "normal_closure";
const SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = "timeout";
const ATTR_SIGNALR_TRANSPORT = 'signalr.transport';
const SIGNALR_TRANSPORT_VALUE_LONG_POLLING = "long_polling";
const SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = "server_sent_events";
const SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = "web_sockets";
const ATTR_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';
const TELEMETRY_SDK_LANGUAGE_VALUE_CPP = "cpp";
const TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = "dotnet";
const TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = "erlang";
const TELEMETRY_SDK_LANGUAGE_VALUE_GO = "go";
const TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = "java";
const TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = "nodejs";
const TELEMETRY_SDK_LANGUAGE_VALUE_PHP = "php";
const TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = "python";
const TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = "ruby";
const TELEMETRY_SDK_LANGUAGE_VALUE_RUST = "rust";
const TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = "swift";
const TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = "webjs";
const ATTR_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';
const ATTR_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';
const ATTR_URL_FRAGMENT = 'url.fragment';
const ATTR_URL_FULL = 'url.full';
const ATTR_URL_PATH = 'url.path';
const ATTR_URL_QUERY = 'url.query';
const ATTR_URL_SCHEME = 'url.scheme';
const ATTR_USER_AGENT_ORIGINAL = 'user_agent.original'; //# sourceMappingURL=stable_attributes.js.map
}}),

};

//# sourceMappingURL=39712_%40opentelemetry_semantic-conventions_build_esm_stable_attributes_13fb995a.js.map