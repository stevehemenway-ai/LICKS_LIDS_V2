module.exports = {

"[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HttpCodeToRpcCodeMap = exports.Status = void 0;
exports.rpcCodeFromHttpStatusCode = rpcCodeFromHttpStatusCode;
// The following is a copy of the Status enum defined in @grpc/grpc-js,
// src/constants.ts. We need to use some of these statuses here and there,
// but we don't want to include the whole @grpc/grpc-js into the browser
// bundle just to have this small enum.
var Status;
(function(Status) {
    Status[Status["OK"] = 0] = "OK";
    Status[Status["CANCELLED"] = 1] = "CANCELLED";
    Status[Status["UNKNOWN"] = 2] = "UNKNOWN";
    Status[Status["INVALID_ARGUMENT"] = 3] = "INVALID_ARGUMENT";
    Status[Status["DEADLINE_EXCEEDED"] = 4] = "DEADLINE_EXCEEDED";
    Status[Status["NOT_FOUND"] = 5] = "NOT_FOUND";
    Status[Status["ALREADY_EXISTS"] = 6] = "ALREADY_EXISTS";
    Status[Status["PERMISSION_DENIED"] = 7] = "PERMISSION_DENIED";
    Status[Status["RESOURCE_EXHAUSTED"] = 8] = "RESOURCE_EXHAUSTED";
    Status[Status["FAILED_PRECONDITION"] = 9] = "FAILED_PRECONDITION";
    Status[Status["ABORTED"] = 10] = "ABORTED";
    Status[Status["OUT_OF_RANGE"] = 11] = "OUT_OF_RANGE";
    Status[Status["UNIMPLEMENTED"] = 12] = "UNIMPLEMENTED";
    Status[Status["INTERNAL"] = 13] = "INTERNAL";
    Status[Status["UNAVAILABLE"] = 14] = "UNAVAILABLE";
    Status[Status["DATA_LOSS"] = 15] = "DATA_LOSS";
    Status[Status["UNAUTHENTICATED"] = 16] = "UNAUTHENTICATED";
})(Status || (exports.Status = Status = {}));
exports.HttpCodeToRpcCodeMap = new Map([
    [
        400,
        Status.INVALID_ARGUMENT
    ],
    [
        401,
        Status.UNAUTHENTICATED
    ],
    [
        403,
        Status.PERMISSION_DENIED
    ],
    [
        404,
        Status.NOT_FOUND
    ],
    [
        409,
        Status.ABORTED
    ],
    [
        416,
        Status.OUT_OF_RANGE
    ],
    [
        429,
        Status.RESOURCE_EXHAUSTED
    ],
    [
        499,
        Status.CANCELLED
    ],
    [
        501,
        Status.UNIMPLEMENTED
    ],
    [
        503,
        Status.UNAVAILABLE
    ],
    [
        504,
        Status.DEADLINE_EXCEEDED
    ]
]);
// Maps HTTP status codes to gRPC status codes above.
function rpcCodeFromHttpStatusCode(httpStatusCode) {
    if (exports.HttpCodeToRpcCodeMap.has(httpStatusCode)) {
        return exports.HttpCodeToRpcCodeMap.get(httpStatusCode);
    }
    // All 2xx
    if (httpStatusCode >= 200 && httpStatusCode < 300) {
        return Status.OK;
    }
    // All other 4xx
    if (httpStatusCode >= 400 && httpStatusCode < 500) {
        return Status.FAILED_PRECONDITION;
    }
    // All other 5xx
    if (httpStatusCode >= 500 && httpStatusCode < 600) {
        return Status.INTERNAL;
    }
    // Everything else
    return Status.UNKNOWN;
} //# sourceMappingURL=status.js.map
}}),
"[project]/node_modules/google-gax/build/src/featureDetection.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _a;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hasWindowFetch = hasWindowFetch;
exports.isNodeJS = isNodeJS;
exports.hasAbortController = hasAbortController;
/* global window */ const features = {
    windowFetch: "undefined" !== 'undefined' && (window === null || window === void 0 ? void 0 : window.fetch) && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function',
    // eslint-disable-next-line n/no-unsupported-features/node-builtins
    textEncoder: typeof TextEncoder !== 'undefined',
    // eslint-disable-next-line n/no-unsupported-features/node-builtins
    textDecoder: typeof TextDecoder !== 'undefined',
    nodeJS: typeof process !== 'undefined' && ((_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node),
    abortController: typeof AbortController !== 'undefined'
};
function hasWindowFetch() {
    return features.windowFetch;
}
function isNodeJS() {
    return features.nodeJS;
}
function hasAbortController() {
    return features.abortController;
} //# sourceMappingURL=featureDetection.js.map
}}),
"[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.warn = warn;
const featureDetection_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/featureDetection.js [app-rsc] (ecmascript)");
const emittedWarnings = new Set();
// warnType is the type of warning (e.g. 'DeprecationWarning', 'ExperimentalWarning', etc.)
function warn(code, message, warnType) {
    // Only show a given warning once
    if (emittedWarnings.has(code)) {
        return;
    }
    emittedWarnings.add(code);
    if (!(0, featureDetection_1.isNodeJS)()) {
        console.warn(message);
    } else if (typeof warnType !== 'undefined') {
        process.emitWarning(message, {
            type: warnType
        });
    } else {
        process.emitWarning(message);
    }
} //# sourceMappingURL=warnings.js.map
}}),
"[project]/node_modules/google-gax/build/protos/operations.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
((e)=>{
    "function" == typeof define && define.amd ? ((r)=>r !== undefined && __turbopack_context__.v(r))(e(__turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)"))) : "function" == ("TURBOPACK compile-time value", "function") && "object" == ("TURBOPACK compile-time value", "object") && module && module.exports && (module.exports = e(__turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)")));
})(function(o) {
    var e, t, n, F, a = o.Reader, r = o.Writer, i = o.util, p = o.roots.operations_protos || (o.roots.operations_protos = {});
    function G(e, t, n) {
        o.rpc.Service.call(this, e, t, n);
    }
    function l(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function B(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function s(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function u(e) {
        if (this.operations = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function L(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function U(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function c(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function d(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function g(e) {
        if (this.rules = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function f(e) {
        if (this.additionalBindings = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function y(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function J(e) {
        if (this.file = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function h(e) {
        if (this.dependency = [], this.publicDependency = [], this.weakDependency = [], this.messageType = [], this.enumType = [], this.service = [], this.extension = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function O(e) {
        if (this.field = [], this.extension = [], this.nestedType = [], this.enumType = [], this.extensionRange = [], this.oneofDecl = [], this.reservedRange = [], this.reservedName = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function b(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function m(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function M(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function v(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function w(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function P(e) {
        if (this.value = [], this.reservedRange = [], this.reservedName = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function _(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function j(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function S(e) {
        if (this.method = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function x(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function k(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function D(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function T(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function H(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function E(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function z(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function A(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function N(e) {
        if (this.uninterpretedOption = [], this[".google.api.methodSignature"] = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function I(e) {
        if (this.name = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function q(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function Y(e) {
        if (this.location = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function R(e) {
        if (this.path = [], this.span = [], this.leadingDetachedComments = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function W(e) {
        if (this.annotation = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function C(e) {
        if (this.path = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function X(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function K(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function Q(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function V(e) {
        if (this.details = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    return p.google = ((F = {}).longrunning = ((t = {}).Operations = (((G.prototype = Object.create(o.rpc.Service.prototype)).constructor = G).create = function(e, t, n) {
        return new this(e, t, n);
    }, Object.defineProperty(G.prototype.listOperations = function e(t, n) {
        return this.rpcCall(e, p.google.longrunning.ListOperationsRequest, p.google.longrunning.ListOperationsResponse, t, n);
    }, "name", {
        value: "ListOperations"
    }), Object.defineProperty(G.prototype.getOperation = function e(t, n) {
        return this.rpcCall(e, p.google.longrunning.GetOperationRequest, p.google.longrunning.Operation, t, n);
    }, "name", {
        value: "GetOperation"
    }), Object.defineProperty(G.prototype.deleteOperation = function e(t, n) {
        return this.rpcCall(e, p.google.longrunning.DeleteOperationRequest, p.google.protobuf.Empty, t, n);
    }, "name", {
        value: "DeleteOperation"
    }), Object.defineProperty(G.prototype.cancelOperation = function e(t, n) {
        return this.rpcCall(e, p.google.longrunning.CancelOperationRequest, p.google.protobuf.Empty, t, n);
    }, "name", {
        value: "CancelOperation"
    }), Object.defineProperty(G.prototype.waitOperation = function e(t, n) {
        return this.rpcCall(e, p.google.longrunning.WaitOperationRequest, p.google.longrunning.Operation, t, n);
    }, "name", {
        value: "WaitOperation"
    }), G), t.Operation = (l.prototype.name = "", l.prototype.metadata = null, l.prototype.done = !1, l.prototype.error = null, l.prototype.response = null, Object.defineProperty(l.prototype, "result", {
        get: i.oneOfGetter(n = [
            "error",
            "response"
        ]),
        set: i.oneOfSetter(n)
    }), l.create = function(e) {
        return new l(e);
    }, l.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.metadata && Object.hasOwnProperty.call(e, "metadata") && p.google.protobuf.Any.encode(e.metadata, t.uint32(18).fork()).ldelim(), null != e.done && Object.hasOwnProperty.call(e, "done") && t.uint32(24).bool(e.done), null != e.error && Object.hasOwnProperty.call(e, "error") && p.google.rpc.Status.encode(e.error, t.uint32(34).fork()).ldelim(), null != e.response && Object.hasOwnProperty.call(e, "response") && p.google.protobuf.Any.encode(e.response, t.uint32(42).fork()).ldelim(), t;
    }, l.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, l.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.Operation; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.metadata = p.google.protobuf.Any.decode(e, e.uint32());
                    break;
                case 3:
                    o.done = e.bool();
                    break;
                case 4:
                    o.error = p.google.rpc.Status.decode(e, e.uint32());
                    break;
                case 5:
                    o.response = p.google.protobuf.Any.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, l.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, l.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        var t, n = {};
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.metadata && e.hasOwnProperty("metadata") && (t = p.google.protobuf.Any.verify(e.metadata))) return "metadata." + t;
        if (null != e.done && e.hasOwnProperty("done") && "boolean" != typeof e.done) return "done: boolean expected";
        if (null != e.error && e.hasOwnProperty("error") && (n.result = 1, t = p.google.rpc.Status.verify(e.error))) return "error." + t;
        if (null != e.response && e.hasOwnProperty("response")) {
            if (1 === n.result) return "result: multiple values";
            if (n.result = 1, t = p.google.protobuf.Any.verify(e.response)) return "response." + t;
        }
        return null;
    }, l.fromObject = function(e) {
        if (e instanceof p.google.longrunning.Operation) return e;
        var t = new p.google.longrunning.Operation;
        if (null != e.name && (t.name = String(e.name)), null != e.metadata) {
            if ("object" != typeof e.metadata) throw TypeError(".google.longrunning.Operation.metadata: object expected");
            t.metadata = p.google.protobuf.Any.fromObject(e.metadata);
        }
        if (null != e.done && (t.done = Boolean(e.done)), null != e.error) {
            if ("object" != typeof e.error) throw TypeError(".google.longrunning.Operation.error: object expected");
            t.error = p.google.rpc.Status.fromObject(e.error);
        }
        if (null != e.response) {
            if ("object" != typeof e.response) throw TypeError(".google.longrunning.Operation.response: object expected");
            t.response = p.google.protobuf.Any.fromObject(e.response);
        }
        return t;
    }, l.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.metadata = null, n.done = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.metadata && e.hasOwnProperty("metadata") && (n.metadata = p.google.protobuf.Any.toObject(e.metadata, t)), null != e.done && e.hasOwnProperty("done") && (n.done = e.done), null != e.error && e.hasOwnProperty("error") && (n.error = p.google.rpc.Status.toObject(e.error, t), t.oneofs) && (n.result = "error"), null != e.response && e.hasOwnProperty("response") && (n.response = p.google.protobuf.Any.toObject(e.response, t), t.oneofs) && (n.result = "response"), n;
    }, l.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, l), t.GetOperationRequest = (B.prototype.name = "", B.create = function(e) {
        return new B(e);
    }, B.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), t;
    }, B.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, B.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.GetOperationRequest; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? o.name = e.string() : e.skipType(7 & r);
        }
        return o;
    }, B.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, B.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.name && e.hasOwnProperty("name") && !i.isString(e.name) ? "name: string expected" : null;
    }, B.fromObject = function(e) {
        var t;
        return e instanceof p.google.longrunning.GetOperationRequest ? e : (t = new p.google.longrunning.GetOperationRequest, null != e.name && (t.name = String(e.name)), t);
    }, B.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), n;
    }, B.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, B), t.ListOperationsRequest = (s.prototype.name = "", s.prototype.filter = "", s.prototype.pageSize = 0, s.prototype.pageToken = "", s.create = function(e) {
        return new s(e);
    }, s.encode = function(e, t) {
        return t = t || r.create(), null != e.filter && Object.hasOwnProperty.call(e, "filter") && t.uint32(10).string(e.filter), null != e.pageSize && Object.hasOwnProperty.call(e, "pageSize") && t.uint32(16).int32(e.pageSize), null != e.pageToken && Object.hasOwnProperty.call(e, "pageToken") && t.uint32(26).string(e.pageToken), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(34).string(e.name), t;
    }, s.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, s.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.ListOperationsRequest; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 4:
                    o.name = e.string();
                    break;
                case 1:
                    o.filter = e.string();
                    break;
                case 2:
                    o.pageSize = e.int32();
                    break;
                case 3:
                    o.pageToken = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, s.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, s.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.name && e.hasOwnProperty("name") && !i.isString(e.name) ? "name: string expected" : null != e.filter && e.hasOwnProperty("filter") && !i.isString(e.filter) ? "filter: string expected" : null != e.pageSize && e.hasOwnProperty("pageSize") && !i.isInteger(e.pageSize) ? "pageSize: integer expected" : null != e.pageToken && e.hasOwnProperty("pageToken") && !i.isString(e.pageToken) ? "pageToken: string expected" : null;
    }, s.fromObject = function(e) {
        var t;
        return e instanceof p.google.longrunning.ListOperationsRequest ? e : (t = new p.google.longrunning.ListOperationsRequest, null != e.name && (t.name = String(e.name)), null != e.filter && (t.filter = String(e.filter)), null != e.pageSize && (t.pageSize = 0 | e.pageSize), null != e.pageToken && (t.pageToken = String(e.pageToken)), t);
    }, s.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.filter = "", n.pageSize = 0, n.pageToken = "", n.name = ""), null != e.filter && e.hasOwnProperty("filter") && (n.filter = e.filter), null != e.pageSize && e.hasOwnProperty("pageSize") && (n.pageSize = e.pageSize), null != e.pageToken && e.hasOwnProperty("pageToken") && (n.pageToken = e.pageToken), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), n;
    }, s.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, s), t.ListOperationsResponse = (u.prototype.operations = i.emptyArray, u.prototype.nextPageToken = "", u.create = function(e) {
        return new u(e);
    }, u.encode = function(e, t) {
        if (t = t || r.create(), null != e.operations && e.operations.length) for(var n = 0; n < e.operations.length; ++n)p.google.longrunning.Operation.encode(e.operations[n], t.uint32(10).fork()).ldelim();
        return null != e.nextPageToken && Object.hasOwnProperty.call(e, "nextPageToken") && t.uint32(18).string(e.nextPageToken), t;
    }, u.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, u.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.ListOperationsResponse; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.operations && o.operations.length || (o.operations = []), o.operations.push(p.google.longrunning.Operation.decode(e, e.uint32()));
                    break;
                case 2:
                    o.nextPageToken = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, u.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, u.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.operations && e.hasOwnProperty("operations")) {
            if (!Array.isArray(e.operations)) return "operations: array expected";
            for(var t = 0; t < e.operations.length; ++t){
                var n = p.google.longrunning.Operation.verify(e.operations[t]);
                if (n) return "operations." + n;
            }
        }
        return null != e.nextPageToken && e.hasOwnProperty("nextPageToken") && !i.isString(e.nextPageToken) ? "nextPageToken: string expected" : null;
    }, u.fromObject = function(e) {
        if (e instanceof p.google.longrunning.ListOperationsResponse) return e;
        var t = new p.google.longrunning.ListOperationsResponse;
        if (e.operations) {
            if (!Array.isArray(e.operations)) throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
            t.operations = [];
            for(var n = 0; n < e.operations.length; ++n){
                if ("object" != typeof e.operations[n]) throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                t.operations[n] = p.google.longrunning.Operation.fromObject(e.operations[n]);
            }
        }
        return null != e.nextPageToken && (t.nextPageToken = String(e.nextPageToken)), t;
    }, u.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.operations = []), t.defaults && (n.nextPageToken = ""), e.operations && e.operations.length) {
            n.operations = [];
            for(var o = 0; o < e.operations.length; ++o)n.operations[o] = p.google.longrunning.Operation.toObject(e.operations[o], t);
        }
        return null != e.nextPageToken && e.hasOwnProperty("nextPageToken") && (n.nextPageToken = e.nextPageToken), n;
    }, u.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, u), t.CancelOperationRequest = (L.prototype.name = "", L.create = function(e) {
        return new L(e);
    }, L.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), t;
    }, L.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, L.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.CancelOperationRequest; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? o.name = e.string() : e.skipType(7 & r);
        }
        return o;
    }, L.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, L.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.name && e.hasOwnProperty("name") && !i.isString(e.name) ? "name: string expected" : null;
    }, L.fromObject = function(e) {
        var t;
        return e instanceof p.google.longrunning.CancelOperationRequest ? e : (t = new p.google.longrunning.CancelOperationRequest, null != e.name && (t.name = String(e.name)), t);
    }, L.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), n;
    }, L.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, L), t.DeleteOperationRequest = (U.prototype.name = "", U.create = function(e) {
        return new U(e);
    }, U.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), t;
    }, U.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, U.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.DeleteOperationRequest; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? o.name = e.string() : e.skipType(7 & r);
        }
        return o;
    }, U.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, U.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.name && e.hasOwnProperty("name") && !i.isString(e.name) ? "name: string expected" : null;
    }, U.fromObject = function(e) {
        var t;
        return e instanceof p.google.longrunning.DeleteOperationRequest ? e : (t = new p.google.longrunning.DeleteOperationRequest, null != e.name && (t.name = String(e.name)), t);
    }, U.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), n;
    }, U.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, U), t.WaitOperationRequest = (c.prototype.name = "", c.prototype.timeout = null, c.create = function(e) {
        return new c(e);
    }, c.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.timeout && Object.hasOwnProperty.call(e, "timeout") && p.google.protobuf.Duration.encode(e.timeout, t.uint32(18).fork()).ldelim(), t;
    }, c.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, c.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.WaitOperationRequest; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.timeout = p.google.protobuf.Duration.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, c.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, c.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.timeout && e.hasOwnProperty("timeout")) {
            e = p.google.protobuf.Duration.verify(e.timeout);
            if (e) return "timeout." + e;
        }
        return null;
    }, c.fromObject = function(e) {
        if (e instanceof p.google.longrunning.WaitOperationRequest) return e;
        var t = new p.google.longrunning.WaitOperationRequest;
        if (null != e.name && (t.name = String(e.name)), null != e.timeout) {
            if ("object" != typeof e.timeout) throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
            t.timeout = p.google.protobuf.Duration.fromObject(e.timeout);
        }
        return t;
    }, c.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.timeout = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.timeout && e.hasOwnProperty("timeout") && (n.timeout = p.google.protobuf.Duration.toObject(e.timeout, t)), n;
    }, c.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, c), t.OperationInfo = (d.prototype.responseType = "", d.prototype.metadataType = "", d.create = function(e) {
        return new d(e);
    }, d.encode = function(e, t) {
        return t = t || r.create(), null != e.responseType && Object.hasOwnProperty.call(e, "responseType") && t.uint32(10).string(e.responseType), null != e.metadataType && Object.hasOwnProperty.call(e, "metadataType") && t.uint32(18).string(e.metadataType), t;
    }, d.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, d.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.longrunning.OperationInfo; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.responseType = e.string();
                    break;
                case 2:
                    o.metadataType = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, d.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, d.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.responseType && e.hasOwnProperty("responseType") && !i.isString(e.responseType) ? "responseType: string expected" : null != e.metadataType && e.hasOwnProperty("metadataType") && !i.isString(e.metadataType) ? "metadataType: string expected" : null;
    }, d.fromObject = function(e) {
        var t;
        return e instanceof p.google.longrunning.OperationInfo ? e : (t = new p.google.longrunning.OperationInfo, null != e.responseType && (t.responseType = String(e.responseType)), null != e.metadataType && (t.metadataType = String(e.metadataType)), t);
    }, d.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.responseType = "", n.metadataType = ""), null != e.responseType && e.hasOwnProperty("responseType") && (n.responseType = e.responseType), null != e.metadataType && e.hasOwnProperty("metadataType") && (n.metadataType = e.metadataType), n;
    }, d.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, d), t), F.api = ((n = {}).Http = (g.prototype.rules = i.emptyArray, g.prototype.fullyDecodeReservedExpansion = !1, g.create = function(e) {
        return new g(e);
    }, g.encode = function(e, t) {
        if (t = t || r.create(), null != e.rules && e.rules.length) for(var n = 0; n < e.rules.length; ++n)p.google.api.HttpRule.encode(e.rules[n], t.uint32(10).fork()).ldelim();
        return null != e.fullyDecodeReservedExpansion && Object.hasOwnProperty.call(e, "fullyDecodeReservedExpansion") && t.uint32(16).bool(e.fullyDecodeReservedExpansion), t;
    }, g.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, g.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.api.Http; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.rules && o.rules.length || (o.rules = []), o.rules.push(p.google.api.HttpRule.decode(e, e.uint32()));
                    break;
                case 2:
                    o.fullyDecodeReservedExpansion = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, g.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, g.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.rules && e.hasOwnProperty("rules")) {
            if (!Array.isArray(e.rules)) return "rules: array expected";
            for(var t = 0; t < e.rules.length; ++t){
                var n = p.google.api.HttpRule.verify(e.rules[t]);
                if (n) return "rules." + n;
            }
        }
        return null != e.fullyDecodeReservedExpansion && e.hasOwnProperty("fullyDecodeReservedExpansion") && "boolean" != typeof e.fullyDecodeReservedExpansion ? "fullyDecodeReservedExpansion: boolean expected" : null;
    }, g.fromObject = function(e) {
        if (e instanceof p.google.api.Http) return e;
        var t = new p.google.api.Http;
        if (e.rules) {
            if (!Array.isArray(e.rules)) throw TypeError(".google.api.Http.rules: array expected");
            t.rules = [];
            for(var n = 0; n < e.rules.length; ++n){
                if ("object" != typeof e.rules[n]) throw TypeError(".google.api.Http.rules: object expected");
                t.rules[n] = p.google.api.HttpRule.fromObject(e.rules[n]);
            }
        }
        return null != e.fullyDecodeReservedExpansion && (t.fullyDecodeReservedExpansion = Boolean(e.fullyDecodeReservedExpansion)), t;
    }, g.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.rules = []), t.defaults && (n.fullyDecodeReservedExpansion = !1), e.rules && e.rules.length) {
            n.rules = [];
            for(var o = 0; o < e.rules.length; ++o)n.rules[o] = p.google.api.HttpRule.toObject(e.rules[o], t);
        }
        return null != e.fullyDecodeReservedExpansion && e.hasOwnProperty("fullyDecodeReservedExpansion") && (n.fullyDecodeReservedExpansion = e.fullyDecodeReservedExpansion), n;
    }, g.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, g), n.HttpRule = (f.prototype.selector = "", f.prototype.get = "", f.prototype.put = "", f.prototype.post = "", f.prototype.delete = "", f.prototype.patch = "", f.prototype.custom = null, f.prototype.body = "", f.prototype.responseBody = "", f.prototype.additionalBindings = i.emptyArray, Object.defineProperty(f.prototype, "pattern", {
        get: i.oneOfGetter(t = [
            "get",
            "put",
            "post",
            "delete",
            "patch",
            "custom"
        ]),
        set: i.oneOfSetter(t)
    }), f.create = function(e) {
        return new f(e);
    }, f.encode = function(e, t) {
        if (t = t || r.create(), null != e.selector && Object.hasOwnProperty.call(e, "selector") && t.uint32(10).string(e.selector), null != e.get && Object.hasOwnProperty.call(e, "get") && t.uint32(18).string(e.get), null != e.put && Object.hasOwnProperty.call(e, "put") && t.uint32(26).string(e.put), null != e.post && Object.hasOwnProperty.call(e, "post") && t.uint32(34).string(e.post), null != e.delete && Object.hasOwnProperty.call(e, "delete") && t.uint32(42).string(e.delete), null != e.patch && Object.hasOwnProperty.call(e, "patch") && t.uint32(50).string(e.patch), null != e.body && Object.hasOwnProperty.call(e, "body") && t.uint32(58).string(e.body), null != e.custom && Object.hasOwnProperty.call(e, "custom") && p.google.api.CustomHttpPattern.encode(e.custom, t.uint32(66).fork()).ldelim(), null != e.additionalBindings && e.additionalBindings.length) for(var n = 0; n < e.additionalBindings.length; ++n)p.google.api.HttpRule.encode(e.additionalBindings[n], t.uint32(90).fork()).ldelim();
        return null != e.responseBody && Object.hasOwnProperty.call(e, "responseBody") && t.uint32(98).string(e.responseBody), t;
    }, f.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, f.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.api.HttpRule; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.selector = e.string();
                    break;
                case 2:
                    o.get = e.string();
                    break;
                case 3:
                    o.put = e.string();
                    break;
                case 4:
                    o.post = e.string();
                    break;
                case 5:
                    o.delete = e.string();
                    break;
                case 6:
                    o.patch = e.string();
                    break;
                case 8:
                    o.custom = p.google.api.CustomHttpPattern.decode(e, e.uint32());
                    break;
                case 7:
                    o.body = e.string();
                    break;
                case 12:
                    o.responseBody = e.string();
                    break;
                case 11:
                    o.additionalBindings && o.additionalBindings.length || (o.additionalBindings = []), o.additionalBindings.push(p.google.api.HttpRule.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, f.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, f.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        var t = {};
        if (null != e.selector && e.hasOwnProperty("selector") && !i.isString(e.selector)) return "selector: string expected";
        if (null != e.get && e.hasOwnProperty("get") && (t.pattern = 1, !i.isString(e.get))) return "get: string expected";
        if (null != e.put && e.hasOwnProperty("put")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !i.isString(e.put)) return "put: string expected";
        }
        if (null != e.post && e.hasOwnProperty("post")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !i.isString(e.post)) return "post: string expected";
        }
        if (null != e.delete && e.hasOwnProperty("delete")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !i.isString(e.delete)) return "delete: string expected";
        }
        if (null != e.patch && e.hasOwnProperty("patch")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !i.isString(e.patch)) return "patch: string expected";
        }
        if (null != e.custom && e.hasOwnProperty("custom")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, n = p.google.api.CustomHttpPattern.verify(e.custom)) return "custom." + n;
        }
        if (null != e.body && e.hasOwnProperty("body") && !i.isString(e.body)) return "body: string expected";
        if (null != e.responseBody && e.hasOwnProperty("responseBody") && !i.isString(e.responseBody)) return "responseBody: string expected";
        if (null != e.additionalBindings && e.hasOwnProperty("additionalBindings")) {
            if (!Array.isArray(e.additionalBindings)) return "additionalBindings: array expected";
            for(var n, o = 0; o < e.additionalBindings.length; ++o)if (n = p.google.api.HttpRule.verify(e.additionalBindings[o])) return "additionalBindings." + n;
        }
        return null;
    }, f.fromObject = function(e) {
        if (e instanceof p.google.api.HttpRule) return e;
        var t = new p.google.api.HttpRule;
        if (null != e.selector && (t.selector = String(e.selector)), null != e.get && (t.get = String(e.get)), null != e.put && (t.put = String(e.put)), null != e.post && (t.post = String(e.post)), null != e.delete && (t.delete = String(e.delete)), null != e.patch && (t.patch = String(e.patch)), null != e.custom) {
            if ("object" != typeof e.custom) throw TypeError(".google.api.HttpRule.custom: object expected");
            t.custom = p.google.api.CustomHttpPattern.fromObject(e.custom);
        }
        if (null != e.body && (t.body = String(e.body)), null != e.responseBody && (t.responseBody = String(e.responseBody)), e.additionalBindings) {
            if (!Array.isArray(e.additionalBindings)) throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
            t.additionalBindings = [];
            for(var n = 0; n < e.additionalBindings.length; ++n){
                if ("object" != typeof e.additionalBindings[n]) throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                t.additionalBindings[n] = p.google.api.HttpRule.fromObject(e.additionalBindings[n]);
            }
        }
        return t;
    }, f.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.additionalBindings = []), t.defaults && (n.selector = "", n.body = "", n.responseBody = ""), null != e.selector && e.hasOwnProperty("selector") && (n.selector = e.selector), null != e.get && e.hasOwnProperty("get") && (n.get = e.get, t.oneofs) && (n.pattern = "get"), null != e.put && e.hasOwnProperty("put") && (n.put = e.put, t.oneofs) && (n.pattern = "put"), null != e.post && e.hasOwnProperty("post") && (n.post = e.post, t.oneofs) && (n.pattern = "post"), null != e.delete && e.hasOwnProperty("delete") && (n.delete = e.delete, t.oneofs) && (n.pattern = "delete"), null != e.patch && e.hasOwnProperty("patch") && (n.patch = e.patch, t.oneofs) && (n.pattern = "patch"), null != e.body && e.hasOwnProperty("body") && (n.body = e.body), null != e.custom && e.hasOwnProperty("custom") && (n.custom = p.google.api.CustomHttpPattern.toObject(e.custom, t), t.oneofs) && (n.pattern = "custom"), e.additionalBindings && e.additionalBindings.length) {
            n.additionalBindings = [];
            for(var o = 0; o < e.additionalBindings.length; ++o)n.additionalBindings[o] = p.google.api.HttpRule.toObject(e.additionalBindings[o], t);
        }
        return null != e.responseBody && e.hasOwnProperty("responseBody") && (n.responseBody = e.responseBody), n;
    }, f.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, f), n.CustomHttpPattern = (y.prototype.kind = "", y.prototype.path = "", y.create = function(e) {
        return new y(e);
    }, y.encode = function(e, t) {
        return t = t || r.create(), null != e.kind && Object.hasOwnProperty.call(e, "kind") && t.uint32(10).string(e.kind), null != e.path && Object.hasOwnProperty.call(e, "path") && t.uint32(18).string(e.path), t;
    }, y.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, y.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.api.CustomHttpPattern; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.kind = e.string();
                    break;
                case 2:
                    o.path = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, y.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, y.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.kind && e.hasOwnProperty("kind") && !i.isString(e.kind) ? "kind: string expected" : null != e.path && e.hasOwnProperty("path") && !i.isString(e.path) ? "path: string expected" : null;
    }, y.fromObject = function(e) {
        var t;
        return e instanceof p.google.api.CustomHttpPattern ? e : (t = new p.google.api.CustomHttpPattern, null != e.kind && (t.kind = String(e.kind)), null != e.path && (t.path = String(e.path)), t);
    }, y.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.kind = "", n.path = ""), null != e.kind && e.hasOwnProperty("kind") && (n.kind = e.kind), null != e.path && e.hasOwnProperty("path") && (n.path = e.path), n;
    }, y.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, y), n), F.protobuf = ((t = {}).FileDescriptorSet = (J.prototype.file = i.emptyArray, J.create = function(e) {
        return new J(e);
    }, J.encode = function(e, t) {
        if (t = t || r.create(), null != e.file && e.file.length) for(var n = 0; n < e.file.length; ++n)p.google.protobuf.FileDescriptorProto.encode(e.file[n], t.uint32(10).fork()).ldelim();
        return t;
    }, J.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, J.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.FileDescriptorSet; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.file && o.file.length || (o.file = []), o.file.push(p.google.protobuf.FileDescriptorProto.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, J.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, J.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.file && e.hasOwnProperty("file")) {
            if (!Array.isArray(e.file)) return "file: array expected";
            for(var t = 0; t < e.file.length; ++t){
                var n = p.google.protobuf.FileDescriptorProto.verify(e.file[t]);
                if (n) return "file." + n;
            }
        }
        return null;
    }, J.fromObject = function(e) {
        if (e instanceof p.google.protobuf.FileDescriptorSet) return e;
        var t = new p.google.protobuf.FileDescriptorSet;
        if (e.file) {
            if (!Array.isArray(e.file)) throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
            t.file = [];
            for(var n = 0; n < e.file.length; ++n){
                if ("object" != typeof e.file[n]) throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                t.file[n] = p.google.protobuf.FileDescriptorProto.fromObject(e.file[n]);
            }
        }
        return t;
    }, J.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.file = []), e.file && e.file.length) {
            n.file = [];
            for(var o = 0; o < e.file.length; ++o)n.file[o] = p.google.protobuf.FileDescriptorProto.toObject(e.file[o], t);
        }
        return n;
    }, J.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, J), t.FileDescriptorProto = (h.prototype.name = "", h.prototype.package = "", h.prototype.dependency = i.emptyArray, h.prototype.publicDependency = i.emptyArray, h.prototype.weakDependency = i.emptyArray, h.prototype.messageType = i.emptyArray, h.prototype.enumType = i.emptyArray, h.prototype.service = i.emptyArray, h.prototype.extension = i.emptyArray, h.prototype.options = null, h.prototype.sourceCodeInfo = null, h.prototype.syntax = "", h.create = function(e) {
        return new h(e);
    }, h.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.package && Object.hasOwnProperty.call(e, "package") && t.uint32(18).string(e.package), null != e.dependency && e.dependency.length) for(var n = 0; n < e.dependency.length; ++n)t.uint32(26).string(e.dependency[n]);
        if (null != e.messageType && e.messageType.length) for(n = 0; n < e.messageType.length; ++n)p.google.protobuf.DescriptorProto.encode(e.messageType[n], t.uint32(34).fork()).ldelim();
        if (null != e.enumType && e.enumType.length) for(n = 0; n < e.enumType.length; ++n)p.google.protobuf.EnumDescriptorProto.encode(e.enumType[n], t.uint32(42).fork()).ldelim();
        if (null != e.service && e.service.length) for(n = 0; n < e.service.length; ++n)p.google.protobuf.ServiceDescriptorProto.encode(e.service[n], t.uint32(50).fork()).ldelim();
        if (null != e.extension && e.extension.length) for(n = 0; n < e.extension.length; ++n)p.google.protobuf.FieldDescriptorProto.encode(e.extension[n], t.uint32(58).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.FileOptions.encode(e.options, t.uint32(66).fork()).ldelim(), null != e.sourceCodeInfo && Object.hasOwnProperty.call(e, "sourceCodeInfo") && p.google.protobuf.SourceCodeInfo.encode(e.sourceCodeInfo, t.uint32(74).fork()).ldelim(), null != e.publicDependency && e.publicDependency.length) for(n = 0; n < e.publicDependency.length; ++n)t.uint32(80).int32(e.publicDependency[n]);
        if (null != e.weakDependency && e.weakDependency.length) for(n = 0; n < e.weakDependency.length; ++n)t.uint32(88).int32(e.weakDependency[n]);
        return null != e.syntax && Object.hasOwnProperty.call(e, "syntax") && t.uint32(98).string(e.syntax), t;
    }, h.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, h.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.FileDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.package = e.string();
                    break;
                case 3:
                    o.dependency && o.dependency.length || (o.dependency = []), o.dependency.push(e.string());
                    break;
                case 10:
                    if (o.publicDependency && o.publicDependency.length || (o.publicDependency = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.publicDependency.push(e.int32());
                    else o.publicDependency.push(e.int32());
                    break;
                case 11:
                    if (o.weakDependency && o.weakDependency.length || (o.weakDependency = []), 2 == (7 & r)) for(i = e.uint32() + e.pos; e.pos < i;)o.weakDependency.push(e.int32());
                    else o.weakDependency.push(e.int32());
                    break;
                case 4:
                    o.messageType && o.messageType.length || (o.messageType = []), o.messageType.push(p.google.protobuf.DescriptorProto.decode(e, e.uint32()));
                    break;
                case 5:
                    o.enumType && o.enumType.length || (o.enumType = []), o.enumType.push(p.google.protobuf.EnumDescriptorProto.decode(e, e.uint32()));
                    break;
                case 6:
                    o.service && o.service.length || (o.service = []), o.service.push(p.google.protobuf.ServiceDescriptorProto.decode(e, e.uint32()));
                    break;
                case 7:
                    o.extension && o.extension.length || (o.extension = []), o.extension.push(p.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 8:
                    o.options = p.google.protobuf.FileOptions.decode(e, e.uint32());
                    break;
                case 9:
                    o.sourceCodeInfo = p.google.protobuf.SourceCodeInfo.decode(e, e.uint32());
                    break;
                case 12:
                    o.syntax = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, h.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, h.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.package && e.hasOwnProperty("package") && !i.isString(e.package)) return "package: string expected";
        if (null != e.dependency && e.hasOwnProperty("dependency")) {
            if (!Array.isArray(e.dependency)) return "dependency: array expected";
            for(var t = 0; t < e.dependency.length; ++t)if (!i.isString(e.dependency[t])) return "dependency: string[] expected";
        }
        if (null != e.publicDependency && e.hasOwnProperty("publicDependency")) {
            if (!Array.isArray(e.publicDependency)) return "publicDependency: array expected";
            for(t = 0; t < e.publicDependency.length; ++t)if (!i.isInteger(e.publicDependency[t])) return "publicDependency: integer[] expected";
        }
        if (null != e.weakDependency && e.hasOwnProperty("weakDependency")) {
            if (!Array.isArray(e.weakDependency)) return "weakDependency: array expected";
            for(t = 0; t < e.weakDependency.length; ++t)if (!i.isInteger(e.weakDependency[t])) return "weakDependency: integer[] expected";
        }
        if (null != e.messageType && e.hasOwnProperty("messageType")) {
            if (!Array.isArray(e.messageType)) return "messageType: array expected";
            for(t = 0; t < e.messageType.length; ++t)if (n = p.google.protobuf.DescriptorProto.verify(e.messageType[t])) return "messageType." + n;
        }
        if (null != e.enumType && e.hasOwnProperty("enumType")) {
            if (!Array.isArray(e.enumType)) return "enumType: array expected";
            for(t = 0; t < e.enumType.length; ++t)if (n = p.google.protobuf.EnumDescriptorProto.verify(e.enumType[t])) return "enumType." + n;
        }
        if (null != e.service && e.hasOwnProperty("service")) {
            if (!Array.isArray(e.service)) return "service: array expected";
            for(t = 0; t < e.service.length; ++t)if (n = p.google.protobuf.ServiceDescriptorProto.verify(e.service[t])) return "service." + n;
        }
        if (null != e.extension && e.hasOwnProperty("extension")) {
            if (!Array.isArray(e.extension)) return "extension: array expected";
            for(t = 0; t < e.extension.length; ++t)if (n = p.google.protobuf.FieldDescriptorProto.verify(e.extension[t])) return "extension." + n;
        }
        var n;
        if (null != e.options && e.hasOwnProperty("options") && (n = p.google.protobuf.FileOptions.verify(e.options))) return "options." + n;
        if (null != e.sourceCodeInfo && e.hasOwnProperty("sourceCodeInfo") && (n = p.google.protobuf.SourceCodeInfo.verify(e.sourceCodeInfo))) return "sourceCodeInfo." + n;
        return null != e.syntax && e.hasOwnProperty("syntax") && !i.isString(e.syntax) ? "syntax: string expected" : null;
    }, h.fromObject = function(e) {
        if (e instanceof p.google.protobuf.FileDescriptorProto) return e;
        var t = new p.google.protobuf.FileDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.package && (t.package = String(e.package)), e.dependency) {
            if (!Array.isArray(e.dependency)) throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
            t.dependency = [];
            for(var n = 0; n < e.dependency.length; ++n)t.dependency[n] = String(e.dependency[n]);
        }
        if (e.publicDependency) {
            if (!Array.isArray(e.publicDependency)) throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
            t.publicDependency = [];
            for(n = 0; n < e.publicDependency.length; ++n)t.publicDependency[n] = 0 | e.publicDependency[n];
        }
        if (e.weakDependency) {
            if (!Array.isArray(e.weakDependency)) throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
            t.weakDependency = [];
            for(n = 0; n < e.weakDependency.length; ++n)t.weakDependency[n] = 0 | e.weakDependency[n];
        }
        if (e.messageType) {
            if (!Array.isArray(e.messageType)) throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
            t.messageType = [];
            for(n = 0; n < e.messageType.length; ++n){
                if ("object" != typeof e.messageType[n]) throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                t.messageType[n] = p.google.protobuf.DescriptorProto.fromObject(e.messageType[n]);
            }
        }
        if (e.enumType) {
            if (!Array.isArray(e.enumType)) throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
            t.enumType = [];
            for(n = 0; n < e.enumType.length; ++n){
                if ("object" != typeof e.enumType[n]) throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                t.enumType[n] = p.google.protobuf.EnumDescriptorProto.fromObject(e.enumType[n]);
            }
        }
        if (e.service) {
            if (!Array.isArray(e.service)) throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
            t.service = [];
            for(n = 0; n < e.service.length; ++n){
                if ("object" != typeof e.service[n]) throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                t.service[n] = p.google.protobuf.ServiceDescriptorProto.fromObject(e.service[n]);
            }
        }
        if (e.extension) {
            if (!Array.isArray(e.extension)) throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
            t.extension = [];
            for(n = 0; n < e.extension.length; ++n){
                if ("object" != typeof e.extension[n]) throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                t.extension[n] = p.google.protobuf.FieldDescriptorProto.fromObject(e.extension[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
            t.options = p.google.protobuf.FileOptions.fromObject(e.options);
        }
        if (null != e.sourceCodeInfo) {
            if ("object" != typeof e.sourceCodeInfo) throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
            t.sourceCodeInfo = p.google.protobuf.SourceCodeInfo.fromObject(e.sourceCodeInfo);
        }
        return null != e.syntax && (t.syntax = String(e.syntax)), t;
    }, h.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.dependency = [], n.messageType = [], n.enumType = [], n.service = [], n.extension = [], n.publicDependency = [], n.weakDependency = []), t.defaults && (n.name = "", n.package = "", n.options = null, n.sourceCodeInfo = null, n.syntax = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.package && e.hasOwnProperty("package") && (n.package = e.package), e.dependency && e.dependency.length) {
            n.dependency = [];
            for(var o = 0; o < e.dependency.length; ++o)n.dependency[o] = e.dependency[o];
        }
        if (e.messageType && e.messageType.length) {
            n.messageType = [];
            for(o = 0; o < e.messageType.length; ++o)n.messageType[o] = p.google.protobuf.DescriptorProto.toObject(e.messageType[o], t);
        }
        if (e.enumType && e.enumType.length) {
            n.enumType = [];
            for(o = 0; o < e.enumType.length; ++o)n.enumType[o] = p.google.protobuf.EnumDescriptorProto.toObject(e.enumType[o], t);
        }
        if (e.service && e.service.length) {
            n.service = [];
            for(o = 0; o < e.service.length; ++o)n.service[o] = p.google.protobuf.ServiceDescriptorProto.toObject(e.service[o], t);
        }
        if (e.extension && e.extension.length) {
            n.extension = [];
            for(o = 0; o < e.extension.length; ++o)n.extension[o] = p.google.protobuf.FieldDescriptorProto.toObject(e.extension[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.FileOptions.toObject(e.options, t)), null != e.sourceCodeInfo && e.hasOwnProperty("sourceCodeInfo") && (n.sourceCodeInfo = p.google.protobuf.SourceCodeInfo.toObject(e.sourceCodeInfo, t)), e.publicDependency && e.publicDependency.length) {
            n.publicDependency = [];
            for(o = 0; o < e.publicDependency.length; ++o)n.publicDependency[o] = e.publicDependency[o];
        }
        if (e.weakDependency && e.weakDependency.length) {
            n.weakDependency = [];
            for(o = 0; o < e.weakDependency.length; ++o)n.weakDependency[o] = e.weakDependency[o];
        }
        return null != e.syntax && e.hasOwnProperty("syntax") && (n.syntax = e.syntax), n;
    }, h.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, h), t.DescriptorProto = (O.prototype.name = "", O.prototype.field = i.emptyArray, O.prototype.extension = i.emptyArray, O.prototype.nestedType = i.emptyArray, O.prototype.enumType = i.emptyArray, O.prototype.extensionRange = i.emptyArray, O.prototype.oneofDecl = i.emptyArray, O.prototype.options = null, O.prototype.reservedRange = i.emptyArray, O.prototype.reservedName = i.emptyArray, O.create = function(e) {
        return new O(e);
    }, O.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.field && e.field.length) for(var n = 0; n < e.field.length; ++n)p.google.protobuf.FieldDescriptorProto.encode(e.field[n], t.uint32(18).fork()).ldelim();
        if (null != e.nestedType && e.nestedType.length) for(n = 0; n < e.nestedType.length; ++n)p.google.protobuf.DescriptorProto.encode(e.nestedType[n], t.uint32(26).fork()).ldelim();
        if (null != e.enumType && e.enumType.length) for(n = 0; n < e.enumType.length; ++n)p.google.protobuf.EnumDescriptorProto.encode(e.enumType[n], t.uint32(34).fork()).ldelim();
        if (null != e.extensionRange && e.extensionRange.length) for(n = 0; n < e.extensionRange.length; ++n)p.google.protobuf.DescriptorProto.ExtensionRange.encode(e.extensionRange[n], t.uint32(42).fork()).ldelim();
        if (null != e.extension && e.extension.length) for(n = 0; n < e.extension.length; ++n)p.google.protobuf.FieldDescriptorProto.encode(e.extension[n], t.uint32(50).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.MessageOptions.encode(e.options, t.uint32(58).fork()).ldelim(), null != e.oneofDecl && e.oneofDecl.length) for(n = 0; n < e.oneofDecl.length; ++n)p.google.protobuf.OneofDescriptorProto.encode(e.oneofDecl[n], t.uint32(66).fork()).ldelim();
        if (null != e.reservedRange && e.reservedRange.length) for(n = 0; n < e.reservedRange.length; ++n)p.google.protobuf.DescriptorProto.ReservedRange.encode(e.reservedRange[n], t.uint32(74).fork()).ldelim();
        if (null != e.reservedName && e.reservedName.length) for(n = 0; n < e.reservedName.length; ++n)t.uint32(82).string(e.reservedName[n]);
        return t;
    }, O.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, O.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.DescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.field && o.field.length || (o.field = []), o.field.push(p.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 6:
                    o.extension && o.extension.length || (o.extension = []), o.extension.push(p.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.nestedType && o.nestedType.length || (o.nestedType = []), o.nestedType.push(p.google.protobuf.DescriptorProto.decode(e, e.uint32()));
                    break;
                case 4:
                    o.enumType && o.enumType.length || (o.enumType = []), o.enumType.push(p.google.protobuf.EnumDescriptorProto.decode(e, e.uint32()));
                    break;
                case 5:
                    o.extensionRange && o.extensionRange.length || (o.extensionRange = []), o.extensionRange.push(p.google.protobuf.DescriptorProto.ExtensionRange.decode(e, e.uint32()));
                    break;
                case 8:
                    o.oneofDecl && o.oneofDecl.length || (o.oneofDecl = []), o.oneofDecl.push(p.google.protobuf.OneofDescriptorProto.decode(e, e.uint32()));
                    break;
                case 7:
                    o.options = p.google.protobuf.MessageOptions.decode(e, e.uint32());
                    break;
                case 9:
                    o.reservedRange && o.reservedRange.length || (o.reservedRange = []), o.reservedRange.push(p.google.protobuf.DescriptorProto.ReservedRange.decode(e, e.uint32()));
                    break;
                case 10:
                    o.reservedName && o.reservedName.length || (o.reservedName = []), o.reservedName.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, O.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, O.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.field && e.hasOwnProperty("field")) {
            if (!Array.isArray(e.field)) return "field: array expected";
            for(var t = 0; t < e.field.length; ++t)if (n = p.google.protobuf.FieldDescriptorProto.verify(e.field[t])) return "field." + n;
        }
        if (null != e.extension && e.hasOwnProperty("extension")) {
            if (!Array.isArray(e.extension)) return "extension: array expected";
            for(t = 0; t < e.extension.length; ++t)if (n = p.google.protobuf.FieldDescriptorProto.verify(e.extension[t])) return "extension." + n;
        }
        if (null != e.nestedType && e.hasOwnProperty("nestedType")) {
            if (!Array.isArray(e.nestedType)) return "nestedType: array expected";
            for(t = 0; t < e.nestedType.length; ++t)if (n = p.google.protobuf.DescriptorProto.verify(e.nestedType[t])) return "nestedType." + n;
        }
        if (null != e.enumType && e.hasOwnProperty("enumType")) {
            if (!Array.isArray(e.enumType)) return "enumType: array expected";
            for(t = 0; t < e.enumType.length; ++t)if (n = p.google.protobuf.EnumDescriptorProto.verify(e.enumType[t])) return "enumType." + n;
        }
        if (null != e.extensionRange && e.hasOwnProperty("extensionRange")) {
            if (!Array.isArray(e.extensionRange)) return "extensionRange: array expected";
            for(t = 0; t < e.extensionRange.length; ++t)if (n = p.google.protobuf.DescriptorProto.ExtensionRange.verify(e.extensionRange[t])) return "extensionRange." + n;
        }
        if (null != e.oneofDecl && e.hasOwnProperty("oneofDecl")) {
            if (!Array.isArray(e.oneofDecl)) return "oneofDecl: array expected";
            for(t = 0; t < e.oneofDecl.length; ++t)if (n = p.google.protobuf.OneofDescriptorProto.verify(e.oneofDecl[t])) return "oneofDecl." + n;
        }
        if (null != e.options && e.hasOwnProperty("options") && (n = p.google.protobuf.MessageOptions.verify(e.options))) return "options." + n;
        if (null != e.reservedRange && e.hasOwnProperty("reservedRange")) {
            if (!Array.isArray(e.reservedRange)) return "reservedRange: array expected";
            for(var n, t = 0; t < e.reservedRange.length; ++t)if (n = p.google.protobuf.DescriptorProto.ReservedRange.verify(e.reservedRange[t])) return "reservedRange." + n;
        }
        if (null != e.reservedName && e.hasOwnProperty("reservedName")) {
            if (!Array.isArray(e.reservedName)) return "reservedName: array expected";
            for(t = 0; t < e.reservedName.length; ++t)if (!i.isString(e.reservedName[t])) return "reservedName: string[] expected";
        }
        return null;
    }, O.fromObject = function(e) {
        if (e instanceof p.google.protobuf.DescriptorProto) return e;
        var t = new p.google.protobuf.DescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.field) {
            if (!Array.isArray(e.field)) throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
            t.field = [];
            for(var n = 0; n < e.field.length; ++n){
                if ("object" != typeof e.field[n]) throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                t.field[n] = p.google.protobuf.FieldDescriptorProto.fromObject(e.field[n]);
            }
        }
        if (e.extension) {
            if (!Array.isArray(e.extension)) throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
            t.extension = [];
            for(n = 0; n < e.extension.length; ++n){
                if ("object" != typeof e.extension[n]) throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                t.extension[n] = p.google.protobuf.FieldDescriptorProto.fromObject(e.extension[n]);
            }
        }
        if (e.nestedType) {
            if (!Array.isArray(e.nestedType)) throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
            t.nestedType = [];
            for(n = 0; n < e.nestedType.length; ++n){
                if ("object" != typeof e.nestedType[n]) throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                t.nestedType[n] = p.google.protobuf.DescriptorProto.fromObject(e.nestedType[n]);
            }
        }
        if (e.enumType) {
            if (!Array.isArray(e.enumType)) throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
            t.enumType = [];
            for(n = 0; n < e.enumType.length; ++n){
                if ("object" != typeof e.enumType[n]) throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                t.enumType[n] = p.google.protobuf.EnumDescriptorProto.fromObject(e.enumType[n]);
            }
        }
        if (e.extensionRange) {
            if (!Array.isArray(e.extensionRange)) throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
            t.extensionRange = [];
            for(n = 0; n < e.extensionRange.length; ++n){
                if ("object" != typeof e.extensionRange[n]) throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                t.extensionRange[n] = p.google.protobuf.DescriptorProto.ExtensionRange.fromObject(e.extensionRange[n]);
            }
        }
        if (e.oneofDecl) {
            if (!Array.isArray(e.oneofDecl)) throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
            t.oneofDecl = [];
            for(n = 0; n < e.oneofDecl.length; ++n){
                if ("object" != typeof e.oneofDecl[n]) throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                t.oneofDecl[n] = p.google.protobuf.OneofDescriptorProto.fromObject(e.oneofDecl[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
            t.options = p.google.protobuf.MessageOptions.fromObject(e.options);
        }
        if (e.reservedRange) {
            if (!Array.isArray(e.reservedRange)) throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
            t.reservedRange = [];
            for(n = 0; n < e.reservedRange.length; ++n){
                if ("object" != typeof e.reservedRange[n]) throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                t.reservedRange[n] = p.google.protobuf.DescriptorProto.ReservedRange.fromObject(e.reservedRange[n]);
            }
        }
        if (e.reservedName) {
            if (!Array.isArray(e.reservedName)) throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
            t.reservedName = [];
            for(n = 0; n < e.reservedName.length; ++n)t.reservedName[n] = String(e.reservedName[n]);
        }
        return t;
    }, O.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.field = [], n.nestedType = [], n.enumType = [], n.extensionRange = [], n.extension = [], n.oneofDecl = [], n.reservedRange = [], n.reservedName = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.field && e.field.length) {
            n.field = [];
            for(var o = 0; o < e.field.length; ++o)n.field[o] = p.google.protobuf.FieldDescriptorProto.toObject(e.field[o], t);
        }
        if (e.nestedType && e.nestedType.length) {
            n.nestedType = [];
            for(o = 0; o < e.nestedType.length; ++o)n.nestedType[o] = p.google.protobuf.DescriptorProto.toObject(e.nestedType[o], t);
        }
        if (e.enumType && e.enumType.length) {
            n.enumType = [];
            for(o = 0; o < e.enumType.length; ++o)n.enumType[o] = p.google.protobuf.EnumDescriptorProto.toObject(e.enumType[o], t);
        }
        if (e.extensionRange && e.extensionRange.length) {
            n.extensionRange = [];
            for(o = 0; o < e.extensionRange.length; ++o)n.extensionRange[o] = p.google.protobuf.DescriptorProto.ExtensionRange.toObject(e.extensionRange[o], t);
        }
        if (e.extension && e.extension.length) {
            n.extension = [];
            for(o = 0; o < e.extension.length; ++o)n.extension[o] = p.google.protobuf.FieldDescriptorProto.toObject(e.extension[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.MessageOptions.toObject(e.options, t)), e.oneofDecl && e.oneofDecl.length) {
            n.oneofDecl = [];
            for(o = 0; o < e.oneofDecl.length; ++o)n.oneofDecl[o] = p.google.protobuf.OneofDescriptorProto.toObject(e.oneofDecl[o], t);
        }
        if (e.reservedRange && e.reservedRange.length) {
            n.reservedRange = [];
            for(o = 0; o < e.reservedRange.length; ++o)n.reservedRange[o] = p.google.protobuf.DescriptorProto.ReservedRange.toObject(e.reservedRange[o], t);
        }
        if (e.reservedName && e.reservedName.length) {
            n.reservedName = [];
            for(o = 0; o < e.reservedName.length; ++o)n.reservedName[o] = e.reservedName[o];
        }
        return n;
    }, O.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, O.ExtensionRange = (b.prototype.start = 0, b.prototype.end = 0, b.prototype.options = null, b.create = function(e) {
        return new b(e);
    }, b.encode = function(e, t) {
        return t = t || r.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.ExtensionRangeOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, b.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, b.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.DescriptorProto.ExtensionRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                case 3:
                    o.options = p.google.protobuf.ExtensionRangeOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, b.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, b.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.start && e.hasOwnProperty("start") && !i.isInteger(e.start)) return "start: integer expected";
        if (null != e.end && e.hasOwnProperty("end") && !i.isInteger(e.end)) return "end: integer expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = p.google.protobuf.ExtensionRangeOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, b.fromObject = function(e) {
        if (e instanceof p.google.protobuf.DescriptorProto.ExtensionRange) return e;
        var t = new p.google.protobuf.DescriptorProto.ExtensionRange;
        if (null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
            t.options = p.google.protobuf.ExtensionRangeOptions.fromObject(e.options);
        }
        return t;
    }, b.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0, n.options = null), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.ExtensionRangeOptions.toObject(e.options, t)), n;
    }, b.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, b), O.ReservedRange = (m.prototype.start = 0, m.prototype.end = 0, m.create = function(e) {
        return new m(e);
    }, m.encode = function(e, t) {
        return t = t || r.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), t;
    }, m.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, m.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.DescriptorProto.ReservedRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, m.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, m.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.start && e.hasOwnProperty("start") && !i.isInteger(e.start) ? "start: integer expected" : null != e.end && e.hasOwnProperty("end") && !i.isInteger(e.end) ? "end: integer expected" : null;
    }, m.fromObject = function(e) {
        var t;
        return e instanceof p.google.protobuf.DescriptorProto.ReservedRange ? e : (t = new p.google.protobuf.DescriptorProto.ReservedRange, null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), t);
    }, m.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, m.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, m), O), t.ExtensionRangeOptions = (M.prototype.uninterpretedOption = i.emptyArray, M.create = function(e) {
        return new M(e);
    }, M.encode = function(e, t) {
        if (t = t || r.create(), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, M.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, M.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.ExtensionRangeOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 999 ? (o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, M.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, M.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, M.fromObject = function(e) {
        if (e instanceof p.google.protobuf.ExtensionRangeOptions) return e;
        var t = new p.google.protobuf.ExtensionRangeOptions;
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, M.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, M.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, M), t.FieldDescriptorProto = (v.prototype.name = "", v.prototype.number = 0, v.prototype.label = 1, v.prototype.type = 1, v.prototype.typeName = "", v.prototype.extendee = "", v.prototype.defaultValue = "", v.prototype.oneofIndex = 0, v.prototype.jsonName = "", v.prototype.options = null, v.prototype.proto3Optional = !1, v.create = function(e) {
        return new v(e);
    }, v.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.extendee && Object.hasOwnProperty.call(e, "extendee") && t.uint32(18).string(e.extendee), null != e.number && Object.hasOwnProperty.call(e, "number") && t.uint32(24).int32(e.number), null != e.label && Object.hasOwnProperty.call(e, "label") && t.uint32(32).int32(e.label), null != e.type && Object.hasOwnProperty.call(e, "type") && t.uint32(40).int32(e.type), null != e.typeName && Object.hasOwnProperty.call(e, "typeName") && t.uint32(50).string(e.typeName), null != e.defaultValue && Object.hasOwnProperty.call(e, "defaultValue") && t.uint32(58).string(e.defaultValue), null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.FieldOptions.encode(e.options, t.uint32(66).fork()).ldelim(), null != e.oneofIndex && Object.hasOwnProperty.call(e, "oneofIndex") && t.uint32(72).int32(e.oneofIndex), null != e.jsonName && Object.hasOwnProperty.call(e, "jsonName") && t.uint32(82).string(e.jsonName), null != e.proto3Optional && Object.hasOwnProperty.call(e, "proto3Optional") && t.uint32(136).bool(e.proto3Optional), t;
    }, v.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, v.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.FieldDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 3:
                    o.number = e.int32();
                    break;
                case 4:
                    o.label = e.int32();
                    break;
                case 5:
                    o.type = e.int32();
                    break;
                case 6:
                    o.typeName = e.string();
                    break;
                case 2:
                    o.extendee = e.string();
                    break;
                case 7:
                    o.defaultValue = e.string();
                    break;
                case 9:
                    o.oneofIndex = e.int32();
                    break;
                case 10:
                    o.jsonName = e.string();
                    break;
                case 8:
                    o.options = p.google.protobuf.FieldOptions.decode(e, e.uint32());
                    break;
                case 17:
                    o.proto3Optional = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, v.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, v.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.number && e.hasOwnProperty("number") && !i.isInteger(e.number)) return "number: integer expected";
        if (null != e.label && e.hasOwnProperty("label")) switch(e.label){
            default:
                return "label: enum value expected";
            case 1:
            case 2:
            case 3:
        }
        if (null != e.type && e.hasOwnProperty("type")) switch(e.type){
            default:
                return "type: enum value expected";
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
        }
        if (null != e.typeName && e.hasOwnProperty("typeName") && !i.isString(e.typeName)) return "typeName: string expected";
        if (null != e.extendee && e.hasOwnProperty("extendee") && !i.isString(e.extendee)) return "extendee: string expected";
        if (null != e.defaultValue && e.hasOwnProperty("defaultValue") && !i.isString(e.defaultValue)) return "defaultValue: string expected";
        if (null != e.oneofIndex && e.hasOwnProperty("oneofIndex") && !i.isInteger(e.oneofIndex)) return "oneofIndex: integer expected";
        if (null != e.jsonName && e.hasOwnProperty("jsonName") && !i.isString(e.jsonName)) return "jsonName: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            var t = p.google.protobuf.FieldOptions.verify(e.options);
            if (t) return "options." + t;
        }
        return null != e.proto3Optional && e.hasOwnProperty("proto3Optional") && "boolean" != typeof e.proto3Optional ? "proto3Optional: boolean expected" : null;
    }, v.fromObject = function(e) {
        if (e instanceof p.google.protobuf.FieldDescriptorProto) return e;
        var t = new p.google.protobuf.FieldDescriptorProto;
        switch(null != e.name && (t.name = String(e.name)), null != e.number && (t.number = 0 | e.number), e.label){
            case "LABEL_OPTIONAL":
            case 1:
                t.label = 1;
                break;
            case "LABEL_REQUIRED":
            case 2:
                t.label = 2;
                break;
            case "LABEL_REPEATED":
            case 3:
                t.label = 3;
        }
        switch(e.type){
            case "TYPE_DOUBLE":
            case 1:
                t.type = 1;
                break;
            case "TYPE_FLOAT":
            case 2:
                t.type = 2;
                break;
            case "TYPE_INT64":
            case 3:
                t.type = 3;
                break;
            case "TYPE_UINT64":
            case 4:
                t.type = 4;
                break;
            case "TYPE_INT32":
            case 5:
                t.type = 5;
                break;
            case "TYPE_FIXED64":
            case 6:
                t.type = 6;
                break;
            case "TYPE_FIXED32":
            case 7:
                t.type = 7;
                break;
            case "TYPE_BOOL":
            case 8:
                t.type = 8;
                break;
            case "TYPE_STRING":
            case 9:
                t.type = 9;
                break;
            case "TYPE_GROUP":
            case 10:
                t.type = 10;
                break;
            case "TYPE_MESSAGE":
            case 11:
                t.type = 11;
                break;
            case "TYPE_BYTES":
            case 12:
                t.type = 12;
                break;
            case "TYPE_UINT32":
            case 13:
                t.type = 13;
                break;
            case "TYPE_ENUM":
            case 14:
                t.type = 14;
                break;
            case "TYPE_SFIXED32":
            case 15:
                t.type = 15;
                break;
            case "TYPE_SFIXED64":
            case 16:
                t.type = 16;
                break;
            case "TYPE_SINT32":
            case 17:
                t.type = 17;
                break;
            case "TYPE_SINT64":
            case 18:
                t.type = 18;
        }
        if (null != e.typeName && (t.typeName = String(e.typeName)), null != e.extendee && (t.extendee = String(e.extendee)), null != e.defaultValue && (t.defaultValue = String(e.defaultValue)), null != e.oneofIndex && (t.oneofIndex = 0 | e.oneofIndex), null != e.jsonName && (t.jsonName = String(e.jsonName)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
            t.options = p.google.protobuf.FieldOptions.fromObject(e.options);
        }
        return null != e.proto3Optional && (t.proto3Optional = Boolean(e.proto3Optional)), t;
    }, v.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.extendee = "", n.number = 0, n.label = t.enums === String ? "LABEL_OPTIONAL" : 1, n.type = t.enums === String ? "TYPE_DOUBLE" : 1, n.typeName = "", n.defaultValue = "", n.options = null, n.oneofIndex = 0, n.jsonName = "", n.proto3Optional = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.extendee && e.hasOwnProperty("extendee") && (n.extendee = e.extendee), null != e.number && e.hasOwnProperty("number") && (n.number = e.number), null != e.label && e.hasOwnProperty("label") && (n.label = t.enums === String ? p.google.protobuf.FieldDescriptorProto.Label[e.label] : e.label), null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? p.google.protobuf.FieldDescriptorProto.Type[e.type] : e.type), null != e.typeName && e.hasOwnProperty("typeName") && (n.typeName = e.typeName), null != e.defaultValue && e.hasOwnProperty("defaultValue") && (n.defaultValue = e.defaultValue), null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.FieldOptions.toObject(e.options, t)), null != e.oneofIndex && e.hasOwnProperty("oneofIndex") && (n.oneofIndex = e.oneofIndex), null != e.jsonName && e.hasOwnProperty("jsonName") && (n.jsonName = e.jsonName), null != e.proto3Optional && e.hasOwnProperty("proto3Optional") && (n.proto3Optional = e.proto3Optional), n;
    }, v.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, v.Type = (n = {}, (e = Object.create(n))[n[1] = "TYPE_DOUBLE"] = 1, e[n[2] = "TYPE_FLOAT"] = 2, e[n[3] = "TYPE_INT64"] = 3, e[n[4] = "TYPE_UINT64"] = 4, e[n[5] = "TYPE_INT32"] = 5, e[n[6] = "TYPE_FIXED64"] = 6, e[n[7] = "TYPE_FIXED32"] = 7, e[n[8] = "TYPE_BOOL"] = 8, e[n[9] = "TYPE_STRING"] = 9, e[n[10] = "TYPE_GROUP"] = 10, e[n[11] = "TYPE_MESSAGE"] = 11, e[n[12] = "TYPE_BYTES"] = 12, e[n[13] = "TYPE_UINT32"] = 13, e[n[14] = "TYPE_ENUM"] = 14, e[n[15] = "TYPE_SFIXED32"] = 15, e[n[16] = "TYPE_SFIXED64"] = 16, e[n[17] = "TYPE_SINT32"] = 17, e[n[18] = "TYPE_SINT64"] = 18, e), v.Label = (n = {}, (e = Object.create(n))[n[1] = "LABEL_OPTIONAL"] = 1, e[n[2] = "LABEL_REQUIRED"] = 2, e[n[3] = "LABEL_REPEATED"] = 3, e), v), t.OneofDescriptorProto = (w.prototype.name = "", w.prototype.options = null, w.create = function(e) {
        return new w(e);
    }, w.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.OneofOptions.encode(e.options, t.uint32(18).fork()).ldelim(), t;
    }, w.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, w.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.OneofDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.options = p.google.protobuf.OneofOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, w.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, w.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = p.google.protobuf.OneofOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, w.fromObject = function(e) {
        if (e instanceof p.google.protobuf.OneofDescriptorProto) return e;
        var t = new p.google.protobuf.OneofDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
            t.options = p.google.protobuf.OneofOptions.fromObject(e.options);
        }
        return t;
    }, w.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.OneofOptions.toObject(e.options, t)), n;
    }, w.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, w), t.EnumDescriptorProto = (P.prototype.name = "", P.prototype.value = i.emptyArray, P.prototype.options = null, P.prototype.reservedRange = i.emptyArray, P.prototype.reservedName = i.emptyArray, P.create = function(e) {
        return new P(e);
    }, P.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.value && e.value.length) for(var n = 0; n < e.value.length; ++n)p.google.protobuf.EnumValueDescriptorProto.encode(e.value[n], t.uint32(18).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.EnumOptions.encode(e.options, t.uint32(26).fork()).ldelim(), null != e.reservedRange && e.reservedRange.length) for(n = 0; n < e.reservedRange.length; ++n)p.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(e.reservedRange[n], t.uint32(34).fork()).ldelim();
        if (null != e.reservedName && e.reservedName.length) for(n = 0; n < e.reservedName.length; ++n)t.uint32(42).string(e.reservedName[n]);
        return t;
    }, P.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, P.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.EnumDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.value && o.value.length || (o.value = []), o.value.push(p.google.protobuf.EnumValueDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.options = p.google.protobuf.EnumOptions.decode(e, e.uint32());
                    break;
                case 4:
                    o.reservedRange && o.reservedRange.length || (o.reservedRange = []), o.reservedRange.push(p.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(e, e.uint32()));
                    break;
                case 5:
                    o.reservedName && o.reservedName.length || (o.reservedName = []), o.reservedName.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, P.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, P.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.value && e.hasOwnProperty("value")) {
            if (!Array.isArray(e.value)) return "value: array expected";
            for(var t = 0; t < e.value.length; ++t)if (n = p.google.protobuf.EnumValueDescriptorProto.verify(e.value[t])) return "value." + n;
        }
        if (null != e.options && e.hasOwnProperty("options") && (n = p.google.protobuf.EnumOptions.verify(e.options))) return "options." + n;
        if (null != e.reservedRange && e.hasOwnProperty("reservedRange")) {
            if (!Array.isArray(e.reservedRange)) return "reservedRange: array expected";
            for(var n, t = 0; t < e.reservedRange.length; ++t)if (n = p.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(e.reservedRange[t])) return "reservedRange." + n;
        }
        if (null != e.reservedName && e.hasOwnProperty("reservedName")) {
            if (!Array.isArray(e.reservedName)) return "reservedName: array expected";
            for(t = 0; t < e.reservedName.length; ++t)if (!i.isString(e.reservedName[t])) return "reservedName: string[] expected";
        }
        return null;
    }, P.fromObject = function(e) {
        if (e instanceof p.google.protobuf.EnumDescriptorProto) return e;
        var t = new p.google.protobuf.EnumDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.value) {
            if (!Array.isArray(e.value)) throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
            t.value = [];
            for(var n = 0; n < e.value.length; ++n){
                if ("object" != typeof e.value[n]) throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                t.value[n] = p.google.protobuf.EnumValueDescriptorProto.fromObject(e.value[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
            t.options = p.google.protobuf.EnumOptions.fromObject(e.options);
        }
        if (e.reservedRange) {
            if (!Array.isArray(e.reservedRange)) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
            t.reservedRange = [];
            for(n = 0; n < e.reservedRange.length; ++n){
                if ("object" != typeof e.reservedRange[n]) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                t.reservedRange[n] = p.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(e.reservedRange[n]);
            }
        }
        if (e.reservedName) {
            if (!Array.isArray(e.reservedName)) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
            t.reservedName = [];
            for(n = 0; n < e.reservedName.length; ++n)t.reservedName[n] = String(e.reservedName[n]);
        }
        return t;
    }, P.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.value = [], n.reservedRange = [], n.reservedName = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.value && e.value.length) {
            n.value = [];
            for(var o = 0; o < e.value.length; ++o)n.value[o] = p.google.protobuf.EnumValueDescriptorProto.toObject(e.value[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.EnumOptions.toObject(e.options, t)), e.reservedRange && e.reservedRange.length) {
            n.reservedRange = [];
            for(o = 0; o < e.reservedRange.length; ++o)n.reservedRange[o] = p.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(e.reservedRange[o], t);
        }
        if (e.reservedName && e.reservedName.length) {
            n.reservedName = [];
            for(o = 0; o < e.reservedName.length; ++o)n.reservedName[o] = e.reservedName[o];
        }
        return n;
    }, P.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, P.EnumReservedRange = (_.prototype.start = 0, _.prototype.end = 0, _.create = function(e) {
        return new _(e);
    }, _.encode = function(e, t) {
        return t = t || r.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), t;
    }, _.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, _.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.EnumDescriptorProto.EnumReservedRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, _.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, _.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.start && e.hasOwnProperty("start") && !i.isInteger(e.start) ? "start: integer expected" : null != e.end && e.hasOwnProperty("end") && !i.isInteger(e.end) ? "end: integer expected" : null;
    }, _.fromObject = function(e) {
        var t;
        return e instanceof p.google.protobuf.EnumDescriptorProto.EnumReservedRange ? e : (t = new p.google.protobuf.EnumDescriptorProto.EnumReservedRange, null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), t);
    }, _.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, _.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, _), P), t.EnumValueDescriptorProto = (j.prototype.name = "", j.prototype.number = 0, j.prototype.options = null, j.create = function(e) {
        return new j(e);
    }, j.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.number && Object.hasOwnProperty.call(e, "number") && t.uint32(16).int32(e.number), null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.EnumValueOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, j.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, j.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.EnumValueDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.number = e.int32();
                    break;
                case 3:
                    o.options = p.google.protobuf.EnumValueOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, j.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, j.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.number && e.hasOwnProperty("number") && !i.isInteger(e.number)) return "number: integer expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = p.google.protobuf.EnumValueOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, j.fromObject = function(e) {
        if (e instanceof p.google.protobuf.EnumValueDescriptorProto) return e;
        var t = new p.google.protobuf.EnumValueDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.number && (t.number = 0 | e.number), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
            t.options = p.google.protobuf.EnumValueOptions.fromObject(e.options);
        }
        return t;
    }, j.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.number = 0, n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.number && e.hasOwnProperty("number") && (n.number = e.number), null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.EnumValueOptions.toObject(e.options, t)), n;
    }, j.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, j), t.ServiceDescriptorProto = (S.prototype.name = "", S.prototype.method = i.emptyArray, S.prototype.options = null, S.create = function(e) {
        return new S(e);
    }, S.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.method && e.method.length) for(var n = 0; n < e.method.length; ++n)p.google.protobuf.MethodDescriptorProto.encode(e.method[n], t.uint32(18).fork()).ldelim();
        return null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.ServiceOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, S.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, S.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.ServiceDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.method && o.method.length || (o.method = []), o.method.push(p.google.protobuf.MethodDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.options = p.google.protobuf.ServiceOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, S.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, S.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.method && e.hasOwnProperty("method")) {
            if (!Array.isArray(e.method)) return "method: array expected";
            for(var t = 0; t < e.method.length; ++t)if (n = p.google.protobuf.MethodDescriptorProto.verify(e.method[t])) return "method." + n;
        }
        var n;
        if (null != e.options && e.hasOwnProperty("options") && (n = p.google.protobuf.ServiceOptions.verify(e.options))) return "options." + n;
        return null;
    }, S.fromObject = function(e) {
        if (e instanceof p.google.protobuf.ServiceDescriptorProto) return e;
        var t = new p.google.protobuf.ServiceDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.method) {
            if (!Array.isArray(e.method)) throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
            t.method = [];
            for(var n = 0; n < e.method.length; ++n){
                if ("object" != typeof e.method[n]) throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                t.method[n] = p.google.protobuf.MethodDescriptorProto.fromObject(e.method[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
            t.options = p.google.protobuf.ServiceOptions.fromObject(e.options);
        }
        return t;
    }, S.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.method = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.method && e.method.length) {
            n.method = [];
            for(var o = 0; o < e.method.length; ++o)n.method[o] = p.google.protobuf.MethodDescriptorProto.toObject(e.method[o], t);
        }
        return null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.ServiceOptions.toObject(e.options, t)), n;
    }, S.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, S), t.MethodDescriptorProto = (x.prototype.name = "", x.prototype.inputType = "", x.prototype.outputType = "", x.prototype.options = null, x.prototype.clientStreaming = !1, x.prototype.serverStreaming = !1, x.create = function(e) {
        return new x(e);
    }, x.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.inputType && Object.hasOwnProperty.call(e, "inputType") && t.uint32(18).string(e.inputType), null != e.outputType && Object.hasOwnProperty.call(e, "outputType") && t.uint32(26).string(e.outputType), null != e.options && Object.hasOwnProperty.call(e, "options") && p.google.protobuf.MethodOptions.encode(e.options, t.uint32(34).fork()).ldelim(), null != e.clientStreaming && Object.hasOwnProperty.call(e, "clientStreaming") && t.uint32(40).bool(e.clientStreaming), null != e.serverStreaming && Object.hasOwnProperty.call(e, "serverStreaming") && t.uint32(48).bool(e.serverStreaming), t;
    }, x.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, x.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.MethodDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.inputType = e.string();
                    break;
                case 3:
                    o.outputType = e.string();
                    break;
                case 4:
                    o.options = p.google.protobuf.MethodOptions.decode(e, e.uint32());
                    break;
                case 5:
                    o.clientStreaming = e.bool();
                    break;
                case 6:
                    o.serverStreaming = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, x.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, x.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !i.isString(e.name)) return "name: string expected";
        if (null != e.inputType && e.hasOwnProperty("inputType") && !i.isString(e.inputType)) return "inputType: string expected";
        if (null != e.outputType && e.hasOwnProperty("outputType") && !i.isString(e.outputType)) return "outputType: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            var t = p.google.protobuf.MethodOptions.verify(e.options);
            if (t) return "options." + t;
        }
        return null != e.clientStreaming && e.hasOwnProperty("clientStreaming") && "boolean" != typeof e.clientStreaming ? "clientStreaming: boolean expected" : null != e.serverStreaming && e.hasOwnProperty("serverStreaming") && "boolean" != typeof e.serverStreaming ? "serverStreaming: boolean expected" : null;
    }, x.fromObject = function(e) {
        if (e instanceof p.google.protobuf.MethodDescriptorProto) return e;
        var t = new p.google.protobuf.MethodDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.inputType && (t.inputType = String(e.inputType)), null != e.outputType && (t.outputType = String(e.outputType)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
            t.options = p.google.protobuf.MethodOptions.fromObject(e.options);
        }
        return null != e.clientStreaming && (t.clientStreaming = Boolean(e.clientStreaming)), null != e.serverStreaming && (t.serverStreaming = Boolean(e.serverStreaming)), t;
    }, x.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.inputType = "", n.outputType = "", n.options = null, n.clientStreaming = !1, n.serverStreaming = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.inputType && e.hasOwnProperty("inputType") && (n.inputType = e.inputType), null != e.outputType && e.hasOwnProperty("outputType") && (n.outputType = e.outputType), null != e.options && e.hasOwnProperty("options") && (n.options = p.google.protobuf.MethodOptions.toObject(e.options, t)), null != e.clientStreaming && e.hasOwnProperty("clientStreaming") && (n.clientStreaming = e.clientStreaming), null != e.serverStreaming && e.hasOwnProperty("serverStreaming") && (n.serverStreaming = e.serverStreaming), n;
    }, x.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, x), t.FileOptions = (k.prototype.javaPackage = "", k.prototype.javaOuterClassname = "", k.prototype.javaMultipleFiles = !1, k.prototype.javaGenerateEqualsAndHash = !1, k.prototype.javaStringCheckUtf8 = !1, k.prototype.optimizeFor = 1, k.prototype.goPackage = "", k.prototype.ccGenericServices = !1, k.prototype.javaGenericServices = !1, k.prototype.pyGenericServices = !1, k.prototype.phpGenericServices = !1, k.prototype.deprecated = !1, k.prototype.ccEnableArenas = !0, k.prototype.objcClassPrefix = "", k.prototype.csharpNamespace = "", k.prototype.swiftPrefix = "", k.prototype.phpClassPrefix = "", k.prototype.phpNamespace = "", k.prototype.phpMetadataNamespace = "", k.prototype.rubyPackage = "", k.prototype.uninterpretedOption = i.emptyArray, k.create = function(e) {
        return new k(e);
    }, k.encode = function(e, t) {
        if (t = t || r.create(), null != e.javaPackage && Object.hasOwnProperty.call(e, "javaPackage") && t.uint32(10).string(e.javaPackage), null != e.javaOuterClassname && Object.hasOwnProperty.call(e, "javaOuterClassname") && t.uint32(66).string(e.javaOuterClassname), null != e.optimizeFor && Object.hasOwnProperty.call(e, "optimizeFor") && t.uint32(72).int32(e.optimizeFor), null != e.javaMultipleFiles && Object.hasOwnProperty.call(e, "javaMultipleFiles") && t.uint32(80).bool(e.javaMultipleFiles), null != e.goPackage && Object.hasOwnProperty.call(e, "goPackage") && t.uint32(90).string(e.goPackage), null != e.ccGenericServices && Object.hasOwnProperty.call(e, "ccGenericServices") && t.uint32(128).bool(e.ccGenericServices), null != e.javaGenericServices && Object.hasOwnProperty.call(e, "javaGenericServices") && t.uint32(136).bool(e.javaGenericServices), null != e.pyGenericServices && Object.hasOwnProperty.call(e, "pyGenericServices") && t.uint32(144).bool(e.pyGenericServices), null != e.javaGenerateEqualsAndHash && Object.hasOwnProperty.call(e, "javaGenerateEqualsAndHash") && t.uint32(160).bool(e.javaGenerateEqualsAndHash), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(184).bool(e.deprecated), null != e.javaStringCheckUtf8 && Object.hasOwnProperty.call(e, "javaStringCheckUtf8") && t.uint32(216).bool(e.javaStringCheckUtf8), null != e.ccEnableArenas && Object.hasOwnProperty.call(e, "ccEnableArenas") && t.uint32(248).bool(e.ccEnableArenas), null != e.objcClassPrefix && Object.hasOwnProperty.call(e, "objcClassPrefix") && t.uint32(290).string(e.objcClassPrefix), null != e.csharpNamespace && Object.hasOwnProperty.call(e, "csharpNamespace") && t.uint32(298).string(e.csharpNamespace), null != e.swiftPrefix && Object.hasOwnProperty.call(e, "swiftPrefix") && t.uint32(314).string(e.swiftPrefix), null != e.phpClassPrefix && Object.hasOwnProperty.call(e, "phpClassPrefix") && t.uint32(322).string(e.phpClassPrefix), null != e.phpNamespace && Object.hasOwnProperty.call(e, "phpNamespace") && t.uint32(330).string(e.phpNamespace), null != e.phpGenericServices && Object.hasOwnProperty.call(e, "phpGenericServices") && t.uint32(336).bool(e.phpGenericServices), null != e.phpMetadataNamespace && Object.hasOwnProperty.call(e, "phpMetadataNamespace") && t.uint32(354).string(e.phpMetadataNamespace), null != e.rubyPackage && Object.hasOwnProperty.call(e, "rubyPackage") && t.uint32(362).string(e.rubyPackage), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, k.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, k.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.FileOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.javaPackage = e.string();
                    break;
                case 8:
                    o.javaOuterClassname = e.string();
                    break;
                case 10:
                    o.javaMultipleFiles = e.bool();
                    break;
                case 20:
                    o.javaGenerateEqualsAndHash = e.bool();
                    break;
                case 27:
                    o.javaStringCheckUtf8 = e.bool();
                    break;
                case 9:
                    o.optimizeFor = e.int32();
                    break;
                case 11:
                    o.goPackage = e.string();
                    break;
                case 16:
                    o.ccGenericServices = e.bool();
                    break;
                case 17:
                    o.javaGenericServices = e.bool();
                    break;
                case 18:
                    o.pyGenericServices = e.bool();
                    break;
                case 42:
                    o.phpGenericServices = e.bool();
                    break;
                case 23:
                    o.deprecated = e.bool();
                    break;
                case 31:
                    o.ccEnableArenas = e.bool();
                    break;
                case 36:
                    o.objcClassPrefix = e.string();
                    break;
                case 37:
                    o.csharpNamespace = e.string();
                    break;
                case 39:
                    o.swiftPrefix = e.string();
                    break;
                case 40:
                    o.phpClassPrefix = e.string();
                    break;
                case 41:
                    o.phpNamespace = e.string();
                    break;
                case 44:
                    o.phpMetadataNamespace = e.string();
                    break;
                case 45:
                    o.rubyPackage = e.string();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, k.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, k.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.javaPackage && e.hasOwnProperty("javaPackage") && !i.isString(e.javaPackage)) return "javaPackage: string expected";
        if (null != e.javaOuterClassname && e.hasOwnProperty("javaOuterClassname") && !i.isString(e.javaOuterClassname)) return "javaOuterClassname: string expected";
        if (null != e.javaMultipleFiles && e.hasOwnProperty("javaMultipleFiles") && "boolean" != typeof e.javaMultipleFiles) return "javaMultipleFiles: boolean expected";
        if (null != e.javaGenerateEqualsAndHash && e.hasOwnProperty("javaGenerateEqualsAndHash") && "boolean" != typeof e.javaGenerateEqualsAndHash) return "javaGenerateEqualsAndHash: boolean expected";
        if (null != e.javaStringCheckUtf8 && e.hasOwnProperty("javaStringCheckUtf8") && "boolean" != typeof e.javaStringCheckUtf8) return "javaStringCheckUtf8: boolean expected";
        if (null != e.optimizeFor && e.hasOwnProperty("optimizeFor")) switch(e.optimizeFor){
            default:
                return "optimizeFor: enum value expected";
            case 1:
            case 2:
            case 3:
        }
        if (null != e.goPackage && e.hasOwnProperty("goPackage") && !i.isString(e.goPackage)) return "goPackage: string expected";
        if (null != e.ccGenericServices && e.hasOwnProperty("ccGenericServices") && "boolean" != typeof e.ccGenericServices) return "ccGenericServices: boolean expected";
        if (null != e.javaGenericServices && e.hasOwnProperty("javaGenericServices") && "boolean" != typeof e.javaGenericServices) return "javaGenericServices: boolean expected";
        if (null != e.pyGenericServices && e.hasOwnProperty("pyGenericServices") && "boolean" != typeof e.pyGenericServices) return "pyGenericServices: boolean expected";
        if (null != e.phpGenericServices && e.hasOwnProperty("phpGenericServices") && "boolean" != typeof e.phpGenericServices) return "phpGenericServices: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.ccEnableArenas && e.hasOwnProperty("ccEnableArenas") && "boolean" != typeof e.ccEnableArenas) return "ccEnableArenas: boolean expected";
        if (null != e.objcClassPrefix && e.hasOwnProperty("objcClassPrefix") && !i.isString(e.objcClassPrefix)) return "objcClassPrefix: string expected";
        if (null != e.csharpNamespace && e.hasOwnProperty("csharpNamespace") && !i.isString(e.csharpNamespace)) return "csharpNamespace: string expected";
        if (null != e.swiftPrefix && e.hasOwnProperty("swiftPrefix") && !i.isString(e.swiftPrefix)) return "swiftPrefix: string expected";
        if (null != e.phpClassPrefix && e.hasOwnProperty("phpClassPrefix") && !i.isString(e.phpClassPrefix)) return "phpClassPrefix: string expected";
        if (null != e.phpNamespace && e.hasOwnProperty("phpNamespace") && !i.isString(e.phpNamespace)) return "phpNamespace: string expected";
        if (null != e.phpMetadataNamespace && e.hasOwnProperty("phpMetadataNamespace") && !i.isString(e.phpMetadataNamespace)) return "phpMetadataNamespace: string expected";
        if (null != e.rubyPackage && e.hasOwnProperty("rubyPackage") && !i.isString(e.rubyPackage)) return "rubyPackage: string expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, k.fromObject = function(e) {
        if (e instanceof p.google.protobuf.FileOptions) return e;
        var t = new p.google.protobuf.FileOptions;
        switch(null != e.javaPackage && (t.javaPackage = String(e.javaPackage)), null != e.javaOuterClassname && (t.javaOuterClassname = String(e.javaOuterClassname)), null != e.javaMultipleFiles && (t.javaMultipleFiles = Boolean(e.javaMultipleFiles)), null != e.javaGenerateEqualsAndHash && (t.javaGenerateEqualsAndHash = Boolean(e.javaGenerateEqualsAndHash)), null != e.javaStringCheckUtf8 && (t.javaStringCheckUtf8 = Boolean(e.javaStringCheckUtf8)), e.optimizeFor){
            case "SPEED":
            case 1:
                t.optimizeFor = 1;
                break;
            case "CODE_SIZE":
            case 2:
                t.optimizeFor = 2;
                break;
            case "LITE_RUNTIME":
            case 3:
                t.optimizeFor = 3;
        }
        if (null != e.goPackage && (t.goPackage = String(e.goPackage)), null != e.ccGenericServices && (t.ccGenericServices = Boolean(e.ccGenericServices)), null != e.javaGenericServices && (t.javaGenericServices = Boolean(e.javaGenericServices)), null != e.pyGenericServices && (t.pyGenericServices = Boolean(e.pyGenericServices)), null != e.phpGenericServices && (t.phpGenericServices = Boolean(e.phpGenericServices)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.ccEnableArenas && (t.ccEnableArenas = Boolean(e.ccEnableArenas)), null != e.objcClassPrefix && (t.objcClassPrefix = String(e.objcClassPrefix)), null != e.csharpNamespace && (t.csharpNamespace = String(e.csharpNamespace)), null != e.swiftPrefix && (t.swiftPrefix = String(e.swiftPrefix)), null != e.phpClassPrefix && (t.phpClassPrefix = String(e.phpClassPrefix)), null != e.phpNamespace && (t.phpNamespace = String(e.phpNamespace)), null != e.phpMetadataNamespace && (t.phpMetadataNamespace = String(e.phpMetadataNamespace)), null != e.rubyPackage && (t.rubyPackage = String(e.rubyPackage)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, k.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.javaPackage = "", n.javaOuterClassname = "", n.optimizeFor = t.enums === String ? "SPEED" : 1, n.javaMultipleFiles = !1, n.goPackage = "", n.ccGenericServices = !1, n.javaGenericServices = !1, n.pyGenericServices = !1, n.javaGenerateEqualsAndHash = !1, n.deprecated = !1, n.javaStringCheckUtf8 = !1, n.ccEnableArenas = !0, n.objcClassPrefix = "", n.csharpNamespace = "", n.swiftPrefix = "", n.phpClassPrefix = "", n.phpNamespace = "", n.phpGenericServices = !1, n.phpMetadataNamespace = "", n.rubyPackage = ""), null != e.javaPackage && e.hasOwnProperty("javaPackage") && (n.javaPackage = e.javaPackage), null != e.javaOuterClassname && e.hasOwnProperty("javaOuterClassname") && (n.javaOuterClassname = e.javaOuterClassname), null != e.optimizeFor && e.hasOwnProperty("optimizeFor") && (n.optimizeFor = t.enums === String ? p.google.protobuf.FileOptions.OptimizeMode[e.optimizeFor] : e.optimizeFor), null != e.javaMultipleFiles && e.hasOwnProperty("javaMultipleFiles") && (n.javaMultipleFiles = e.javaMultipleFiles), null != e.goPackage && e.hasOwnProperty("goPackage") && (n.goPackage = e.goPackage), null != e.ccGenericServices && e.hasOwnProperty("ccGenericServices") && (n.ccGenericServices = e.ccGenericServices), null != e.javaGenericServices && e.hasOwnProperty("javaGenericServices") && (n.javaGenericServices = e.javaGenericServices), null != e.pyGenericServices && e.hasOwnProperty("pyGenericServices") && (n.pyGenericServices = e.pyGenericServices), null != e.javaGenerateEqualsAndHash && e.hasOwnProperty("javaGenerateEqualsAndHash") && (n.javaGenerateEqualsAndHash = e.javaGenerateEqualsAndHash), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.javaStringCheckUtf8 && e.hasOwnProperty("javaStringCheckUtf8") && (n.javaStringCheckUtf8 = e.javaStringCheckUtf8), null != e.ccEnableArenas && e.hasOwnProperty("ccEnableArenas") && (n.ccEnableArenas = e.ccEnableArenas), null != e.objcClassPrefix && e.hasOwnProperty("objcClassPrefix") && (n.objcClassPrefix = e.objcClassPrefix), null != e.csharpNamespace && e.hasOwnProperty("csharpNamespace") && (n.csharpNamespace = e.csharpNamespace), null != e.swiftPrefix && e.hasOwnProperty("swiftPrefix") && (n.swiftPrefix = e.swiftPrefix), null != e.phpClassPrefix && e.hasOwnProperty("phpClassPrefix") && (n.phpClassPrefix = e.phpClassPrefix), null != e.phpNamespace && e.hasOwnProperty("phpNamespace") && (n.phpNamespace = e.phpNamespace), null != e.phpGenericServices && e.hasOwnProperty("phpGenericServices") && (n.phpGenericServices = e.phpGenericServices), null != e.phpMetadataNamespace && e.hasOwnProperty("phpMetadataNamespace") && (n.phpMetadataNamespace = e.phpMetadataNamespace), null != e.rubyPackage && e.hasOwnProperty("rubyPackage") && (n.rubyPackage = e.rubyPackage), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, k.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, k.OptimizeMode = (n = {}, (e = Object.create(n))[n[1] = "SPEED"] = 1, e[n[2] = "CODE_SIZE"] = 2, e[n[3] = "LITE_RUNTIME"] = 3, e), k), t.MessageOptions = (D.prototype.messageSetWireFormat = !1, D.prototype.noStandardDescriptorAccessor = !1, D.prototype.deprecated = !1, D.prototype.mapEntry = !1, D.prototype.uninterpretedOption = i.emptyArray, D.create = function(e) {
        return new D(e);
    }, D.encode = function(e, t) {
        if (t = t || r.create(), null != e.messageSetWireFormat && Object.hasOwnProperty.call(e, "messageSetWireFormat") && t.uint32(8).bool(e.messageSetWireFormat), null != e.noStandardDescriptorAccessor && Object.hasOwnProperty.call(e, "noStandardDescriptorAccessor") && t.uint32(16).bool(e.noStandardDescriptorAccessor), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.mapEntry && Object.hasOwnProperty.call(e, "mapEntry") && t.uint32(56).bool(e.mapEntry), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, D.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, D.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.MessageOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.messageSetWireFormat = e.bool();
                    break;
                case 2:
                    o.noStandardDescriptorAccessor = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 7:
                    o.mapEntry = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, D.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, D.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.messageSetWireFormat && e.hasOwnProperty("messageSetWireFormat") && "boolean" != typeof e.messageSetWireFormat) return "messageSetWireFormat: boolean expected";
        if (null != e.noStandardDescriptorAccessor && e.hasOwnProperty("noStandardDescriptorAccessor") && "boolean" != typeof e.noStandardDescriptorAccessor) return "noStandardDescriptorAccessor: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.mapEntry && e.hasOwnProperty("mapEntry") && "boolean" != typeof e.mapEntry) return "mapEntry: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, D.fromObject = function(e) {
        if (e instanceof p.google.protobuf.MessageOptions) return e;
        var t = new p.google.protobuf.MessageOptions;
        if (null != e.messageSetWireFormat && (t.messageSetWireFormat = Boolean(e.messageSetWireFormat)), null != e.noStandardDescriptorAccessor && (t.noStandardDescriptorAccessor = Boolean(e.noStandardDescriptorAccessor)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.mapEntry && (t.mapEntry = Boolean(e.mapEntry)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, D.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.messageSetWireFormat = !1, n.noStandardDescriptorAccessor = !1, n.deprecated = !1, n.mapEntry = !1), null != e.messageSetWireFormat && e.hasOwnProperty("messageSetWireFormat") && (n.messageSetWireFormat = e.messageSetWireFormat), null != e.noStandardDescriptorAccessor && e.hasOwnProperty("noStandardDescriptorAccessor") && (n.noStandardDescriptorAccessor = e.noStandardDescriptorAccessor), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.mapEntry && e.hasOwnProperty("mapEntry") && (n.mapEntry = e.mapEntry), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, D.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, D), t.FieldOptions = (T.prototype.ctype = 0, T.prototype.packed = !1, T.prototype.jstype = 0, T.prototype.lazy = !1, T.prototype.deprecated = !1, T.prototype.weak = !1, T.prototype.uninterpretedOption = i.emptyArray, T.create = function(e) {
        return new T(e);
    }, T.encode = function(e, t) {
        if (t = t || r.create(), null != e.ctype && Object.hasOwnProperty.call(e, "ctype") && t.uint32(8).int32(e.ctype), null != e.packed && Object.hasOwnProperty.call(e, "packed") && t.uint32(16).bool(e.packed), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.lazy && Object.hasOwnProperty.call(e, "lazy") && t.uint32(40).bool(e.lazy), null != e.jstype && Object.hasOwnProperty.call(e, "jstype") && t.uint32(48).int32(e.jstype), null != e.weak && Object.hasOwnProperty.call(e, "weak") && t.uint32(80).bool(e.weak), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, T.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, T.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.FieldOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.ctype = e.int32();
                    break;
                case 2:
                    o.packed = e.bool();
                    break;
                case 6:
                    o.jstype = e.int32();
                    break;
                case 5:
                    o.lazy = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 10:
                    o.weak = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, T.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, T.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.ctype && e.hasOwnProperty("ctype")) switch(e.ctype){
            default:
                return "ctype: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.packed && e.hasOwnProperty("packed") && "boolean" != typeof e.packed) return "packed: boolean expected";
        if (null != e.jstype && e.hasOwnProperty("jstype")) switch(e.jstype){
            default:
                return "jstype: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.lazy && e.hasOwnProperty("lazy") && "boolean" != typeof e.lazy) return "lazy: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.weak && e.hasOwnProperty("weak") && "boolean" != typeof e.weak) return "weak: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, T.fromObject = function(e) {
        if (e instanceof p.google.protobuf.FieldOptions) return e;
        var t = new p.google.protobuf.FieldOptions;
        switch(e.ctype){
            case "STRING":
            case 0:
                t.ctype = 0;
                break;
            case "CORD":
            case 1:
                t.ctype = 1;
                break;
            case "STRING_PIECE":
            case 2:
                t.ctype = 2;
        }
        switch(null != e.packed && (t.packed = Boolean(e.packed)), e.jstype){
            case "JS_NORMAL":
            case 0:
                t.jstype = 0;
                break;
            case "JS_STRING":
            case 1:
                t.jstype = 1;
                break;
            case "JS_NUMBER":
            case 2:
                t.jstype = 2;
        }
        if (null != e.lazy && (t.lazy = Boolean(e.lazy)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.weak && (t.weak = Boolean(e.weak)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, T.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.ctype = t.enums === String ? "STRING" : 0, n.packed = !1, n.deprecated = !1, n.lazy = !1, n.jstype = t.enums === String ? "JS_NORMAL" : 0, n.weak = !1), null != e.ctype && e.hasOwnProperty("ctype") && (n.ctype = t.enums === String ? p.google.protobuf.FieldOptions.CType[e.ctype] : e.ctype), null != e.packed && e.hasOwnProperty("packed") && (n.packed = e.packed), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.lazy && e.hasOwnProperty("lazy") && (n.lazy = e.lazy), null != e.jstype && e.hasOwnProperty("jstype") && (n.jstype = t.enums === String ? p.google.protobuf.FieldOptions.JSType[e.jstype] : e.jstype), null != e.weak && e.hasOwnProperty("weak") && (n.weak = e.weak), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, T.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, T.CType = (n = {}, (e = Object.create(n))[n[0] = "STRING"] = 0, e[n[1] = "CORD"] = 1, e[n[2] = "STRING_PIECE"] = 2, e), T.JSType = (n = {}, (e = Object.create(n))[n[0] = "JS_NORMAL"] = 0, e[n[1] = "JS_STRING"] = 1, e[n[2] = "JS_NUMBER"] = 2, e), T), t.OneofOptions = (H.prototype.uninterpretedOption = i.emptyArray, H.create = function(e) {
        return new H(e);
    }, H.encode = function(e, t) {
        if (t = t || r.create(), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, H.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, H.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.OneofOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 999 ? (o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, H.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, H.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, H.fromObject = function(e) {
        if (e instanceof p.google.protobuf.OneofOptions) return e;
        var t = new p.google.protobuf.OneofOptions;
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, H.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, H.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, H), t.EnumOptions = (E.prototype.allowAlias = !1, E.prototype.deprecated = !1, E.prototype.uninterpretedOption = i.emptyArray, E.create = function(e) {
        return new E(e);
    }, E.encode = function(e, t) {
        if (t = t || r.create(), null != e.allowAlias && Object.hasOwnProperty.call(e, "allowAlias") && t.uint32(16).bool(e.allowAlias), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, E.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, E.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.EnumOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 2:
                    o.allowAlias = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, E.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, E.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.allowAlias && e.hasOwnProperty("allowAlias") && "boolean" != typeof e.allowAlias) return "allowAlias: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, E.fromObject = function(e) {
        if (e instanceof p.google.protobuf.EnumOptions) return e;
        var t = new p.google.protobuf.EnumOptions;
        if (null != e.allowAlias && (t.allowAlias = Boolean(e.allowAlias)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, E.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.allowAlias = !1, n.deprecated = !1), null != e.allowAlias && e.hasOwnProperty("allowAlias") && (n.allowAlias = e.allowAlias), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, E.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, E), t.EnumValueOptions = (z.prototype.deprecated = !1, z.prototype.uninterpretedOption = i.emptyArray, z.create = function(e) {
        return new z(e);
    }, z.encode = function(e, t) {
        if (t = t || r.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(8).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, z.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, z.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.EnumValueOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, z.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, z.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, z.fromObject = function(e) {
        if (e instanceof p.google.protobuf.EnumValueOptions) return e;
        var t = new p.google.protobuf.EnumValueOptions;
        if (null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, z.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.deprecated = !1), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, z.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, z), t.ServiceOptions = (A.prototype.deprecated = !1, A.prototype.uninterpretedOption = i.emptyArray, A.prototype[".google.api.defaultHost"] = "", A.prototype[".google.api.oauthScopes"] = "", A.create = function(e) {
        return new A(e);
    }, A.encode = function(e, t) {
        if (t = t || r.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(264).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return null != e[".google.api.defaultHost"] && Object.hasOwnProperty.call(e, ".google.api.defaultHost") && t.uint32(8394).string(e[".google.api.defaultHost"]), null != e[".google.api.oauthScopes"] && Object.hasOwnProperty.call(e, ".google.api.oauthScopes") && t.uint32(8402).string(e[".google.api.oauthScopes"]), t;
    }, A.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, A.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.ServiceOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 33:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1049:
                    o[".google.api.defaultHost"] = e.string();
                    break;
                case 1050:
                    o[".google.api.oauthScopes"] = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, A.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, A.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null != e[".google.api.defaultHost"] && e.hasOwnProperty(".google.api.defaultHost") && !i.isString(e[".google.api.defaultHost"]) ? ".google.api.defaultHost: string expected" : null != e[".google.api.oauthScopes"] && e.hasOwnProperty(".google.api.oauthScopes") && !i.isString(e[".google.api.oauthScopes"]) ? ".google.api.oauthScopes: string expected" : null;
    }, A.fromObject = function(e) {
        if (e instanceof p.google.protobuf.ServiceOptions) return e;
        var t = new p.google.protobuf.ServiceOptions;
        if (null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return null != e[".google.api.defaultHost"] && (t[".google.api.defaultHost"] = String(e[".google.api.defaultHost"])), null != e[".google.api.oauthScopes"] && (t[".google.api.oauthScopes"] = String(e[".google.api.oauthScopes"])), t;
    }, A.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.deprecated = !1, n[".google.api.defaultHost"] = "", n[".google.api.oauthScopes"] = ""), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return null != e[".google.api.defaultHost"] && e.hasOwnProperty(".google.api.defaultHost") && (n[".google.api.defaultHost"] = e[".google.api.defaultHost"]), null != e[".google.api.oauthScopes"] && e.hasOwnProperty(".google.api.oauthScopes") && (n[".google.api.oauthScopes"] = e[".google.api.oauthScopes"]), n;
    }, A.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, A), t.MethodOptions = (N.prototype.deprecated = !1, N.prototype.idempotencyLevel = 0, N.prototype.uninterpretedOption = i.emptyArray, N.prototype[".google.longrunning.operationInfo"] = null, N.prototype[".google.api.http"] = null, N.prototype[".google.api.methodSignature"] = i.emptyArray, N.create = function(e) {
        return new N(e);
    }, N.encode = function(e, t) {
        if (t = t || r.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(264).bool(e.deprecated), null != e.idempotencyLevel && Object.hasOwnProperty.call(e, "idempotencyLevel") && t.uint32(272).int32(e.idempotencyLevel), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)p.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        if (null != e[".google.longrunning.operationInfo"] && Object.hasOwnProperty.call(e, ".google.longrunning.operationInfo") && p.google.longrunning.OperationInfo.encode(e[".google.longrunning.operationInfo"], t.uint32(8394).fork()).ldelim(), null != e[".google.api.methodSignature"] && e[".google.api.methodSignature"].length) for(n = 0; n < e[".google.api.methodSignature"].length; ++n)t.uint32(8410).string(e[".google.api.methodSignature"][n]);
        return null != e[".google.api.http"] && Object.hasOwnProperty.call(e, ".google.api.http") && p.google.api.HttpRule.encode(e[".google.api.http"], t.uint32(578365826).fork()).ldelim(), t;
    }, N.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, N.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.MethodOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 33:
                    o.deprecated = e.bool();
                    break;
                case 34:
                    o.idempotencyLevel = e.int32();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(p.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1049:
                    o[".google.longrunning.operationInfo"] = p.google.longrunning.OperationInfo.decode(e, e.uint32());
                    break;
                case 72295728:
                    o[".google.api.http"] = p.google.api.HttpRule.decode(e, e.uint32());
                    break;
                case 1051:
                    o[".google.api.methodSignature"] && o[".google.api.methodSignature"].length || (o[".google.api.methodSignature"] = []), o[".google.api.methodSignature"].push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, N.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, N.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.idempotencyLevel && e.hasOwnProperty("idempotencyLevel")) switch(e.idempotencyLevel){
            default:
                return "idempotencyLevel: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t)if (n = p.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t])) return "uninterpretedOption." + n;
        }
        var n;
        if (null != e[".google.longrunning.operationInfo"] && e.hasOwnProperty(".google.longrunning.operationInfo") && (n = p.google.longrunning.OperationInfo.verify(e[".google.longrunning.operationInfo"]))) return ".google.longrunning.operationInfo." + n;
        if (null != e[".google.api.http"] && e.hasOwnProperty(".google.api.http") && (n = p.google.api.HttpRule.verify(e[".google.api.http"]))) return ".google.api.http." + n;
        if (null != e[".google.api.methodSignature"] && e.hasOwnProperty(".google.api.methodSignature")) {
            if (!Array.isArray(e[".google.api.methodSignature"])) return ".google.api.methodSignature: array expected";
            for(t = 0; t < e[".google.api.methodSignature"].length; ++t)if (!i.isString(e[".google.api.methodSignature"][t])) return ".google.api.methodSignature: string[] expected";
        }
        return null;
    }, N.fromObject = function(e) {
        if (e instanceof p.google.protobuf.MethodOptions) return e;
        var t = new p.google.protobuf.MethodOptions;
        switch(null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.idempotencyLevel){
            case "IDEMPOTENCY_UNKNOWN":
            case 0:
                t.idempotencyLevel = 0;
                break;
            case "NO_SIDE_EFFECTS":
            case 1:
                t.idempotencyLevel = 1;
                break;
            case "IDEMPOTENT":
            case 2:
                t.idempotencyLevel = 2;
        }
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = p.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        if (null != e[".google.longrunning.operationInfo"]) {
            if ("object" != typeof e[".google.longrunning.operationInfo"]) throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
            t[".google.longrunning.operationInfo"] = p.google.longrunning.OperationInfo.fromObject(e[".google.longrunning.operationInfo"]);
        }
        if (null != e[".google.api.http"]) {
            if ("object" != typeof e[".google.api.http"]) throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
            t[".google.api.http"] = p.google.api.HttpRule.fromObject(e[".google.api.http"]);
        }
        if (e[".google.api.methodSignature"]) {
            if (!Array.isArray(e[".google.api.methodSignature"])) throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
            t[".google.api.methodSignature"] = [];
            for(n = 0; n < e[".google.api.methodSignature"].length; ++n)t[".google.api.methodSignature"][n] = String(e[".google.api.methodSignature"][n]);
        }
        return t;
    }, N.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = [], n[".google.api.methodSignature"] = []), t.defaults && (n.deprecated = !1, n.idempotencyLevel = t.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0, n[".google.longrunning.operationInfo"] = null, n[".google.api.http"] = null), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.idempotencyLevel && e.hasOwnProperty("idempotencyLevel") && (n.idempotencyLevel = t.enums === String ? p.google.protobuf.MethodOptions.IdempotencyLevel[e.idempotencyLevel] : e.idempotencyLevel), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = p.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        if (null != e[".google.longrunning.operationInfo"] && e.hasOwnProperty(".google.longrunning.operationInfo") && (n[".google.longrunning.operationInfo"] = p.google.longrunning.OperationInfo.toObject(e[".google.longrunning.operationInfo"], t)), e[".google.api.methodSignature"] && e[".google.api.methodSignature"].length) {
            n[".google.api.methodSignature"] = [];
            for(o = 0; o < e[".google.api.methodSignature"].length; ++o)n[".google.api.methodSignature"][o] = e[".google.api.methodSignature"][o];
        }
        return null != e[".google.api.http"] && e.hasOwnProperty(".google.api.http") && (n[".google.api.http"] = p.google.api.HttpRule.toObject(e[".google.api.http"], t)), n;
    }, N.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, N.IdempotencyLevel = (n = {}, (e = Object.create(n))[n[0] = "IDEMPOTENCY_UNKNOWN"] = 0, e[n[1] = "NO_SIDE_EFFECTS"] = 1, e[n[2] = "IDEMPOTENT"] = 2, e), N), t.UninterpretedOption = (I.prototype.name = i.emptyArray, I.prototype.identifierValue = "", I.prototype.positiveIntValue = i.Long ? i.Long.fromBits(0, 0, !0) : 0, I.prototype.negativeIntValue = i.Long ? i.Long.fromBits(0, 0, !1) : 0, I.prototype.doubleValue = 0, I.prototype.stringValue = i.newBuffer([]), I.prototype.aggregateValue = "", I.create = function(e) {
        return new I(e);
    }, I.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && e.name.length) for(var n = 0; n < e.name.length; ++n)p.google.protobuf.UninterpretedOption.NamePart.encode(e.name[n], t.uint32(18).fork()).ldelim();
        return null != e.identifierValue && Object.hasOwnProperty.call(e, "identifierValue") && t.uint32(26).string(e.identifierValue), null != e.positiveIntValue && Object.hasOwnProperty.call(e, "positiveIntValue") && t.uint32(32).uint64(e.positiveIntValue), null != e.negativeIntValue && Object.hasOwnProperty.call(e, "negativeIntValue") && t.uint32(40).int64(e.negativeIntValue), null != e.doubleValue && Object.hasOwnProperty.call(e, "doubleValue") && t.uint32(49).double(e.doubleValue), null != e.stringValue && Object.hasOwnProperty.call(e, "stringValue") && t.uint32(58).bytes(e.stringValue), null != e.aggregateValue && Object.hasOwnProperty.call(e, "aggregateValue") && t.uint32(66).string(e.aggregateValue), t;
    }, I.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, I.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.UninterpretedOption; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 2:
                    o.name && o.name.length || (o.name = []), o.name.push(p.google.protobuf.UninterpretedOption.NamePart.decode(e, e.uint32()));
                    break;
                case 3:
                    o.identifierValue = e.string();
                    break;
                case 4:
                    o.positiveIntValue = e.uint64();
                    break;
                case 5:
                    o.negativeIntValue = e.int64();
                    break;
                case 6:
                    o.doubleValue = e.double();
                    break;
                case 7:
                    o.stringValue = e.bytes();
                    break;
                case 8:
                    o.aggregateValue = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, I.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, I.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name")) {
            if (!Array.isArray(e.name)) return "name: array expected";
            for(var t = 0; t < e.name.length; ++t){
                var n = p.google.protobuf.UninterpretedOption.NamePart.verify(e.name[t]);
                if (n) return "name." + n;
            }
        }
        return null != e.identifierValue && e.hasOwnProperty("identifierValue") && !i.isString(e.identifierValue) ? "identifierValue: string expected" : null != e.positiveIntValue && e.hasOwnProperty("positiveIntValue") && !(i.isInteger(e.positiveIntValue) || e.positiveIntValue && i.isInteger(e.positiveIntValue.low) && i.isInteger(e.positiveIntValue.high)) ? "positiveIntValue: integer|Long expected" : null != e.negativeIntValue && e.hasOwnProperty("negativeIntValue") && !(i.isInteger(e.negativeIntValue) || e.negativeIntValue && i.isInteger(e.negativeIntValue.low) && i.isInteger(e.negativeIntValue.high)) ? "negativeIntValue: integer|Long expected" : null != e.doubleValue && e.hasOwnProperty("doubleValue") && "number" != typeof e.doubleValue ? "doubleValue: number expected" : null != e.stringValue && e.hasOwnProperty("stringValue") && !(e.stringValue && "number" == typeof e.stringValue.length || i.isString(e.stringValue)) ? "stringValue: buffer expected" : null != e.aggregateValue && e.hasOwnProperty("aggregateValue") && !i.isString(e.aggregateValue) ? "aggregateValue: string expected" : null;
    }, I.fromObject = function(e) {
        if (e instanceof p.google.protobuf.UninterpretedOption) return e;
        var t = new p.google.protobuf.UninterpretedOption;
        if (e.name) {
            if (!Array.isArray(e.name)) throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
            t.name = [];
            for(var n = 0; n < e.name.length; ++n){
                if ("object" != typeof e.name[n]) throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                t.name[n] = p.google.protobuf.UninterpretedOption.NamePart.fromObject(e.name[n]);
            }
        }
        return null != e.identifierValue && (t.identifierValue = String(e.identifierValue)), null != e.positiveIntValue && (i.Long ? (t.positiveIntValue = i.Long.fromValue(e.positiveIntValue)).unsigned = !0 : "string" == typeof e.positiveIntValue ? t.positiveIntValue = parseInt(e.positiveIntValue, 10) : "number" == typeof e.positiveIntValue ? t.positiveIntValue = e.positiveIntValue : "object" == typeof e.positiveIntValue && (t.positiveIntValue = new i.LongBits(e.positiveIntValue.low >>> 0, e.positiveIntValue.high >>> 0).toNumber(!0))), null != e.negativeIntValue && (i.Long ? (t.negativeIntValue = i.Long.fromValue(e.negativeIntValue)).unsigned = !1 : "string" == typeof e.negativeIntValue ? t.negativeIntValue = parseInt(e.negativeIntValue, 10) : "number" == typeof e.negativeIntValue ? t.negativeIntValue = e.negativeIntValue : "object" == typeof e.negativeIntValue && (t.negativeIntValue = new i.LongBits(e.negativeIntValue.low >>> 0, e.negativeIntValue.high >>> 0).toNumber())), null != e.doubleValue && (t.doubleValue = Number(e.doubleValue)), null != e.stringValue && ("string" == typeof e.stringValue ? i.base64.decode(e.stringValue, t.stringValue = i.newBuffer(i.base64.length(e.stringValue)), 0) : e.stringValue.length && (t.stringValue = e.stringValue)), null != e.aggregateValue && (t.aggregateValue = String(e.aggregateValue)), t;
    }, I.toObject = function(e, t) {
        var n, o = {};
        if (((t = t || {}).arrays || t.defaults) && (o.name = []), t.defaults && (o.identifierValue = "", i.Long ? (n = new i.Long(0, 0, !0), o.positiveIntValue = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.positiveIntValue = t.longs === String ? "0" : 0, i.Long ? (n = new i.Long(0, 0, !1), o.negativeIntValue = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.negativeIntValue = t.longs === String ? "0" : 0, o.doubleValue = 0, t.bytes === String ? o.stringValue = "" : (o.stringValue = [], t.bytes !== Array && (o.stringValue = i.newBuffer(o.stringValue))), o.aggregateValue = ""), e.name && e.name.length) {
            o.name = [];
            for(var r = 0; r < e.name.length; ++r)o.name[r] = p.google.protobuf.UninterpretedOption.NamePart.toObject(e.name[r], t);
        }
        return null != e.identifierValue && e.hasOwnProperty("identifierValue") && (o.identifierValue = e.identifierValue), null != e.positiveIntValue && e.hasOwnProperty("positiveIntValue") && ("number" == typeof e.positiveIntValue ? o.positiveIntValue = t.longs === String ? String(e.positiveIntValue) : e.positiveIntValue : o.positiveIntValue = t.longs === String ? i.Long.prototype.toString.call(e.positiveIntValue) : t.longs === Number ? new i.LongBits(e.positiveIntValue.low >>> 0, e.positiveIntValue.high >>> 0).toNumber(!0) : e.positiveIntValue), null != e.negativeIntValue && e.hasOwnProperty("negativeIntValue") && ("number" == typeof e.negativeIntValue ? o.negativeIntValue = t.longs === String ? String(e.negativeIntValue) : e.negativeIntValue : o.negativeIntValue = t.longs === String ? i.Long.prototype.toString.call(e.negativeIntValue) : t.longs === Number ? new i.LongBits(e.negativeIntValue.low >>> 0, e.negativeIntValue.high >>> 0).toNumber() : e.negativeIntValue), null != e.doubleValue && e.hasOwnProperty("doubleValue") && (o.doubleValue = t.json && !isFinite(e.doubleValue) ? String(e.doubleValue) : e.doubleValue), null != e.stringValue && e.hasOwnProperty("stringValue") && (o.stringValue = t.bytes === String ? i.base64.encode(e.stringValue, 0, e.stringValue.length) : t.bytes === Array ? Array.prototype.slice.call(e.stringValue) : e.stringValue), null != e.aggregateValue && e.hasOwnProperty("aggregateValue") && (o.aggregateValue = e.aggregateValue), o;
    }, I.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, I.NamePart = (q.prototype.namePart = "", q.prototype.isExtension = !1, q.create = function(e) {
        return new q(e);
    }, q.encode = function(e, t) {
        return (t = t || r.create()).uint32(10).string(e.namePart), t.uint32(16).bool(e.isExtension), t;
    }, q.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, q.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.UninterpretedOption.NamePart; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.namePart = e.string();
                    break;
                case 2:
                    o.isExtension = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        if (!o.hasOwnProperty("namePart")) throw i.ProtocolError("missing required 'namePart'", {
            instance: o
        });
        if (o.hasOwnProperty("isExtension")) return o;
        throw i.ProtocolError("missing required 'isExtension'", {
            instance: o
        });
    }, q.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, q.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : i.isString(e.namePart) ? "boolean" != typeof e.isExtension ? "isExtension: boolean expected" : null : "namePart: string expected";
    }, q.fromObject = function(e) {
        var t;
        return e instanceof p.google.protobuf.UninterpretedOption.NamePart ? e : (t = new p.google.protobuf.UninterpretedOption.NamePart, null != e.namePart && (t.namePart = String(e.namePart)), null != e.isExtension && (t.isExtension = Boolean(e.isExtension)), t);
    }, q.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.namePart = "", n.isExtension = !1), null != e.namePart && e.hasOwnProperty("namePart") && (n.namePart = e.namePart), null != e.isExtension && e.hasOwnProperty("isExtension") && (n.isExtension = e.isExtension), n;
    }, q.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, q), I), t.SourceCodeInfo = (Y.prototype.location = i.emptyArray, Y.create = function(e) {
        return new Y(e);
    }, Y.encode = function(e, t) {
        if (t = t || r.create(), null != e.location && e.location.length) for(var n = 0; n < e.location.length; ++n)p.google.protobuf.SourceCodeInfo.Location.encode(e.location[n], t.uint32(10).fork()).ldelim();
        return t;
    }, Y.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, Y.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.SourceCodeInfo; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.location && o.location.length || (o.location = []), o.location.push(p.google.protobuf.SourceCodeInfo.Location.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, Y.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, Y.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.location && e.hasOwnProperty("location")) {
            if (!Array.isArray(e.location)) return "location: array expected";
            for(var t = 0; t < e.location.length; ++t){
                var n = p.google.protobuf.SourceCodeInfo.Location.verify(e.location[t]);
                if (n) return "location." + n;
            }
        }
        return null;
    }, Y.fromObject = function(e) {
        if (e instanceof p.google.protobuf.SourceCodeInfo) return e;
        var t = new p.google.protobuf.SourceCodeInfo;
        if (e.location) {
            if (!Array.isArray(e.location)) throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
            t.location = [];
            for(var n = 0; n < e.location.length; ++n){
                if ("object" != typeof e.location[n]) throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                t.location[n] = p.google.protobuf.SourceCodeInfo.Location.fromObject(e.location[n]);
            }
        }
        return t;
    }, Y.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.location = []), e.location && e.location.length) {
            n.location = [];
            for(var o = 0; o < e.location.length; ++o)n.location[o] = p.google.protobuf.SourceCodeInfo.Location.toObject(e.location[o], t);
        }
        return n;
    }, Y.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, Y.Location = (R.prototype.path = i.emptyArray, R.prototype.span = i.emptyArray, R.prototype.leadingComments = "", R.prototype.trailingComments = "", R.prototype.leadingDetachedComments = i.emptyArray, R.create = function(e) {
        return new R(e);
    }, R.encode = function(e, t) {
        if (t = t || r.create(), null != e.path && e.path.length) {
            t.uint32(10).fork();
            for(var n = 0; n < e.path.length; ++n)t.int32(e.path[n]);
            t.ldelim();
        }
        if (null != e.span && e.span.length) {
            t.uint32(18).fork();
            for(n = 0; n < e.span.length; ++n)t.int32(e.span[n]);
            t.ldelim();
        }
        if (null != e.leadingComments && Object.hasOwnProperty.call(e, "leadingComments") && t.uint32(26).string(e.leadingComments), null != e.trailingComments && Object.hasOwnProperty.call(e, "trailingComments") && t.uint32(34).string(e.trailingComments), null != e.leadingDetachedComments && e.leadingDetachedComments.length) for(n = 0; n < e.leadingDetachedComments.length; ++n)t.uint32(50).string(e.leadingDetachedComments[n]);
        return t;
    }, R.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, R.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.SourceCodeInfo.Location; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    if (o.path && o.path.length || (o.path = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.path.push(e.int32());
                    else o.path.push(e.int32());
                    break;
                case 2:
                    if (o.span && o.span.length || (o.span = []), 2 == (7 & r)) for(i = e.uint32() + e.pos; e.pos < i;)o.span.push(e.int32());
                    else o.span.push(e.int32());
                    break;
                case 3:
                    o.leadingComments = e.string();
                    break;
                case 4:
                    o.trailingComments = e.string();
                    break;
                case 6:
                    o.leadingDetachedComments && o.leadingDetachedComments.length || (o.leadingDetachedComments = []), o.leadingDetachedComments.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, R.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, R.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.path && e.hasOwnProperty("path")) {
            if (!Array.isArray(e.path)) return "path: array expected";
            for(var t = 0; t < e.path.length; ++t)if (!i.isInteger(e.path[t])) return "path: integer[] expected";
        }
        if (null != e.span && e.hasOwnProperty("span")) {
            if (!Array.isArray(e.span)) return "span: array expected";
            for(t = 0; t < e.span.length; ++t)if (!i.isInteger(e.span[t])) return "span: integer[] expected";
        }
        if (null != e.leadingComments && e.hasOwnProperty("leadingComments") && !i.isString(e.leadingComments)) return "leadingComments: string expected";
        if (null != e.trailingComments && e.hasOwnProperty("trailingComments") && !i.isString(e.trailingComments)) return "trailingComments: string expected";
        if (null != e.leadingDetachedComments && e.hasOwnProperty("leadingDetachedComments")) {
            if (!Array.isArray(e.leadingDetachedComments)) return "leadingDetachedComments: array expected";
            for(t = 0; t < e.leadingDetachedComments.length; ++t)if (!i.isString(e.leadingDetachedComments[t])) return "leadingDetachedComments: string[] expected";
        }
        return null;
    }, R.fromObject = function(e) {
        if (e instanceof p.google.protobuf.SourceCodeInfo.Location) return e;
        var t = new p.google.protobuf.SourceCodeInfo.Location;
        if (e.path) {
            if (!Array.isArray(e.path)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
            t.path = [];
            for(var n = 0; n < e.path.length; ++n)t.path[n] = 0 | e.path[n];
        }
        if (e.span) {
            if (!Array.isArray(e.span)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
            t.span = [];
            for(n = 0; n < e.span.length; ++n)t.span[n] = 0 | e.span[n];
        }
        if (null != e.leadingComments && (t.leadingComments = String(e.leadingComments)), null != e.trailingComments && (t.trailingComments = String(e.trailingComments)), e.leadingDetachedComments) {
            if (!Array.isArray(e.leadingDetachedComments)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
            t.leadingDetachedComments = [];
            for(n = 0; n < e.leadingDetachedComments.length; ++n)t.leadingDetachedComments[n] = String(e.leadingDetachedComments[n]);
        }
        return t;
    }, R.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.path = [], n.span = [], n.leadingDetachedComments = []), t.defaults && (n.leadingComments = "", n.trailingComments = ""), e.path && e.path.length) {
            n.path = [];
            for(var o = 0; o < e.path.length; ++o)n.path[o] = e.path[o];
        }
        if (e.span && e.span.length) {
            n.span = [];
            for(o = 0; o < e.span.length; ++o)n.span[o] = e.span[o];
        }
        if (null != e.leadingComments && e.hasOwnProperty("leadingComments") && (n.leadingComments = e.leadingComments), null != e.trailingComments && e.hasOwnProperty("trailingComments") && (n.trailingComments = e.trailingComments), e.leadingDetachedComments && e.leadingDetachedComments.length) {
            n.leadingDetachedComments = [];
            for(o = 0; o < e.leadingDetachedComments.length; ++o)n.leadingDetachedComments[o] = e.leadingDetachedComments[o];
        }
        return n;
    }, R.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, R), Y), t.GeneratedCodeInfo = (W.prototype.annotation = i.emptyArray, W.create = function(e) {
        return new W(e);
    }, W.encode = function(e, t) {
        if (t = t || r.create(), null != e.annotation && e.annotation.length) for(var n = 0; n < e.annotation.length; ++n)p.google.protobuf.GeneratedCodeInfo.Annotation.encode(e.annotation[n], t.uint32(10).fork()).ldelim();
        return t;
    }, W.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, W.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.GeneratedCodeInfo; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.annotation && o.annotation.length || (o.annotation = []), o.annotation.push(p.google.protobuf.GeneratedCodeInfo.Annotation.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, W.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, W.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.annotation && e.hasOwnProperty("annotation")) {
            if (!Array.isArray(e.annotation)) return "annotation: array expected";
            for(var t = 0; t < e.annotation.length; ++t){
                var n = p.google.protobuf.GeneratedCodeInfo.Annotation.verify(e.annotation[t]);
                if (n) return "annotation." + n;
            }
        }
        return null;
    }, W.fromObject = function(e) {
        if (e instanceof p.google.protobuf.GeneratedCodeInfo) return e;
        var t = new p.google.protobuf.GeneratedCodeInfo;
        if (e.annotation) {
            if (!Array.isArray(e.annotation)) throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
            t.annotation = [];
            for(var n = 0; n < e.annotation.length; ++n){
                if ("object" != typeof e.annotation[n]) throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                t.annotation[n] = p.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(e.annotation[n]);
            }
        }
        return t;
    }, W.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.annotation = []), e.annotation && e.annotation.length) {
            n.annotation = [];
            for(var o = 0; o < e.annotation.length; ++o)n.annotation[o] = p.google.protobuf.GeneratedCodeInfo.Annotation.toObject(e.annotation[o], t);
        }
        return n;
    }, W.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, W.Annotation = (C.prototype.path = i.emptyArray, C.prototype.sourceFile = "", C.prototype.begin = 0, C.prototype.end = 0, C.create = function(e) {
        return new C(e);
    }, C.encode = function(e, t) {
        if (t = t || r.create(), null != e.path && e.path.length) {
            t.uint32(10).fork();
            for(var n = 0; n < e.path.length; ++n)t.int32(e.path[n]);
            t.ldelim();
        }
        return null != e.sourceFile && Object.hasOwnProperty.call(e, "sourceFile") && t.uint32(18).string(e.sourceFile), null != e.begin && Object.hasOwnProperty.call(e, "begin") && t.uint32(24).int32(e.begin), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(32).int32(e.end), t;
    }, C.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, C.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.GeneratedCodeInfo.Annotation; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    if (o.path && o.path.length || (o.path = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.path.push(e.int32());
                    else o.path.push(e.int32());
                    break;
                case 2:
                    o.sourceFile = e.string();
                    break;
                case 3:
                    o.begin = e.int32();
                    break;
                case 4:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, C.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, C.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.path && e.hasOwnProperty("path")) {
            if (!Array.isArray(e.path)) return "path: array expected";
            for(var t = 0; t < e.path.length; ++t)if (!i.isInteger(e.path[t])) return "path: integer[] expected";
        }
        return null != e.sourceFile && e.hasOwnProperty("sourceFile") && !i.isString(e.sourceFile) ? "sourceFile: string expected" : null != e.begin && e.hasOwnProperty("begin") && !i.isInteger(e.begin) ? "begin: integer expected" : null != e.end && e.hasOwnProperty("end") && !i.isInteger(e.end) ? "end: integer expected" : null;
    }, C.fromObject = function(e) {
        if (e instanceof p.google.protobuf.GeneratedCodeInfo.Annotation) return e;
        var t = new p.google.protobuf.GeneratedCodeInfo.Annotation;
        if (e.path) {
            if (!Array.isArray(e.path)) throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
            t.path = [];
            for(var n = 0; n < e.path.length; ++n)t.path[n] = 0 | e.path[n];
        }
        return null != e.sourceFile && (t.sourceFile = String(e.sourceFile)), null != e.begin && (t.begin = 0 | e.begin), null != e.end && (t.end = 0 | e.end), t;
    }, C.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.path = []), t.defaults && (n.sourceFile = "", n.begin = 0, n.end = 0), e.path && e.path.length) {
            n.path = [];
            for(var o = 0; o < e.path.length; ++o)n.path[o] = e.path[o];
        }
        return null != e.sourceFile && e.hasOwnProperty("sourceFile") && (n.sourceFile = e.sourceFile), null != e.begin && e.hasOwnProperty("begin") && (n.begin = e.begin), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, C.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, C), W), t.Any = (X.prototype.type_url = "", X.prototype.value = i.newBuffer([]), X.create = function(e) {
        return new X(e);
    }, X.encode = function(e, t) {
        return t = t || r.create(), null != e.type_url && Object.hasOwnProperty.call(e, "type_url") && t.uint32(10).string(e.type_url), null != e.value && Object.hasOwnProperty.call(e, "value") && t.uint32(18).bytes(e.value), t;
    }, X.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, X.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.Any; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.type_url = e.string();
                    break;
                case 2:
                    o.value = e.bytes();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, X.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, X.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.type_url && e.hasOwnProperty("type_url") && !i.isString(e.type_url) ? "type_url: string expected" : null != e.value && e.hasOwnProperty("value") && !(e.value && "number" == typeof e.value.length || i.isString(e.value)) ? "value: buffer expected" : null;
    }, X.fromObject = function(e) {
        var t;
        return e instanceof p.google.protobuf.Any ? e : (t = new p.google.protobuf.Any, null != e.type_url && (t.type_url = String(e.type_url)), null != e.value && ("string" == typeof e.value ? i.base64.decode(e.value, t.value = i.newBuffer(i.base64.length(e.value)), 0) : e.value.length && (t.value = e.value)), t);
    }, X.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.type_url = "", t.bytes === String ? n.value = "" : (n.value = [], t.bytes !== Array && (n.value = i.newBuffer(n.value)))), null != e.type_url && e.hasOwnProperty("type_url") && (n.type_url = e.type_url), null != e.value && e.hasOwnProperty("value") && (n.value = t.bytes === String ? i.base64.encode(e.value, 0, e.value.length) : t.bytes === Array ? Array.prototype.slice.call(e.value) : e.value), n;
    }, X.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, X), t.Duration = (K.prototype.seconds = i.Long ? i.Long.fromBits(0, 0, !1) : 0, K.prototype.nanos = 0, K.create = function(e) {
        return new K(e);
    }, K.encode = function(e, t) {
        return t = t || r.create(), null != e.seconds && Object.hasOwnProperty.call(e, "seconds") && t.uint32(8).int64(e.seconds), null != e.nanos && Object.hasOwnProperty.call(e, "nanos") && t.uint32(16).int32(e.nanos), t;
    }, K.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, K.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.protobuf.Duration; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.seconds = e.int64();
                    break;
                case 2:
                    o.nanos = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, K.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, K.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.seconds && e.hasOwnProperty("seconds") && !(i.isInteger(e.seconds) || e.seconds && i.isInteger(e.seconds.low) && i.isInteger(e.seconds.high)) ? "seconds: integer|Long expected" : null != e.nanos && e.hasOwnProperty("nanos") && !i.isInteger(e.nanos) ? "nanos: integer expected" : null;
    }, K.fromObject = function(e) {
        var t;
        return e instanceof p.google.protobuf.Duration ? e : (t = new p.google.protobuf.Duration, null != e.seconds && (i.Long ? (t.seconds = i.Long.fromValue(e.seconds)).unsigned = !1 : "string" == typeof e.seconds ? t.seconds = parseInt(e.seconds, 10) : "number" == typeof e.seconds ? t.seconds = e.seconds : "object" == typeof e.seconds && (t.seconds = new i.LongBits(e.seconds.low >>> 0, e.seconds.high >>> 0).toNumber())), null != e.nanos && (t.nanos = 0 | e.nanos), t);
    }, K.toObject = function(e, t) {
        var n, o = {};
        return (t = t || {}).defaults && (i.Long ? (n = new i.Long(0, 0, !1), o.seconds = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.seconds = t.longs === String ? "0" : 0, o.nanos = 0), null != e.seconds && e.hasOwnProperty("seconds") && ("number" == typeof e.seconds ? o.seconds = t.longs === String ? String(e.seconds) : e.seconds : o.seconds = t.longs === String ? i.Long.prototype.toString.call(e.seconds) : t.longs === Number ? new i.LongBits(e.seconds.low >>> 0, e.seconds.high >>> 0).toNumber() : e.seconds), null != e.nanos && e.hasOwnProperty("nanos") && (o.nanos = e.nanos), o;
    }, K.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, K), t.Empty = (Q.create = function(e) {
        return new Q(e);
    }, Q.encode = function(e, t) {
        return t = t || r.create();
    }, Q.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, Q.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, t = new p.google.protobuf.Empty; e.pos < n;){
            var o = e.uint32();
            e.skipType(7 & o);
        }
        return t;
    }, Q.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, Q.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null;
    }, Q.fromObject = function(e) {
        return e instanceof p.google.protobuf.Empty ? e : new p.google.protobuf.Empty;
    }, Q.toObject = function() {
        return {};
    }, Q.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, Q), t), F.rpc = ((n = {}).Status = (V.prototype.code = 0, V.prototype.message = "", V.prototype.details = i.emptyArray, V.create = function(e) {
        return new V(e);
    }, V.encode = function(e, t) {
        if (t = t || r.create(), null != e.code && Object.hasOwnProperty.call(e, "code") && t.uint32(8).int32(e.code), null != e.message && Object.hasOwnProperty.call(e, "message") && t.uint32(18).string(e.message), null != e.details && e.details.length) for(var n = 0; n < e.details.length; ++n)p.google.protobuf.Any.encode(e.details[n], t.uint32(26).fork()).ldelim();
        return t;
    }, V.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, V.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new p.google.rpc.Status; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.code = e.int32();
                    break;
                case 2:
                    o.message = e.string();
                    break;
                case 3:
                    o.details && o.details.length || (o.details = []), o.details.push(p.google.protobuf.Any.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, V.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, V.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.code && e.hasOwnProperty("code") && !i.isInteger(e.code)) return "code: integer expected";
        if (null != e.message && e.hasOwnProperty("message") && !i.isString(e.message)) return "message: string expected";
        if (null != e.details && e.hasOwnProperty("details")) {
            if (!Array.isArray(e.details)) return "details: array expected";
            for(var t = 0; t < e.details.length; ++t){
                var n = p.google.protobuf.Any.verify(e.details[t]);
                if (n) return "details." + n;
            }
        }
        return null;
    }, V.fromObject = function(e) {
        if (e instanceof p.google.rpc.Status) return e;
        var t = new p.google.rpc.Status;
        if (null != e.code && (t.code = 0 | e.code), null != e.message && (t.message = String(e.message)), e.details) {
            if (!Array.isArray(e.details)) throw TypeError(".google.rpc.Status.details: array expected");
            t.details = [];
            for(var n = 0; n < e.details.length; ++n){
                if ("object" != typeof e.details[n]) throw TypeError(".google.rpc.Status.details: object expected");
                t.details[n] = p.google.protobuf.Any.fromObject(e.details[n]);
            }
        }
        return t;
    }, V.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.details = []), t.defaults && (n.code = 0, n.message = ""), null != e.code && e.hasOwnProperty("code") && (n.code = e.code), null != e.message && e.hasOwnProperty("message") && (n.message = e.message), e.details && e.details.length) {
            n.details = [];
            for(var o = 0; o < e.details.length; ++o)n.details[o] = p.google.protobuf.Any.toObject(e.details[o], t);
        }
        return n;
    }, V.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, V), n), F), p;
});
}}),
"[project]/node_modules/google-gax/build/src/longRunningCalls/longrunning.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Operation = void 0;
exports.operation = operation;
const events_1 = __turbopack_context__.r("[externals]/events [external] (events, cjs)");
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
const operationProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/operations.js [app-rsc] (ecmascript)");
class Operation extends events_1.EventEmitter {
    /**
     * Wrapper for a google.longrunnung.Operation.
     *
     * @constructor
     *
     * @param {google.longrunning.Operation} grpcOp - The operation to be wrapped.
     * @param {LongRunningDescriptor} longrunningDescriptor - This defines the
     * operations service client and unpacking mechanisms for the operation.
     * @param {BackoffSettings} backoffSettings - The backoff settings used in
     * in polling the operation.
     * @param {CallOptions} callOptions - CallOptions used in making get operation
     * requests.
     */ constructor(grpcOp, longrunningDescriptor, backoffSettings, callOptions){
        super();
        this.completeListeners = 0;
        this.hasActiveListeners = false;
        this.latestResponse = grpcOp;
        this.name = this.latestResponse.name;
        this.done = this.latestResponse.done;
        this.error = this.latestResponse.error;
        this.longrunningDescriptor = longrunningDescriptor;
        this.result = null;
        this.metadata = null;
        this.backoffSettings = backoffSettings;
        this._unpackResponse(grpcOp);
        this._listenForEvents();
        this._callOptions = callOptions;
    }
    /**
     * Begin listening for events on the operation. This method keeps track of how
     * many "complete" listeners are registered and removed, making sure polling
     * is handled automatically.
     *
     * As long as there is one active "complete" listener, the connection is open.
     * When there are no more listeners, the polling stops.
     *
     * @private
     */ _listenForEvents() {
        this.on('newListener', (event)=>{
            if (event === 'complete') {
                this.completeListeners++;
                if (!this.hasActiveListeners) {
                    this.hasActiveListeners = true;
                    this.startPolling_();
                }
            }
        });
        this.on('removeListener', (event)=>{
            if (event === 'complete' && --this.completeListeners === 0) {
                this.hasActiveListeners = false;
            }
        });
    }
    /**
     * Cancels current polling api call and cancels the operation.
     *
     * @return {Promise} the promise of the OperationsClient#cancelOperation api
     * request.
     */ cancel() {
        if (this.currentCallPromise_) {
            this.currentCallPromise_.cancel();
        }
        const operationsClient = this.longrunningDescriptor.operationsClient;
        const cancelRequest = new operationProtos.google.longrunning.CancelOperationRequest();
        cancelRequest.name = this.latestResponse.name;
        return operationsClient.cancelOperation(cancelRequest);
    }
    getOperation(callback) {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const self = this;
        const operationsClient = this.longrunningDescriptor.operationsClient;
        function promisifyResponse() {
            if (!callback) {
                return new Promise((resolve, reject)=>{
                    if (self.latestResponse.error) {
                        const error = new googleError_1.GoogleError(self.latestResponse.error.message);
                        error.code = self.latestResponse.error.code;
                        reject(error);
                    } else {
                        resolve([
                            self.result,
                            self.metadata,
                            self.latestResponse
                        ]);
                    }
                });
            }
            return;
        }
        if (this.latestResponse.done) {
            this._unpackResponse(this.latestResponse, callback);
            return promisifyResponse();
        }
        const request = new operationProtos.google.longrunning.GetOperationRequest();
        request.name = this.latestResponse.name;
        this.currentCallPromise_ = operationsClient.getOperationInternal(request, this._callOptions);
        const noCallbackPromise = this.currentCallPromise_.then((responses)=>{
            self.latestResponse = responses[0];
            self._unpackResponse(responses[0], callback);
            return promisifyResponse();
        }, (err)=>{
            if (callback) {
                callback(err);
                return;
            }
            return Promise.reject(err);
        });
        if (!callback) {
            return noCallbackPromise;
        }
    }
    _unpackResponse(op, callback) {
        const responseDecoder = this.longrunningDescriptor.responseDecoder;
        const metadataDecoder = this.longrunningDescriptor.metadataDecoder;
        let response;
        let metadata;
        if (op.done) {
            if (op.result === 'error') {
                const error = new googleError_1.GoogleError(op.error.message);
                error.code = op.error.code;
                this.error = error;
                if (callback) {
                    callback(error);
                }
                return;
            }
            if (responseDecoder && op.response) {
                this.response = op.response;
                response = responseDecoder(op.response.value);
                this.result = response;
                this.done = true;
            }
        }
        if (metadataDecoder && op.metadata) {
            metadata = metadataDecoder(op.metadata.value);
            this.metadata = metadata;
        }
        if (callback) {
            callback(null, response, metadata, op);
        }
    }
    /**
     * Poll `getOperation` to check the operation's status. This runs a loop to
     * ping using the backoff strategy specified at initialization.
     *
     * Note: This method is automatically called once a "complete" event handler
     * is registered on the operation.
     *
     * @private
     */ startPolling_() {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const self = this;
        let now = new Date();
        const delayMult = this.backoffSettings.retryDelayMultiplier;
        const maxDelay = this.backoffSettings.maxRetryDelayMillis;
        let delay = this.backoffSettings.initialRetryDelayMillis;
        let deadline = Infinity;
        if (this.backoffSettings.totalTimeoutMillis) {
            deadline = now.getTime() + this.backoffSettings.totalTimeoutMillis;
        }
        let previousMetadataBytes;
        if (this.latestResponse.metadata) {
            previousMetadataBytes = this.latestResponse.metadata.value;
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        function emit(event, ...args) {
            self.emit(event, ...args);
        }
        // Helper function to replace nodejs buffer's equals()
        function arrayEquals(a, b) {
            if (a.byteLength !== b.byteLength) {
                return false;
            }
            for(let i = 0; i < a.byteLength; ++i){
                if (a[i] !== b[i]) return false;
            }
            return true;
        }
        function retry() {
            if (!self.hasActiveListeners) {
                return;
            }
            if (now.getTime() >= deadline) {
                const error = new googleError_1.GoogleError('Total timeout exceeded before any response was received');
                error.code = status_1.Status.DEADLINE_EXCEEDED;
                setImmediate(emit, 'error', error);
                return;
            }
            self.getOperation((err, result, metadata, rawResponse)=>{
                if (err) {
                    setImmediate(emit, 'error', err);
                    return;
                }
                if (!result) {
                    if (rawResponse.metadata && (!previousMetadataBytes || rawResponse && !arrayEquals(rawResponse.metadata.value, previousMetadataBytes))) {
                        setImmediate(emit, 'progress', metadata, rawResponse);
                        previousMetadataBytes = rawResponse.metadata.value;
                    }
                    // special case: some APIs fail to set either result or error
                    // but set done = true (e.g. speech with silent file).
                    // Some APIs just use this for the normal completion
                    // (e.g. nodejs-contact-center-insights), so let's just return
                    // an empty response in this case.
                    if (rawResponse.done) {
                        setImmediate(emit, 'complete', {}, metadata, rawResponse);
                        return;
                    }
                    setTimeout(()=>{
                        now = new Date();
                        delay = Math.min(delay * delayMult, maxDelay);
                        retry();
                    }, delay);
                    return;
                }
                setImmediate(emit, 'complete', result, metadata, rawResponse);
            });
        }
        retry();
    }
    /**
     * Wraps the `complete` and `error` events in a Promise.
     *
     * @return {promise} - Promise that resolves on operation completion and rejects
     * on operation error.
     */ promise() {
        return new Promise((resolve, reject)=>{
            this.on('error', reject).on('complete', (result, metadata, rawResponse)=>{
                resolve([
                    result,
                    metadata,
                    rawResponse
                ]);
            });
        });
    }
}
exports.Operation = Operation;
/**
 * Method used to create Operation objects.
 *
 * @constructor
 *
 * @param {google.longrunning.Operation} op - The operation to be wrapped.
 * @param {LongRunningDescriptor} longrunningDescriptor - This defines the
 * operations service client and unpacking mechanisms for the operation.
 * @param {BackoffSettings} backoffSettings - The backoff settings used in
 * in polling the operation.
 * @param {CallOptions=} callOptions - CallOptions used in making get operation
 * requests.
 */ function operation(op, longrunningDescriptor, backoffSettings, callOptions) {
    return new Operation(op, longrunningDescriptor, backoffSettings, callOptions);
} //# sourceMappingURL=longrunning.js.map
}}),
"[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.camelToSnakeCase = camelToSnakeCase;
exports.toCamelCase = toCamelCase;
exports.toLowerCamelCase = toLowerCamelCase;
exports.makeUUID = makeUUID;
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ const uuid_1 = __turbopack_context__.r("[project]/node_modules/google-gax/node_modules/uuid/dist/esm-node/index.js [app-rsc] (ecmascript)");
function words(str, normalize = false) {
    if (normalize) {
        // strings like somethingABCSomething are special case for protobuf.js,
        // they should be split as "something", "abc", "something".
        // Deal with sequences of capital letters first.
        str = str.replace(/([A-Z])([A-Z]+)([A-Z])/g, (str)=>{
            return str[0] + str.slice(1, str.length - 1).toLowerCase() + str[str.length - 1];
        });
    }
    // split on spaces, non-alphanumeric, or capital letters
    // note: we keep the capitalization of the first word (special case: IPProtocol)
    return str.split(/(?=[A-Z])|[^A-Za-z0-9.]+/).filter((w)=>w.length > 0).map((w, index)=>index === 0 ? w : w.toLowerCase());
}
/**
 * Converts the first character of the given string to lower case.
 */ function lowercase(str) {
    if (str.length === 0) {
        return str;
    }
    return str[0].toLowerCase() + str.slice(1);
}
/**
 * Converts a given string from camelCase (used by protobuf.js and in JSON)
 * to snake_case (normally used in proto definitions).
 */ function camelToSnakeCase(str) {
    // Keep the first position capitalization, otherwise decapitalize with underscore.
    const wordsList = words(str);
    if (wordsList.length === 0) {
        return str;
    }
    const result = [
        wordsList[0]
    ];
    result.push(...wordsList.slice(1).map(lowercase));
    return result.join('_');
}
/**
 * Capitalizes the first character of the given string.
 */ function capitalize(str) {
    if (str.length === 0) {
        return str;
    }
    return str[0].toUpperCase() + str.slice(1);
}
/**
 * Converts a given string from snake_case (normally used in proto definitions) or
 * PascalCase (also used in proto definitions) to camelCase (used by protobuf.js).
 * Preserves capitalization of the first character.
 */ function toCamelCase(str) {
    const wordsList = words(str, /*normalize:*/ true);
    if (wordsList.length === 0) {
        return str;
    }
    const result = [
        wordsList[0]
    ];
    result.push(...wordsList.slice(1).map((w)=>{
        if (w.match(/^\d+$/)) {
            return '_' + w;
        }
        return capitalize(w);
    }));
    return result.join('');
}
/**
 * Converts a given string to lower camel case (forcing the first character to be
 * in lower case).
 */ function toLowerCamelCase(str) {
    const camelCase = toCamelCase(str);
    if (camelCase.length === 0) {
        return camelCase;
    }
    return camelCase[0].toLowerCase() + camelCase.slice(1);
}
/**
 * Converts a given string to lower camel case (forcing the first character to be
 * in lower case).
 */ function makeUUID() {
    return (0, uuid_1.v4)();
} //# sourceMappingURL=util.js.map
}}),
"[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CallSettings = exports.RetryOptions = void 0;
exports.convertRetryOptions = convertRetryOptions;
exports.createRetryOptions = createRetryOptions;
exports.createBackoffSettings = createBackoffSettings;
exports.createDefaultBackoffSettings = createDefaultBackoffSettings;
exports.createMaxRetriesBackoffSettings = createMaxRetriesBackoffSettings;
exports.createBundleOptions = createBundleOptions;
exports.constructSettings = constructSettings;
exports.createByteLengthFunction = createByteLengthFunction;
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
const util_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)");
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
/**
 * Encapsulates the overridable settings for a particular API call.
 *
 * ``CallOptions`` is an optional arg for all GAX API calls.  It is used to
 * configure the settings of a specific API call.
 *
 * When provided, its values override the GAX service defaults for that
 * particular call.
 *
 * Typically the API clients will accept this as the second to the last
 * argument. See the examples below.
 * @typedef {Object} CallOptions
 * @property {number=} timeout - The client-side timeout for API calls.
 * @property {RetryOptions=} retry - determines whether and how to retry
 *   on transient errors. When set to null, the call will not retry.
 * @property {boolean=} autoPaginate - If set to false and the call is
 *   configured for paged iteration, page unrolling is not performed, instead
 *   the callback will be called with the response object.
 * @property {Object=} pageToken - If set and the call is configured for
 *   paged iteration, paged iteration is not performed and requested with this
 *   pageToken.
 * @property {number} maxResults - If set and the call is configured for
 *   paged iteration, the call will stop when the number of response elements
 *   reaches to the specified size. By default, it will unroll the page to
 *   the end of the list.
 * @property {boolean=} isBundling - If set to false and the call is configured
 *   for bundling, bundling is not performed.
 * @property {BackoffSettings=} longrunning - BackoffSettings used for polling.
 * @example
 * // suppress bundling for bundled method.
 * api.bundlingMethod(
 *     param, {optParam: aValue, isBundling: false}, function(err, response) {
 *   // handle response.
 * });
 * @example
 * // suppress streaming for page-streaming method.
 * api.pageStreamingMethod(
 *     param, {optParam: aValue, autoPaginate: false}, function(err, page) {
 *   // not returning a stream, but callback is called with the paged response.
 * });
 */ /**
 * Per-call configurable settings for retrying upon transient failure.
 * @implements {RetryOptionsType}
 * @typedef {Object} RetryOptions
 * @property {number[]} retryCodes
 * @property {BackoffSettings} backoffSettings
 * @property {(function)} shouldRetryFn
 * @property {(function)} getResumptionRequestFn
 */ class RetryOptions {
    constructor(retryCodes, backoffSettings, shouldRetryFn, getResumptionRequestFn){
        this.retryCodes = retryCodes;
        this.backoffSettings = backoffSettings;
        this.shouldRetryFn = shouldRetryFn;
        this.getResumptionRequestFn = getResumptionRequestFn;
    }
}
exports.RetryOptions = RetryOptions;
class CallSettings {
    /**
     * @param {Object} settings - An object containing parameters of this settings.
     * @param {number} settings.timeout - The client-side timeout for API calls.
     *   This parameter is ignored for retrying calls.
     * @param {RetryOptions} settings.retry - The configuration for retrying upon
     *   transient error. If set to null, this call will not retry.
     * @param {boolean} settings.autoPaginate - If there is no `pageDescriptor`,
     *   this attrbute has no meaning. Otherwise, determines whether a page
     * streamed response should make the page structure transparent to the user by
     *   flattening the repeated field in the returned generator.
     * @param {number} settings.pageToken - If there is no `pageDescriptor`,
     *   this attribute has no meaning. Otherwise, determines the page token used
     * in the page streaming request.
     * @param {Object} settings.otherArgs - Additional arguments to be passed to
     *   the API calls.
     *
     * @constructor
     */ constructor(settings){
        var _a;
        settings = settings || {};
        this.timeout = settings.timeout || 30 * 1000;
        this.retry = settings.retry;
        this.autoPaginate = 'autoPaginate' in settings ? settings.autoPaginate : true;
        this.maxResults = settings.maxResults;
        this.otherArgs = settings.otherArgs || {};
        this.bundleOptions = settings.bundleOptions;
        this.isBundling = 'isBundling' in settings ? settings.isBundling : true;
        this.longrunning = 'longrunning' in settings ? settings.longrunning : undefined;
        this.apiName = (_a = settings.apiName) !== null && _a !== void 0 ? _a : undefined;
        this.retryRequestOptions = settings.retryRequestOptions;
    }
    /**
     * Returns a new CallSettings merged from this and a CallOptions object.
     *
     * @param {CallOptions} options - an instance whose values override
     *   those in this object. If null, ``merge`` returns a copy of this
     *   object
     * @return {CallSettings} The merged CallSettings instance.
     */ merge(options) {
        if (!options) {
            return new CallSettings(this);
        }
        let timeout = this.timeout;
        let retry = this.retry;
        let autoPaginate = this.autoPaginate;
        let maxResults = this.maxResults;
        let otherArgs = this.otherArgs;
        let isBundling = this.isBundling;
        let longrunning = this.longrunning;
        let apiName = this.apiName;
        let retryRequestOptions = this.retryRequestOptions;
        // If the user provides a timeout to the method, that timeout value will be used
        // to override the backoff settings.
        if ('timeout' in options) {
            timeout = options.timeout;
        }
        // If a method-specific timeout is set in the service config, and the retry codes for that
        // method are non-null, then that timeout value will be used to
        // override backoff settings.
        if (retry === null || retry === void 0 ? void 0 : retry.retryCodes) {
            retry.backoffSettings.initialRpcTimeoutMillis = timeout;
            retry.backoffSettings.maxRpcTimeoutMillis = timeout;
            retry.backoffSettings.totalTimeoutMillis = timeout;
        }
        if ('retry' in options) {
            retry = mergeRetryOptions(retry || {}, options.retry);
        }
        if ('autoPaginate' in options && !options.autoPaginate) {
            autoPaginate = false;
        }
        if ('maxResults' in options) {
            maxResults = options.maxResults;
        }
        if ('otherArgs' in options) {
            otherArgs = {};
            for(const key in this.otherArgs){
                otherArgs[key] = this.otherArgs[key];
            }
            for(const optionsKey in options.otherArgs){
                otherArgs[optionsKey] = options.otherArgs[optionsKey];
            }
        }
        if ('isBundling' in options) {
            isBundling = options.isBundling;
        }
        if ('maxRetries' in options && options.maxRetries !== undefined) {
            retry.backoffSettings.maxRetries = options.maxRetries;
            delete retry.backoffSettings.totalTimeoutMillis;
        }
        if ('longrunning' in options) {
            longrunning = options.longrunning;
        }
        if ('apiName' in options) {
            apiName = options.apiName;
        }
        if ('retryRequestOptions' in options) {
            retryRequestOptions = options.retryRequestOptions;
        }
        return new CallSettings({
            timeout,
            retry,
            bundleOptions: this.bundleOptions,
            longrunning,
            autoPaginate,
            maxResults,
            otherArgs,
            isBundling,
            apiName,
            retryRequestOptions
        });
    }
}
exports.CallSettings = CallSettings;
/**
 * Validates passed retry options in preparation for eventual parameter deprecation
 * converts retryRequestOptions to retryOptions
 * then sets retryRequestOptions to null
 *
 * @param {CallOptions} options - a list of passed retry option
 * @return {CallOptions} A new CallOptions object.
 *
 */ function convertRetryOptions(options, gaxStreamingRetries) {
    var _a, _b, _c, _d;
    // options will be undefined if no CallOptions object is passed at call time
    if (!options) {
        return options;
    }
    // if a user provided retry AND retryRequestOptions at call time, throw an error
    // otherwise, convert supported parameters
    if (!gaxStreamingRetries) {
        return options;
    }
    if (options.retry && options.retryRequestOptions) {
        throw new Error('Only one of retry or retryRequestOptions may be set');
    } // handles parameter conversion from retryRequestOptions to retryOptions
    if (options.retryRequestOptions) {
        if (options.retryRequestOptions.objectMode !== undefined) {
            (0, warnings_1.warn)('retry_request_options', 'objectMode override is not supported. It is set to true internally by default in gax.', 'UnsupportedParameterWarning');
        }
        if (options.retryRequestOptions.noResponseRetries !== undefined) {
            (0, warnings_1.warn)('retry_request_options', 'noResponseRetries override is not supported. Please specify retry codes or a function to determine retry eligibility.', 'UnsupportedParameterWarning');
        }
        if (options.retryRequestOptions.currentRetryAttempt !== undefined) {
            (0, warnings_1.warn)('retry_request_options', 'currentRetryAttempt override is not supported. Retry attempts are tracked internally.', 'UnsupportedParameterWarning');
        }
        let retryCodes = [
            status_1.Status.UNAVAILABLE
        ];
        let shouldRetryFn;
        if (options.retryRequestOptions.shouldRetryFn) {
            retryCodes = [];
            shouldRetryFn = options.retryRequestOptions.shouldRetryFn;
        }
        //Backoff settings
        options.maxRetries = (_b = (_a = options === null || options === void 0 ? void 0 : options.retryRequestOptions) === null || _a === void 0 ? void 0 : _a.retries) !== null && _b !== void 0 ? _b : options.maxRetries;
        // create a default backoff settings object in case the user didn't provide overrides for everything
        const backoffSettings = createDefaultBackoffSettings();
        let maxRetryDelayMillis;
        let totalTimeoutMillis;
        // maxRetryDelay - this is in seconds, need to convert to milliseconds
        if (options.retryRequestOptions.maxRetryDelay !== undefined) {
            maxRetryDelayMillis = options.retryRequestOptions.maxRetryDelay * 1000;
        }
        // retryDelayMultiplier - should be a one to one mapping to retryDelayMultiplier
        const retryDelayMultiplier = (_d = (_c = options === null || options === void 0 ? void 0 : options.retryRequestOptions) === null || _c === void 0 ? void 0 : _c.retryDelayMultiplier) !== null && _d !== void 0 ? _d : backoffSettings.retryDelayMultiplier;
        // this is in seconds and needs to be converted to milliseconds and the totalTimeoutMillis parameter
        if (options.retryRequestOptions.totalTimeout !== undefined) {
            totalTimeoutMillis = options.retryRequestOptions.totalTimeout * 1000;
        } else {
            if (options.maxRetries === undefined) {
                totalTimeoutMillis = 30000;
                (0, warnings_1.warn)('retry_request_options_no_max_retries_timeout', 'Neither maxRetries nor totalTimeout were passed. Defaulting to totalTimeout of 30000ms.', 'MissingParameterWarning');
            }
        }
        // for the variables the user wants to override, override in the backoff settings object we made
        backoffSettings.maxRetryDelayMillis = maxRetryDelayMillis !== null && maxRetryDelayMillis !== void 0 ? maxRetryDelayMillis : backoffSettings.maxRetryDelayMillis;
        backoffSettings.retryDelayMultiplier = retryDelayMultiplier !== null && retryDelayMultiplier !== void 0 ? retryDelayMultiplier : backoffSettings.retryDelayMultiplier;
        backoffSettings.totalTimeoutMillis = totalTimeoutMillis !== null && totalTimeoutMillis !== void 0 ? totalTimeoutMillis : backoffSettings.totalTimeoutMillis;
        const convertedRetryOptions = createRetryOptions(retryCodes, backoffSettings, shouldRetryFn);
        options.retry = convertedRetryOptions;
        delete options.retryRequestOptions; // completely remove them to avoid any further confusion
        (0, warnings_1.warn)('retry_request_options', 'retryRequestOptions will be deprecated in a future release. Please use retryOptions to pass retry options at call time', 'DeprecationWarning');
    }
    return options;
}
/**
 * Per-call configurable settings for retrying upon transient failure.
 * @param {number[]} retryCodes - a list of Google API canonical error codes OR a function that returns a boolean to determine retry behavior
 *   upon which a retry should be attempted.
 * @param {BackoffSettings} backoffSettings - configures the retry
 *   exponential backoff algorithm.
 * @param {function} shouldRetryFn - a function that determines whether a call should retry. If this is defined retryCodes must be empty
 * @param {function} getResumptionRequestFn - a function with a resumption strategy - only used with server streaming retries
 * @return {RetryOptions} A new RetryOptions object.
 *
 */ function createRetryOptions(retryCodes, backoffSettings, shouldRetryFn, getResumptionRequestFn) {
    return {
        retryCodes,
        backoffSettings,
        shouldRetryFn,
        getResumptionRequestFn
    };
}
/**
 * Parameters to the exponential backoff algorithm for retrying.
 *
 * @param {number} initialRetryDelayMillis - the initial delay time,
 *   in milliseconds, between the completion of the first failed request and the
 *   initiation of the first retrying request.
 * @param {number} retryDelayMultiplier - the multiplier by which to
 *   increase the delay time between the completion of failed requests, and the
 *   initiation of the subsequent retrying request.
 * @param {number} maxRetryDelayMillis - the maximum delay time, in
 *   milliseconds, between requests. When this value is reached,
 *   ``retryDelayMultiplier`` will no longer be used to increase delay time.
 * @param {number} initialRpcTimeoutMillis - the initial timeout parameter
 *   to the request.
 * @param {number} rpcTimeoutMultiplier - the multiplier by which to
 *   increase the timeout parameter between failed requests.
 * @param {number} maxRpcTimeoutMillis - the maximum timeout parameter, in
 *   milliseconds, for a request. When this value is reached,
 *   ``rpcTimeoutMultiplier`` will no longer be used to increase the timeout.
 * @param {number} totalTimeoutMillis - the total time, in milliseconds,
 *   starting from when the initial request is sent, after which an error will
 *   be returned, regardless of the retrying attempts made meanwhile.
 * @return {BackoffSettings} a new settings.
 *
 */ function createBackoffSettings(initialRetryDelayMillis, retryDelayMultiplier, maxRetryDelayMillis, initialRpcTimeoutMillis, rpcTimeoutMultiplier, maxRpcTimeoutMillis, totalTimeoutMillis) {
    return {
        initialRetryDelayMillis,
        retryDelayMultiplier,
        maxRetryDelayMillis,
        initialRpcTimeoutMillis,
        rpcTimeoutMultiplier,
        maxRpcTimeoutMillis,
        totalTimeoutMillis
    };
}
function createDefaultBackoffSettings() {
    return createBackoffSettings(100, 1.3, 60000, null, null, null, null);
}
/**
 * Parameters to the exponential backoff algorithm for retrying.
 * This function is unsupported, and intended for internal use only.
 *
 * @param {number} initialRetryDelayMillis - the initial delay time,
 *   in milliseconds, between the completion of the first failed request and the
 *   initiation of the first retrying request.
 * @param {number} retryDelayMultiplier - the multiplier by which to
 *   increase the delay time between the completion of failed requests, and the
 *   initiation of the subsequent retrying request.
 * @param {number} maxRetryDelayMillis - the maximum delay time, in
 *   milliseconds, between requests. When this value is reached,
 *   ``retryDelayMultiplier`` will no longer be used to increase delay time.
 * @param {number} initialRpcTimeoutMillis - the initial timeout parameter
 *   to the request.
 * @param {number} rpcTimeoutMultiplier - the multiplier by which to
 *   increase the timeout parameter between failed requests.
 * @param {number} maxRpcTimeoutMillis - the maximum timeout parameter, in
 *   milliseconds, for a request. When this value is reached,
 *   ``rpcTimeoutMultiplier`` will no longer be used to increase the timeout.
 * @param {number} maxRetries - the maximum number of retrying attempts that
 *   will be made. If reached, an error will be returned.
 * @return {BackoffSettings} a new settings.
 *
 */ function createMaxRetriesBackoffSettings(initialRetryDelayMillis, retryDelayMultiplier, maxRetryDelayMillis, initialRpcTimeoutMillis, rpcTimeoutMultiplier, maxRpcTimeoutMillis, maxRetries) {
    return {
        initialRetryDelayMillis,
        retryDelayMultiplier,
        maxRetryDelayMillis,
        initialRpcTimeoutMillis,
        rpcTimeoutMultiplier,
        maxRpcTimeoutMillis,
        maxRetries
    };
}
/**
 * Creates a new {@link BundleOptions}.
 *
 * @private
 * @param {Object} options - An object to hold optional parameters. See
 *   properties for the content of options.
 * @return {BundleOptions} - A new options.
 */ function createBundleOptions(options) {
    const params = [
        'element_count_threshold',
        'element_count_limit',
        'request_byte_threshold',
        'request_byte_limit',
        'delay_threshold_millis'
    ];
    params.forEach((param)=>{
        if (param in options && typeof options[param] !== 'number') {
            throw new Error(`${param} should be a number`);
        }
    });
    const elementCountThreshold = options.element_count_threshold || 0;
    const elementCountLimit = options.element_count_limit || 0;
    const requestByteThreshold = options.request_byte_threshold || 0;
    const requestByteLimit = options.request_byte_limit || 0;
    const delayThreshold = options.delay_threshold_millis || 0;
    if (elementCountThreshold === 0 && requestByteThreshold === 0 && delayThreshold === 0) {
        throw new Error('one threshold should be > 0');
    }
    return {
        elementCountThreshold,
        elementCountLimit,
        requestByteThreshold,
        requestByteLimit,
        delayThreshold
    };
}
/**
 * Helper for {@link constructSettings}
 *
 * @private
 *
 * @param {Object} methodConfig - A dictionary representing a single
 *   `methods` entry of the standard API client config file. (See
 *   {@link constructSettings} for information on this yaml.)
 * @param {?Object} retryCodes - A dictionary parsed from the
 *   `retry_codes_def` entry of the standard API client config
 *   file. (See {@link constructSettings} for information on this yaml.)
 * @param {Object} retryParams - A dictionary parsed from the
 *   `retry_params` entry of the standard API client config
 *   file. (See {@link constructSettings} for information on this yaml.)
 * @param {Object} retryNames - A dictionary mapping the string names
 *   used in the standard API client config file to API response
 *   status codes.
 * @return {?RetryOptions} The new retry options.
 */ function constructRetry(methodConfig, retryCodes, retryParams, retryNames) {
    if (!methodConfig) {
        return null;
    }
    let codes = null; // this is one instance where it will NOT be an array OR a function because we do not allow shouldRetryFn in the client
    if (retryCodes && 'retry_codes_name' in methodConfig) {
        const retryCodesName = methodConfig['retry_codes_name'];
        codes = (retryCodes[retryCodesName] || []).map((name)=>{
            return Number(retryNames[name]);
        });
    }
    let backoffSettings = null;
    if (retryParams && 'retry_params_name' in methodConfig) {
        const params = retryParams[methodConfig.retry_params_name];
        backoffSettings = createBackoffSettings(params.initial_retry_delay_millis, params.retry_delay_multiplier, params.max_retry_delay_millis, params.initial_rpc_timeout_millis, params.rpc_timeout_multiplier, params.max_rpc_timeout_millis, params.total_timeout_millis);
    }
    return createRetryOptions(codes, backoffSettings);
}
/**
 * Helper for {@link constructSettings}
 *
 * Takes two retry options, and merges them into a single RetryOption instance.
 *
 * @private
 *
 * @param {RetryOptions} retry - The base RetryOptions.
 * @param {RetryOptions} overrides - The RetryOptions used for overriding
 *   `retry`. Use the values if it is not null. If entire `overrides` is null,
 *   ignore the base retry and return null.
 * @return {?RetryOptions} The merged RetryOptions.
 */ function mergeRetryOptions(retry, overrides) {
    if (!overrides) {
        return null;
    }
    if (!overrides.retryCodes && !overrides.backoffSettings && !overrides.shouldRetryFn && !overrides.getResumptionRequestFn) {
        return retry;
    }
    const retryCodes = overrides.retryCodes ? overrides.retryCodes : retry.retryCodes;
    const backoffSettings = overrides.backoffSettings ? overrides.backoffSettings : retry.backoffSettings;
    const shouldRetryFn = overrides.shouldRetryFn ? overrides.shouldRetryFn : retry.shouldRetryFn;
    const getResumptionRequestFn = overrides.getResumptionRequestFn ? overrides.getResumptionRequestFn : retry.getResumptionRequestFn;
    return createRetryOptions(retryCodes, backoffSettings, shouldRetryFn, getResumptionRequestFn);
}
/**
 * Constructs a dictionary mapping method names to {@link CallSettings}.
 *
 * The `clientConfig` parameter is parsed from a client configuration JSON
 * file of the form:
 *
 *     {
 *       "interfaces": {
 *         "google.fake.v1.ServiceName": {
 *           "retry_codes": {
 *             "idempotent": ["UNAVAILABLE", "DEADLINE_EXCEEDED"],
 *             "non_idempotent": []
 *           },
 *           "retry_params": {
 *             "default": {
 *               "initial_retry_delay_millis": 100,
 *               "retry_delay_multiplier": 1.2,
 *               "max_retry_delay_millis": 1000,
 *               "initial_rpc_timeout_millis": 2000,
 *               "rpc_timeout_multiplier": 1.5,
 *               "max_rpc_timeout_millis": 30000,
 *               "total_timeout_millis": 45000
 *             }
 *           },
 *           "methods": {
 *             "CreateFoo": {
 *               "retry_codes_name": "idempotent",
 *               "retry_params_name": "default"
 *             },
 *             "Publish": {
 *               "retry_codes_name": "non_idempotent",
 *               "retry_params_name": "default",
 *               "bundling": {
 *                 "element_count_threshold": 40,
 *                 "element_count_limit": 200,
 *                 "request_byte_threshold": 90000,
 *                 "request_byte_limit": 100000,
 *                 "delay_threshold_millis": 100
 *               }
 *             }
 *           }
 *         }
 *       }
 *     }
 *
 * @param {String} serviceName - The fully-qualified name of this
 *   service, used as a key into the client config file (in the
 *   example above, this value should be 'google.fake.v1.ServiceName').
 * @param {Object} clientConfig - A dictionary parsed from the
 *   standard API client config file.
 * @param {Object} configOverrides - A dictionary in the same structure of
 *   client_config to override the settings.
 * @param {Object.<string, string[]>} retryNames - A dictionary mapping the strings
 *   referring to response status codes to objects representing
 *   those codes.
 * @param {Object} otherArgs - the non-request arguments to be passed to the API
 *   calls.
 * @return {Object} A mapping from method name to CallSettings, or null if the
 *   service is not found in the config.
 */ function constructSettings(serviceName, clientConfig, configOverrides, retryNames, otherArgs) {
    otherArgs = otherArgs || {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const defaults = {};
    const serviceConfig = (clientConfig.interfaces || {})[serviceName];
    if (!serviceConfig) {
        return null;
    }
    // users can override the config from client side, like bundling options.
    // The detailed structure of the clientConfig can be found here: https://github.com/googleapis/gax-nodejs/blob/main/src/gax.ts#L546
    // The way to override bundling options:
    //
    // const customConfig = {"interfaces": {"service": {"methods": {"methodName": {"bundling": {..}}}}}}
    // const client = new Client({ projectId, customConfig });
    const overrides = (configOverrides.interfaces || {})[serviceName] || {};
    const methods = serviceConfig.methods;
    const overridingMethods = overrides.methods || {};
    for(const methodName in methods){
        const methodConfig = methods[methodName];
        const jsName = (0, util_1.toLowerCamelCase)(methodName);
        let retry = constructRetry(methodConfig, serviceConfig.retry_codes, serviceConfig.retry_params, retryNames);
        let bundlingConfig = methodConfig.bundling;
        let timeout = methodConfig.timeout_millis;
        if (methodName in overridingMethods) {
            const overridingMethod = overridingMethods[methodName];
            if (overridingMethod) {
                if ('bundling' in overridingMethod) {
                    bundlingConfig = overridingMethod.bundling;
                }
                if ('timeout_millis' in overridingMethod) {
                    timeout = overridingMethod.timeout_millis;
                }
            }
            retry = mergeRetryOptions(retry, constructRetry(overridingMethod, overrides.retry_codes, overrides.retry_params, retryNames));
        }
        const apiName = serviceName;
        defaults[jsName] = new CallSettings({
            timeout,
            retry,
            bundleOptions: bundlingConfig ? createBundleOptions(bundlingConfig) : null,
            otherArgs,
            apiName
        });
    }
    return defaults;
}
function createByteLengthFunction(message) {
    return function getByteLength(obj) {
        try {
            return message.encode(obj).finish().length;
        } catch (err) {
            const stringified = JSON.stringify(obj);
            (0, warnings_1.warn)('error_encoding_protobufjs_object', `Cannot encode protobuf.js object: ${stringified}: ${err}`);
            // We failed to encode the object properly, let's just return an upper boundary of its length.
            // It's only needed for calculating the size of the batch, so it's safe if it's bigger than needed.
            return stringified.length;
        }
    };
} //# sourceMappingURL=gax.js.map
}}),
"[project]/node_modules/google-gax/build/src/routingHeader.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fromParams = fromParams;
const querystring = __turbopack_context__.r("[externals]/querystring [external] (querystring, cjs)");
/**
 * Helpers for constructing routing headers.
 *
 * These headers are used by Google infrastructure to determine how to route
 * requests, especially for services that are regional.
 *
 * Generally, these headers are specified as gRPC metadata.
 */ /**
 * Constructs the routing header from the given params
 *
 * @param {Object} params - the request header parameters.
 * @return {string} the routing header value.
 */ function fromParams(params) {
    return querystring.stringify(params);
} //# sourceMappingURL=routingHeader.js.map
}}),
"[project]/node_modules/google-gax/build/src/transcoding.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getField = getField;
exports.deepCopyWithoutMatchedFields = deepCopyWithoutMatchedFields;
exports.deleteField = deleteField;
exports.buildQueryStringComponents = buildQueryStringComponents;
exports.encodeWithSlashes = encodeWithSlashes;
exports.encodeWithoutSlashes = encodeWithoutSlashes;
exports.applyPattern = applyPattern;
exports.match = match;
exports.flattenObject = flattenObject;
exports.isProto3OptionalField = isProto3OptionalField;
exports.transcode = transcode;
exports.overrideHttpRules = overrideHttpRules;
const util_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)");
const httpOptionName = '(google.api.http)';
const proto3OptionalName = 'proto3_optional';
// List of methods as defined in google/api/http.proto (see HttpRule)
const supportedHttpMethods = [
    'get',
    'post',
    'put',
    'patch',
    'delete'
];
function getField(request, field, allowObjects = false // in most cases, we need leaf fields
) {
    const parts = field.split('.');
    let value = request;
    for (const part of parts){
        if (typeof value !== 'object') {
            return undefined;
        }
        value = value[part];
    }
    if (!allowObjects && typeof value === 'object' && !Array.isArray(value) && value !== null) {
        return undefined;
    }
    return value;
}
function deepCopyWithoutMatchedFields(request, fieldsToSkip, fullNamePrefix = '') {
    if (typeof request !== 'object' || request === null) {
        return request;
    }
    const copy = Object.assign({}, request);
    for(const key in copy){
        if (fieldsToSkip.has(`${fullNamePrefix}${key}`)) {
            delete copy[key];
            continue;
        }
        const nextFullNamePrefix = `${fullNamePrefix}${key}.`;
        if (Array.isArray(copy[key])) {
            // a field of an array cannot be addressed as "request.field", so we omit the skipping logic for array descendants
            copy[key] = copy[key].map((value)=>deepCopyWithoutMatchedFields(value, new Set()));
        } else if (typeof copy[key] === 'object' && copy[key] !== null) {
            copy[key] = deepCopyWithoutMatchedFields(copy[key], fieldsToSkip, nextFullNamePrefix);
        }
    }
    return copy;
}
function deleteField(request, field) {
    const parts = field.split('.');
    while(parts.length > 1){
        if (typeof request !== 'object') {
            return;
        }
        const part = parts.shift();
        request = request[part];
    }
    const part = parts.shift();
    if (typeof request !== 'object') {
        return;
    }
    delete request[part];
}
function buildQueryStringComponents(request, prefix = '') {
    const resultList = [];
    for(const key in request){
        if (Array.isArray(request[key])) {
            for (const value of request[key]){
                resultList.push(`${prefix}${encodeWithoutSlashes(key)}=${encodeWithoutSlashes(value.toString())}`);
            }
        } else if (typeof request[key] === 'object' && request[key] !== null) {
            resultList.push(...buildQueryStringComponents(request[key], `${key}.`));
        } else {
            resultList.push(`${prefix}${encodeWithoutSlashes(key)}=${encodeWithoutSlashes(request[key] === null ? 'null' : request[key].toString())}`);
        }
    }
    return resultList;
}
function encodeWithSlashes(str) {
    return str.split('').map((c)=>c.match(/[-_.~0-9a-zA-Z]/) ? c : encodeURIComponent(c)).join('');
}
function encodeWithoutSlashes(str) {
    return str.split('').map((c)=>c.match(/[-_.~0-9a-zA-Z/]/) ? c : encodeURIComponent(c)).join('');
}
function escapeRegExp(str) {
    return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}
function applyPattern(pattern, fieldValue) {
    if (!pattern || pattern === '*') {
        return encodeWithSlashes(fieldValue);
    }
    if (!pattern.includes('*') && pattern !== fieldValue) {
        return undefined;
    }
    // since we're converting the pattern to a regex, make necessary precautions:
    const regex = new RegExp('^' + escapeRegExp(pattern).replace(/\\\*\\\*/g, '(.+)').replace(/\\\*/g, '([^/]+)') + '$');
    if (!fieldValue.match(regex)) {
        return undefined;
    }
    return encodeWithoutSlashes(fieldValue);
}
function fieldToCamelCase(field) {
    const parts = field.split('.');
    return parts.map((part)=>(0, util_1.toCamelCase)(part)).join('.');
}
function match(request, pattern) {
    let url = pattern;
    const matchedFields = [];
    for(;;){
        const match = url.match(/^(.*)\{([^}=]+)(?:=([^}]*))?\}(.*)/);
        if (!match) {
            break;
        }
        const [, before, field, pattern, after] = match;
        const camelCasedField = fieldToCamelCase(field);
        matchedFields.push(fieldToCamelCase(camelCasedField));
        const fieldValue = getField(request, camelCasedField);
        if (fieldValue === undefined) {
            return undefined;
        }
        const appliedPattern = applyPattern(pattern, fieldValue === null ? 'null' : fieldValue.toString());
        if (appliedPattern === undefined) {
            return undefined;
        }
        url = before + appliedPattern + after;
    }
    return {
        matchedFields,
        url
    };
}
function flattenObject(request) {
    const result = {};
    for(const key in request){
        if (request[key] === undefined) {
            continue;
        }
        if (Array.isArray(request[key])) {
            // According to the http.proto comments, a repeated field may only
            // contain primitive types, so no extra recursion here.
            result[key] = request[key];
            continue;
        }
        if (typeof request[key] === 'object' && request[key] !== null) {
            const nested = flattenObject(request[key]);
            for(const nestedKey in nested){
                result[`${key}.${nestedKey}`] = nested[nestedKey];
            }
            continue;
        }
        result[key] = request[key];
    }
    return result;
}
function isProto3OptionalField(field) {
    return field && field.options && field.options[proto3OptionalName];
}
function transcode(request, parsedOptions) {
    const httpRules = [];
    for (const option of parsedOptions){
        if (!(httpOptionName in option)) {
            continue;
        }
        const httpRule = option[httpOptionName];
        httpRules.push(httpRule);
        if (httpRule === null || httpRule === void 0 ? void 0 : httpRule.additional_bindings) {
            const additionalBindings = Array.isArray(httpRule.additional_bindings) ? httpRule.additional_bindings : [
                httpRule.additional_bindings
            ];
            httpRules.push(...additionalBindings);
        }
    }
    for (const httpRule of httpRules){
        for (const httpMethod of supportedHttpMethods){
            if (!(httpMethod in httpRule)) {
                continue;
            }
            const pathTemplate = httpRule[httpMethod];
            const matchResult = match(request, pathTemplate);
            if (matchResult === undefined) {
                continue;
            }
            const { url, matchedFields } = matchResult;
            let data = deepCopyWithoutMatchedFields(request, new Set(matchedFields));
            if (httpRule.body === '*') {
                return {
                    httpMethod,
                    url,
                    queryString: '',
                    data
                };
            }
            // one field possibly goes to request data, others go to query string
            const queryStringObject = data;
            if (httpRule.body) {
                data = getField(queryStringObject, fieldToCamelCase(httpRule.body), /*allowObjects:*/ true);
                deleteField(queryStringObject, fieldToCamelCase(httpRule.body));
            } else {
                data = '';
            }
            const queryStringComponents = buildQueryStringComponents(queryStringObject);
            const queryString = queryStringComponents.join('&');
            if (!data || typeof data === 'object' && Object.keys(data).length === 0) {
                data = '';
            }
            return {
                httpMethod,
                url,
                queryString,
                data
            };
        }
    }
    return undefined;
}
// Override the protobuf json's the http rules.
function overrideHttpRules(httpRules, protoJson) {
    for (const rule of httpRules){
        if (!rule.selector) {
            continue;
        }
        const rpc = protoJson.lookup(rule.selector);
        // Not support override on non-exist RPC or a RPC without an annotation.
        // We could reconsider if we have the use case later.
        if (!rpc || !rpc.parsedOptions) {
            continue;
        }
        for (const item of rpc.parsedOptions){
            if (!(httpOptionName in item)) {
                continue;
            }
            const httpOptions = item[httpOptionName];
            for(const httpMethod in httpOptions){
                if (httpMethod in rule) {
                    if (httpMethod === 'additional_bindings') {
                        continue;
                    }
                    httpOptions[httpMethod] = rule[httpMethod];
                }
                if (rule.additional_bindings) {
                    httpOptions['additional_bindings'] = !httpOptions['additional_bindings'] ? [] : Array.isArray(httpOptions['additional_bindings']) ? httpOptions['additional_bindings'] : [
                        httpOptions['additional_bindings']
                    ];
                    // Make the additional_binding to be an array if it is not.
                    httpOptions['additional_bindings'].push(...rule.additional_bindings);
                }
            }
        }
    }
} //# sourceMappingURL=transcoding.js.map
}}),
"[project]/node_modules/google-gax/build/src/fallbackRest.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.encodeRequest = encodeRequest;
exports.decodeResponse = decodeResponse;
// proto-over-HTTP request encoding and decoding
const serializer = __turbopack_context__.r("[project]/node_modules/proto3-json-serializer/build/src/index.js [app-rsc] (ecmascript)");
const fallback_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallback.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
const transcoding_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/transcoding.js [app-rsc] (ecmascript)");
function encodeRequest(rpc, protocol, servicePath, servicePort, request, numericEnums) {
    const headers = {
        'Content-Type': 'application/json'
    };
    const message = rpc.resolvedRequestType.fromObject(request);
    const json = serializer.toProto3JSON(message, {
        numericEnums
    });
    if (!json) {
        throw new Error(`Cannot send null request to RPC ${rpc.name}.`);
    }
    if (typeof json !== 'object' || Array.isArray(json)) {
        throw new Error(`Request to RPC ${rpc.name} must be an object.`);
    }
    const transcoded = (0, transcoding_1.transcode)(json, rpc.parsedOptions);
    if (!transcoded) {
        throw new Error(`Cannot build HTTP request for ${JSON.stringify(json)}, method: ${rpc.name}`);
    }
    // If numeric enums feature is requested, add extra parameter to the query string
    if (numericEnums) {
        transcoded.queryString = (transcoded.queryString ? `${transcoded.queryString}&` : '') + '$alt=json%3Benum-encoding=int';
    }
    // Converts httpMethod to method that permitted in standard Fetch API spec
    // https://fetch.spec.whatwg.org/#methods
    const method = transcoded.httpMethod.toUpperCase();
    const body = JSON.stringify(transcoded.data);
    const url = `${protocol}://${servicePath}:${servicePort}/${transcoded.url.replace(/^\//, '')}?${transcoded.queryString}`;
    return {
        method,
        url,
        headers,
        body
    };
}
function decodeResponse(rpc, ok, response) {
    // eslint-disable-next-line n/no-unsupported-features/node-builtins
    const decodedString = new TextDecoder().decode(response);
    if (!decodedString) {
        throw new Error(`Received null response from RPC ${rpc.name}`);
    }
    const json = JSON.parse(decodedString);
    if (!ok) {
        const error = googleError_1.GoogleError.parseHttpError(json);
        throw error;
    }
    const message = serializer.fromProto3JSON(rpc.resolvedResponseType, json);
    if (!message) {
        throw new Error(`Received null or malformed response from JSON serializer from RPC ${rpc.name}`);
    }
    return rpc.resolvedResponseType.toObject(message, fallback_1.defaultToObjectOptions);
} //# sourceMappingURL=fallbackRest.js.map
}}),
"[project]/node_modules/google-gax/build/src/streamArrayParser.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StreamArrayParser = void 0;
const abort_controller_1 = __turbopack_context__.r("[project]/node_modules/abort-controller/dist/abort-controller.js [app-rsc] (ecmascript)");
const stream_1 = __turbopack_context__.r("[externals]/stream [external] (stream, cjs)");
const fallbackRest_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallbackRest.js [app-rsc] (ecmascript)");
const featureDetection_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/featureDetection.js [app-rsc] (ecmascript)");
class StreamArrayParser extends stream_1.Transform {
    /**
     * StreamArrayParser processes array of valid JSON objects in random chunks
     * through readable stream, and produces a stream of plain Javascript objects
     * where it converted from the corresponding protobuf message instance.
     *
     * The default JSON parser decodes the input stream under the
     * following rules:
     *  1. The stream represents a valid JSON array (must start with a "[" and
     * close with the corresponding "]"). Each element of this array is assumed to
     * be either an array or an object, and will be decoded as a JS object and
     *    delivered.
     *  2. All JSON elements in the buffer will be decoded and delivered in a
     * stream.
     *
     * @private
     * @constructor
     * @param {protobuf.Method} rpc - the protobuf method produce array of JSON.
     * @param {Object} options - the options pass to Transform Stream. See more
     * details
     * https://nodejs.org/api/stream.html#stream_new_stream_transform_options.
     */ constructor(rpc, options){
        super(Object.assign({}, options, {
            readableObjectMode: true
        }));
        this._done = false;
        this._prevBlock = Buffer.from('');
        this._isInString = false;
        this._isSkipped = false;
        this._level = 0;
        this.rpc = rpc;
        this.cancelController = (0, featureDetection_1.hasAbortController)() ? new AbortController() : new abort_controller_1.AbortController();
        this.cancelSignal = this.cancelController.signal;
        this.cancelRequested = false;
    }
    _transform(chunk, _, callback) {
        let objectStart = 0;
        let curIndex = 0;
        if (this._level === 0 && curIndex === 0) {
            if (String.fromCharCode(chunk[0]) !== '[') {
                this.emit('error', new Error(`Internal Error: API service stream data must start with a '[' and close with the corresponding ']', but it start with ${String.fromCharCode(chunk[0])}`));
            }
            curIndex++;
            this._level++;
        }
        while(curIndex < chunk.length){
            const curValue = String.fromCharCode(chunk[curIndex]);
            if (!this._isSkipped) {
                switch(curValue){
                    case '{':
                        // Check if it's in string, we ignore the curly brace in string.
                        // Otherwise the object level++.
                        if (!this._isInString) {
                            this._level++;
                        }
                        if (!this._isInString && this._level === 2) {
                            objectStart = curIndex;
                        }
                        break;
                    case '"':
                        // Flip the string status
                        this._isInString = !this._isInString;
                        break;
                    case '}':
                        // check if it's in string
                        // if true, do nothing
                        // if false and level = 0, push data
                        if (!this._isInString) {
                            this._level--;
                        }
                        if (!this._isInString && this._level === 1) {
                            // find a object
                            const objBuff = Buffer.concat([
                                this._prevBlock,
                                chunk.slice(objectStart, curIndex + 1)
                            ]);
                            try {
                                // HTTP response.ok is true.
                                const msgObj = (0, fallbackRest_1.decodeResponse)(this.rpc, true, objBuff);
                                this.push(msgObj);
                            } catch (err) {
                                this.emit('error', err);
                            }
                            objectStart = curIndex + 1;
                            this._prevBlock = Buffer.from('');
                        }
                        break;
                    case ']':
                        if (!this._isInString && this._level === 1) {
                            this._done = true;
                            this.push(null);
                        }
                        break;
                    case '\\':
                        // Escaping escape character.
                        this._isSkipped = true;
                        break;
                    default:
                        break;
                }
            } else {
                this._isSkipped = false;
            }
            curIndex++;
        }
        if (this._level > 1) {
            this._prevBlock = Buffer.concat([
                this._prevBlock,
                chunk.slice(objectStart, curIndex)
            ]);
        }
        callback();
    }
    _flush(callback) {
        callback();
    }
    cancel() {
        this._done = true;
        this.cancelRequested = true;
        this.cancelController.abort();
        this.end();
    }
}
exports.StreamArrayParser = StreamArrayParser; //# sourceMappingURL=streamArrayParser.js.map
}}),
"[project]/node_modules/google-gax/build/src/fallbackServiceStub.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.generateServiceStub = generateServiceStub;
/* global window */ /* global AbortController */ const node_fetch_1 = __turbopack_context__.r("[project]/node_modules/google-gax/node_modules/node-fetch/lib/index.mjs [app-rsc] (ecmascript)");
const abort_controller_1 = __turbopack_context__.r("[project]/node_modules/abort-controller/dist/abort-controller.js [app-rsc] (ecmascript)");
const featureDetection_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/featureDetection.js [app-rsc] (ecmascript)");
const streamArrayParser_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamArrayParser.js [app-rsc] (ecmascript)");
const stream_1 = __turbopack_context__.r("[externals]/stream [external] (stream, cjs)");
function generateServiceStub(rpcs, protocol, servicePath, servicePort, authClient, requestEncoder, responseDecoder, numericEnums) {
    const fetch = (0, featureDetection_1.hasWindowFetch)() ? window.fetch : node_fetch_1.default;
    const serviceStub = {
        // close method should close all cancel controllers. If this feature request in the future, we can have a cancelControllerFactory that tracks created cancel controllers, and abort them all in close method.
        close: ()=>{
            return {
                cancel: ()=>{}
            };
        }
    };
    for (const [rpcName, rpc] of Object.entries(rpcs)){
        serviceStub[rpcName] = (request, options, _metadata, callback)=>{
            options !== null && options !== void 0 ? options : options = {};
            // We cannot use async-await in this function because we need to return the canceller object as soon as possible.
            // Using plain old promises instead.
            let fetchParameters;
            try {
                fetchParameters = requestEncoder(rpc, protocol, servicePath, servicePort, request, numericEnums);
            } catch (err) {
                // we could not encode parameters; pass error to the callback
                // and return a no-op canceler object.
                if (callback) {
                    callback(err);
                }
                return {
                    cancel () {}
                };
            }
            const cancelController = (0, featureDetection_1.hasAbortController)() ? new AbortController() : new abort_controller_1.AbortController();
            const cancelSignal = cancelController.signal;
            let cancelRequested = false;
            const url = fetchParameters.url;
            const headers = fetchParameters.headers;
            for (const key of Object.keys(options)){
                headers[key] = options[key][0];
            }
            const streamArrayParser = new streamArrayParser_1.StreamArrayParser(rpc);
            authClient.getRequestHeaders().then((authHeader)=>{
                const fetchRequest = {
                    headers: {
                        ...authHeader,
                        ...headers
                    },
                    body: fetchParameters.body,
                    method: fetchParameters.method,
                    signal: cancelSignal
                };
                if (fetchParameters.method === 'GET' || fetchParameters.method === 'DELETE') {
                    delete fetchRequest['body'];
                }
                return fetch(url, fetchRequest);
            }).then((response)=>{
                if (response.ok && rpc.responseStream) {
                    (0, stream_1.pipeline)(response.body, streamArrayParser, (err)=>{
                        if (err && (!cancelRequested || err instanceof Error && err.name !== 'AbortError')) {
                            if (callback) {
                                callback(err);
                            }
                            streamArrayParser.emit('error', err);
                        }
                    });
                    return;
                } else {
                    return Promise.all([
                        Promise.resolve(response.ok),
                        response.arrayBuffer()
                    ]).then(([ok, buffer])=>{
                        const response = responseDecoder(rpc, ok, buffer);
                        callback(null, response);
                    }).catch((err)=>{
                        if (!cancelRequested || err.name !== 'AbortError') {
                            if (rpc.responseStream) {
                                if (callback) {
                                    callback(err);
                                }
                                streamArrayParser.emit('error', err);
                            } else if (callback) {
                                callback(err);
                            } else {
                                throw err;
                            }
                        }
                    });
                }
            }).catch((err)=>{
                if (rpc.responseStream) {
                    if (callback) {
                        callback(err);
                    }
                    streamArrayParser.emit('error', err);
                } else if (callback) {
                    callback(err);
                } else {
                    throw err;
                }
            });
            if (rpc.responseStream) {
                return streamArrayParser;
            }
            return {
                cancel: ()=>{
                    cancelRequested = true;
                    cancelController.abort();
                }
            };
        };
    }
    return serviceStub;
} //# sourceMappingURL=fallbackServiceStub.js.map
}}),
"[project]/node_modules/google-gax/build/src/streamingCalls/streaming.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StreamProxy = exports.StreamType = void 0;
const gax_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const stream_1 = __turbopack_context__.r("[externals]/stream [external] (stream, cjs)");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const duplexify = __turbopack_context__.r("[project]/node_modules/duplexify/index.js [app-rsc] (ecmascript)");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const retryRequest = __turbopack_context__.r("[project]/node_modules/retry-request/index.js [app-rsc] (ecmascript)");
/**
 * The type of gRPC streaming.
 * @enum {number}
 */ var StreamType;
(function(StreamType) {
    /** Client sends a single request, server streams responses. */ StreamType[StreamType["SERVER_STREAMING"] = 1] = "SERVER_STREAMING";
    /** Client streams requests, server returns a single response. */ StreamType[StreamType["CLIENT_STREAMING"] = 2] = "CLIENT_STREAMING";
    /** Both client and server stream objects. */ StreamType[StreamType["BIDI_STREAMING"] = 3] = "BIDI_STREAMING";
})(StreamType || (exports.StreamType = StreamType = {}));
// In retry-request, you could pass parameters to request using the requestOpts parameter
// when we called retry-request from gax, we always passed null
// passing null here removes an unnecessary parameter from this implementation
const requestOps = null;
class StreamProxy extends duplexify {
    /**
     * StreamProxy is a proxy to gRPC-streaming method.
     *
     * @private
     * @constructor
     * @param {StreamType} type - the type of gRPC stream.
     * @param {ApiCallback} callback - the callback for further API call.
     */ constructor(type, callback, rest, gaxServerStreamingRetries){
        super(undefined, undefined, {
            objectMode: true,
            readable: type !== StreamType.CLIENT_STREAMING,
            writable: type !== StreamType.SERVER_STREAMING
        });
        this.type = type;
        this._callback = callback;
        this._isCancelCalled = false;
        this._responseHasSent = false;
        this.rest = rest;
        this.gaxServerStreamingRetries = gaxServerStreamingRetries;
    }
    shouldRetryRequest(error, retry) {
        const e = googleError_1.GoogleError.parseGRPCStatusDetails(error);
        let shouldRetry = this.defaultShouldRetry(e, retry);
        if (retry.shouldRetryFn) {
            shouldRetry = retry.shouldRetryFn(e);
        }
        return shouldRetry;
    }
    cancel() {
        if (this.stream) {
            this.stream.cancel();
        } else {
            this._isCancelCalled = true;
        }
    }
    /**
     * Helper function to handle total timeout + max retry check for server streaming retries
     * @param {number} deadline - the current retry deadline
     * @param {number} maxRetries - maximum total number of retries
     * @param {number} totalTimeoutMillis - total timeout in milliseconds used in timeout calculation
     * @param {GoogleError} originalError - underlying error received by the stream
     * @param {originalTimeout} originalTimeout - the original Timeout set in backoff settings
     * @param {retries} retries - the number of retries the call has made so far
     */ throwIfMaxRetriesOrTotalTimeoutExceeded(deadline, maxRetries, totalTimeoutMillis, originalError, originalTimeout, retries) {
        const now = new Date();
        const nowTime = now.getTime();
        if (originalTimeout && (totalTimeoutMillis === 0 || totalTimeoutMillis < 0 || deadline && nowTime >= deadline)) {
            const error = new googleError_1.GoogleError(`Total timeout of API exceeded ${originalTimeout} milliseconds ${originalError ? `retrying error ${originalError} ` : ''} before any response was received.`);
            error.code = status_1.Status.DEADLINE_EXCEEDED;
            throw error;
        }
        if (maxRetries === 0) {
            const error = originalError;
            error.note = 'Max retries is set to zero.';
            throw error;
        }
        if (retries && retries >= maxRetries) {
            const error = new googleError_1.GoogleError('Exceeded maximum number of retries ' + (originalError ? `retrying error ${originalError} ` : '') + 'before any response was received');
            error.code = status_1.Status.DEADLINE_EXCEEDED;
            throw error;
        }
    }
    /**
     * Forwards events from an API request stream to the user's stream.
     * @param {Stream} stream - The API request stream.
     */ eventForwardHelper(stream) {
        const eventsToForward = [
            'metadata',
            'response',
            'status'
        ];
        eventsToForward.forEach((event)=>{
            stream.on(event, this.emit.bind(this, event));
        });
    }
    /**
     * Helper function that emits a response on the stream after either a 'metadata'
     * or a 'status' event - this helps streams to behave more like http consumers expect
     * @param {Stream} stream - The API request stream.
     */ statusMetadataHelper(stream) {
        // gRPC is guaranteed emit the 'status' event but not 'metadata', and 'status' is the last event to emit.
        // Emit the 'response' event if stream has no 'metadata' event.
        // This avoids the stream swallowing the other events, such as 'end'.
        stream.on('status', ()=>{
            if (!this._responseHasSent) {
                stream.emit('response', {
                    code: 200,
                    details: '',
                    message: 'OK'
                });
            }
        });
        // We also want to supply the status data as 'response' event to support
        // the behavior of google-cloud-node expects.
        // see:
        // https://github.com/GoogleCloudPlatform/google-cloud-node/pull/1775#issuecomment-259141029
        // https://github.com/GoogleCloudPlatform/google-cloud-node/blob/116436fa789d8b0f7fc5100b19b424e3ec63e6bf/packages/common/src/grpc-service.js#L355
        stream.on('metadata', (metadata)=>{
            // Create a response object with succeeds.
            // TODO: unify this logic with the decoration of gRPC response when it's
            // added. see: https://github.com/googleapis/gax-nodejs/issues/65
            stream.emit('response', {
                code: 200,
                details: '',
                message: 'OK',
                metadata
            });
            this._responseHasSent = true;
        });
    }
    /**
     * Forward events from an API request stream to the user's stream.
     * @param {Stream} stream - The API request stream.
     * @param {RetryOptions} retry - Configures the exceptions upon which the
     *   function should retry, and the parameters to the exponential backoff retry
     *   algorithm.
     */ forwardEvents(stream) {
        this.eventForwardHelper(stream);
        this.statusMetadataHelper(stream);
        stream.on('error', (error)=>{
            googleError_1.GoogleError.parseGRPCStatusDetails(error);
        });
    }
    /**
     * Default mechanism for determining whether a streaming call should retry
     * If a user passes in a "shouldRetryFn", this will not be used
     * @param {GoogleError} errpr - The error we need to determine is retryable or not
     * @param {RetryOptions} retry - Configures the exceptions upon which the
     *   function should retry, and the parameters to the exponential backoff retry
     *   algorithm.
     */ defaultShouldRetry(error, retry) {
        if (retry.retryCodes.length > 0 && retry.retryCodes.indexOf(error.code) < 0 || retry.retryCodes.length === 0) {
            return false;
        }
        return true;
    }
    /**
     * Specifies the target stream.
     * @param {ApiCall} apiCall - the API function to be called.
     * @param {Object} argument - the argument to be passed to the apiCall.
     * @param {RetryOptions} retry - Configures the exceptions upon which the
     *   function should retry, and the parameters to the exponential backoff retry
     *   algorithm.
     */ setStream(apiCall, argument, retryRequestOptions = {}, retry) {
        this.apiCall = apiCall;
        this.argument = argument;
        if (this.type === StreamType.SERVER_STREAMING) {
            if (this.rest) {
                const stream = apiCall(argument, this._callback);
                this.stream = stream;
                this.setReadable(stream);
            } else if (this.gaxServerStreamingRetries) {
                const request = ()=>{
                    if (this._isCancelCalled) {
                        if (this.stream) {
                            this.stream.cancel();
                        }
                        return;
                    }
                    const stream = apiCall(argument, this._callback);
                    return stream;
                };
                const retryStream = this.newStreamingRetryRequest({
                    request,
                    retry
                });
                this.stream = retryStream;
                this.eventForwardHelper(retryStream);
                this.setReadable(retryStream);
            } else {
                const retryStream = retryRequest(null, {
                    objectMode: true,
                    request: ()=>{
                        if (this._isCancelCalled) {
                            if (this.stream) {
                                this.stream.cancel();
                            }
                            return;
                        }
                        const stream = apiCall(argument, this._callback);
                        this.stream = stream;
                        this.forwardEvents(stream);
                        return stream;
                    },
                    retries: retryRequestOptions.retries,
                    currentRetryAttempt: retryRequestOptions.currentRetryAttempt,
                    noResponseRetries: retryRequestOptions.noResponseRetries,
                    shouldRetryFn: retryRequestOptions.shouldRetryFn
                });
                this.setReadable(retryStream);
            }
            return;
        }
        const stream = apiCall(argument, this._callback);
        this.stream = stream;
        this.forwardEvents(stream);
        if (this.type === StreamType.CLIENT_STREAMING) {
            this.setWritable(stream);
        }
        if (this.type === StreamType.BIDI_STREAMING) {
            this.setReadable(stream);
            this.setWritable(stream);
        }
        if (this._isCancelCalled && this.stream) {
            this.stream.cancel();
        }
    }
    /**
     * Creates a new retry request stream -
     *inner arrow function "newMakeRequest" handles retrying and resumption
     * @param {streamingRetryRequestOptions} opts
     *   {request} - the request to be made if the stream errors
     *   {retry} - the retry options associated with the call
     * @returns {CancellableStream} - the stream that handles retry logic
     */ newStreamingRetryRequest(opts) {
        var _a, _b, _c, _d;
        // at this point, it would be unexpected if retry were undefined
        // but if it is, provide a logical default so we don't run into trouble
        const retry = (_a = opts.retry) !== null && _a !== void 0 ? _a : {
            retryCodes: [],
            backoffSettings: (0, gax_1.createDefaultBackoffSettings)()
        };
        let retries = 0;
        const retryStream = new stream_1.PassThrough({
            objectMode: true
        });
        const totalTimeout = (_b = retry.backoffSettings.totalTimeoutMillis) !== null && _b !== void 0 ? _b : undefined;
        const maxRetries = (_c = retry.backoffSettings.maxRetries) !== null && _c !== void 0 ? _c : undefined;
        let timeout = (_d = retry.backoffSettings.initialRpcTimeoutMillis) !== null && _d !== void 0 ? _d : undefined;
        let now = new Date();
        let deadline = 0;
        if (totalTimeout) {
            deadline = now.getTime() + totalTimeout;
        }
        const transientErrorHelper = (error, requestStream)=>{
            const e = googleError_1.GoogleError.parseGRPCStatusDetails(error);
            e.note = 'Exception occurred in retry method that was ' + 'not classified as transient';
            // clean up the request stream and retryStreams, silently destroy it on the request stream
            // but do raise it on destructin of the retryStream so the consumer can see it
            requestStream.destroy();
            retryStream.destroy(e);
            return retryStream;
        };
        const newMakeRequest = (newopts)=>{
            let dataEnd = false;
            let statusReceived = false;
            let enteredError = false;
            // make the request
            const requestStream = newopts.request(requestOps);
            retryStream.cancel = requestStream.cancel; // make sure the retryStream is also cancellable by the user
            const eventsToForward = [
                'metadata',
                'response',
                'status'
            ];
            eventsToForward.forEach((event)=>{
                requestStream.on(event, retryStream.emit.bind(retryStream, event));
            });
            this.statusMetadataHelper(requestStream);
            // TODO - b/353262542 address buffer stuff
            requestStream.on('data', (data)=>{
                retries = 0;
                this.emit.bind(this, 'data')(data);
            });
            /* in retry-request, which previously handled retries,
             * "end" could be emitted on a request stream before other gRPC events.
             * To ensure it doesn't reach the consumer stream prematurely, retry-request piped
             * two streams together (delayStream and retryStream)
             * to ensure that "end" only emitted after a "response" event
             *
             * We are consciously NOT using pipeline or .pipe as part of similar logic here
             * because we want more control over what happens during event handoff and we want to
             * avoid the undesired behavior that can happen with error events
             * if consumers in client libraries are also using pipes
             *
             * Since "status" is guaranteed to be the last event emitted by gRPC.
             * If we have seen an "end" event, the dataEnd boolean will be true and we can safely
             * end the stream.
             *
             * The "statusReceived" boolean covers the opposite case - that we receive the "status" event before
             * a successful stream end event - this signals the .on('end') event handler that it's okay to end the stream
             *
             *
             */ requestStream.on('status', ()=>{
                statusReceived = true;
                if (dataEnd) {
                    retryStream.end();
                }
                return retryStream;
            });
            requestStream.on('end', ()=>{
                if (!enteredError) {
                    dataEnd = true;
                    // in this case, we've already received "status"
                    // which is the last event from gRPC, so it's cool to end the stream
                    if (statusReceived) {
                        retryStream.end();
                    }
                }
                return retryStream;
            // there is no else case because if enteredError
            // is true, we will handle stream destruction as part of
            // either retrying (where we don't want to end the stream)
            // or as part of error handling, which will take care of stream destruction
            });
            requestStream.on('error', (error)=>{
                enteredError = true;
                // type check for undefined instead of for truthiness in case maxRetries or timeout is equal to zero
                if (typeof maxRetries !== undefined || typeof totalTimeout !== undefined) {
                    if (this.shouldRetryRequest(error, retry)) {
                        if (maxRetries && totalTimeout) {
                            const newError = new googleError_1.GoogleError('Cannot set both totalTimeoutMillis and maxRetries ' + 'in backoffSettings.');
                            newError.code = status_1.Status.INVALID_ARGUMENT;
                            // clean up the request stream and retryStreams, silently destroy it on the request stream
                            // but do raise it on destructin of the retryStream so the consumer can see it
                            requestStream.destroy();
                            retryStream.destroy(newError);
                            return retryStream;
                        } else {
                            // check for exceeding timeout or max retries
                            try {
                                this.throwIfMaxRetriesOrTotalTimeoutExceeded(deadline, maxRetries, timeout, error, totalTimeout, retries);
                            } catch (error) {
                                const e = googleError_1.GoogleError.parseGRPCStatusDetails(error);
                                // clean up the request stream and retryStreams, silently destroy it on the request stream
                                // but do raise it on destruction of the retryStream so the consumer can see it
                                requestStream.destroy();
                                retryStream.destroy(e);
                                return retryStream;
                            }
                            const delayMult = retry.backoffSettings.retryDelayMultiplier;
                            const maxDelay = retry.backoffSettings.maxRetryDelayMillis;
                            const timeoutMult = retry.backoffSettings.rpcTimeoutMultiplier;
                            const maxTimeout = retry.backoffSettings.maxRpcTimeoutMillis;
                            let delay = retry.backoffSettings.initialRetryDelayMillis;
                            // calculate new deadlines
                            const toSleep = Math.random() * delay;
                            const calculateTimeoutAndResumptionFunction = ()=>{
                                setTimeout(()=>{
                                    // only do timeout calculations if not using maxRetries
                                    if (timeout) {
                                        now = new Date();
                                        delay = Math.min(delay * delayMult, maxDelay);
                                        const timeoutCal = timeout && timeoutMult ? timeout * timeoutMult : 0;
                                        const rpcTimeout = maxTimeout ? maxTimeout : 0;
                                        const newDeadline = deadline ? deadline - now.getTime() : 0;
                                        timeout = Math.min(timeoutCal, rpcTimeout, newDeadline);
                                    }
                                    retries++;
                                    let retryArgument = this.argument;
                                    // if resumption logic is passed, use it to determined the
                                    // new argument for the new request made to the server
                                    // otherwise, the original argument will be passed
                                    if (retry.getResumptionRequestFn !== undefined) {
                                        retryArgument = retry.getResumptionRequestFn(retryArgument);
                                    }
                                    const newRequest = ()=>{
                                        if (this._isCancelCalled) {
                                            if (this.stream) {
                                                this.stream.cancel();
                                            }
                                            return;
                                        }
                                        const newStream = this.apiCall(retryArgument, this._callback);
                                        return newStream;
                                    };
                                    opts.request = newRequest;
                                    // make a request with the updated parameters
                                    // based on the resumption strategy
                                    return newMakeRequest(opts);
                                }, toSleep);
                            };
                            return calculateTimeoutAndResumptionFunction();
                        }
                    } else {
                        // non retryable error
                        return transientErrorHelper(error, requestStream);
                    }
                } else {
                    // neither timeout nor maxRetries are defined, surface the error to the caller
                    return transientErrorHelper(error, requestStream);
                }
            });
            // return the stream if we didn't return it as
            // part of an error state
            return retryStream;
        };
        // this is the first make request call with the options the user passed in
        return newMakeRequest(opts);
    }
}
exports.StreamProxy = StreamProxy; //# sourceMappingURL=streaming.js.map
}}),
"[project]/node_modules/google-gax/build/protos/iam_service.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
((e)=>{
    "function" == typeof define && define.amd ? ((r)=>r !== undefined && __turbopack_context__.v(r))(e(__turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)"))) : "function" == ("TURBOPACK compile-time value", "function") && "object" == ("TURBOPACK compile-time value", "object") && module && module.exports && (module.exports = e(__turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)")));
})(function(o) {
    var e, t, n, r, F, a = o.Reader, i = o.Writer, p = o.util, l = o.roots.iam_protos || (o.roots.iam_protos = {});
    function B(e, t, n) {
        o.rpc.Service.call(this, e, t, n);
    }
    function s(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function u(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function c(e) {
        if (this.permissions = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function G(e) {
        if (this.permissions = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function U(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function d(e) {
        if (this.bindings = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function g(e) {
        if (this.members = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function M(e) {
        if (this.bindingDeltas = [], this.auditConfigDeltas = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function f(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function y(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function L(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function J(e) {
        if (this.rules = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function h(e) {
        if (this.additionalBindings = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function _(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function b(e) {
        if (this.pattern = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function H(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function q(e) {
        if (this.file = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function m(e) {
        if (this.dependency = [], this.publicDependency = [], this.weakDependency = [], this.messageType = [], this.enumType = [], this.service = [], this.extension = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function O(e) {
        if (this.field = [], this.extension = [], this.nestedType = [], this.enumType = [], this.extensionRange = [], this.oneofDecl = [], this.reservedRange = [], this.reservedName = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function v(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function Y(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function z(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function P(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function W(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function w(e) {
        if (this.value = [], this.reservedRange = [], this.reservedName = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function X(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function j(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function D(e) {
        if (this.method = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function x(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function S(e) {
        if (this.uninterpretedOption = [], this[".google.api.resourceDefinition"] = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function k(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function T(e) {
        if (this.uninterpretedOption = [], this[".google.api.fieldBehavior"] = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function Q(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function E(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function K(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function A(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function N(e) {
        if (this.uninterpretedOption = [], this[".google.api.methodSignature"] = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function R(e) {
        if (this.name = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function Z(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function $(e) {
        if (this.location = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function I(e) {
        if (this.path = [], this.span = [], this.leadingDetachedComments = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function ee(e) {
        if (this.annotation = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function C(e) {
        if (this.path = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function V(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    return l.google = ((F = {}).iam = ((n = {}).v1 = ((t = {}).IAMPolicy = (((B.prototype = Object.create(o.rpc.Service.prototype)).constructor = B).create = function(e, t, n) {
        return new this(e, t, n);
    }, Object.defineProperty(B.prototype.setIamPolicy = function e(t, n) {
        return this.rpcCall(e, l.google.iam.v1.SetIamPolicyRequest, l.google.iam.v1.Policy, t, n);
    }, "name", {
        value: "SetIamPolicy"
    }), Object.defineProperty(B.prototype.getIamPolicy = function e(t, n) {
        return this.rpcCall(e, l.google.iam.v1.GetIamPolicyRequest, l.google.iam.v1.Policy, t, n);
    }, "name", {
        value: "GetIamPolicy"
    }), Object.defineProperty(B.prototype.testIamPermissions = function e(t, n) {
        return this.rpcCall(e, l.google.iam.v1.TestIamPermissionsRequest, l.google.iam.v1.TestIamPermissionsResponse, t, n);
    }, "name", {
        value: "TestIamPermissions"
    }), B), t.SetIamPolicyRequest = (s.prototype.resource = "", s.prototype.policy = null, s.create = function(e) {
        return new s(e);
    }, s.encode = function(e, t) {
        return t = t || i.create(), null != e.resource && Object.hasOwnProperty.call(e, "resource") && t.uint32(10).string(e.resource), null != e.policy && Object.hasOwnProperty.call(e, "policy") && l.google.iam.v1.Policy.encode(e.policy, t.uint32(18).fork()).ldelim(), t;
    }, s.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, s.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.SetIamPolicyRequest; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.resource = e.string();
                    break;
                case 2:
                    o.policy = l.google.iam.v1.Policy.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, s.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, s.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.resource && e.hasOwnProperty("resource") && !p.isString(e.resource)) return "resource: string expected";
        if (null != e.policy && e.hasOwnProperty("policy")) {
            e = l.google.iam.v1.Policy.verify(e.policy);
            if (e) return "policy." + e;
        }
        return null;
    }, s.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.SetIamPolicyRequest) return e;
        var t = new l.google.iam.v1.SetIamPolicyRequest;
        if (null != e.resource && (t.resource = String(e.resource)), null != e.policy) {
            if ("object" != typeof e.policy) throw TypeError(".google.iam.v1.SetIamPolicyRequest.policy: object expected");
            t.policy = l.google.iam.v1.Policy.fromObject(e.policy);
        }
        return t;
    }, s.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.resource = "", n.policy = null), null != e.resource && e.hasOwnProperty("resource") && (n.resource = e.resource), null != e.policy && e.hasOwnProperty("policy") && (n.policy = l.google.iam.v1.Policy.toObject(e.policy, t)), n;
    }, s.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, s), t.GetIamPolicyRequest = (u.prototype.resource = "", u.prototype.options = null, u.create = function(e) {
        return new u(e);
    }, u.encode = function(e, t) {
        return t = t || i.create(), null != e.resource && Object.hasOwnProperty.call(e, "resource") && t.uint32(10).string(e.resource), null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.iam.v1.GetPolicyOptions.encode(e.options, t.uint32(18).fork()).ldelim(), t;
    }, u.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, u.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.GetIamPolicyRequest; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.resource = e.string();
                    break;
                case 2:
                    o.options = l.google.iam.v1.GetPolicyOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, u.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, u.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.resource && e.hasOwnProperty("resource") && !p.isString(e.resource)) return "resource: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = l.google.iam.v1.GetPolicyOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, u.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.GetIamPolicyRequest) return e;
        var t = new l.google.iam.v1.GetIamPolicyRequest;
        if (null != e.resource && (t.resource = String(e.resource)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.iam.v1.GetIamPolicyRequest.options: object expected");
            t.options = l.google.iam.v1.GetPolicyOptions.fromObject(e.options);
        }
        return t;
    }, u.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.resource = "", n.options = null), null != e.resource && e.hasOwnProperty("resource") && (n.resource = e.resource), null != e.options && e.hasOwnProperty("options") && (n.options = l.google.iam.v1.GetPolicyOptions.toObject(e.options, t)), n;
    }, u.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, u), t.TestIamPermissionsRequest = (c.prototype.resource = "", c.prototype.permissions = p.emptyArray, c.create = function(e) {
        return new c(e);
    }, c.encode = function(e, t) {
        if (t = t || i.create(), null != e.resource && Object.hasOwnProperty.call(e, "resource") && t.uint32(10).string(e.resource), null != e.permissions && e.permissions.length) for(var n = 0; n < e.permissions.length; ++n)t.uint32(18).string(e.permissions[n]);
        return t;
    }, c.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, c.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.TestIamPermissionsRequest; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.resource = e.string();
                    break;
                case 2:
                    o.permissions && o.permissions.length || (o.permissions = []), o.permissions.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, c.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, c.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.resource && e.hasOwnProperty("resource") && !p.isString(e.resource)) return "resource: string expected";
        if (null != e.permissions && e.hasOwnProperty("permissions")) {
            if (!Array.isArray(e.permissions)) return "permissions: array expected";
            for(var t = 0; t < e.permissions.length; ++t)if (!p.isString(e.permissions[t])) return "permissions: string[] expected";
        }
        return null;
    }, c.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.TestIamPermissionsRequest) return e;
        var t = new l.google.iam.v1.TestIamPermissionsRequest;
        if (null != e.resource && (t.resource = String(e.resource)), e.permissions) {
            if (!Array.isArray(e.permissions)) throw TypeError(".google.iam.v1.TestIamPermissionsRequest.permissions: array expected");
            t.permissions = [];
            for(var n = 0; n < e.permissions.length; ++n)t.permissions[n] = String(e.permissions[n]);
        }
        return t;
    }, c.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.permissions = []), t.defaults && (n.resource = ""), null != e.resource && e.hasOwnProperty("resource") && (n.resource = e.resource), e.permissions && e.permissions.length) {
            n.permissions = [];
            for(var o = 0; o < e.permissions.length; ++o)n.permissions[o] = e.permissions[o];
        }
        return n;
    }, c.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, c), t.TestIamPermissionsResponse = (G.prototype.permissions = p.emptyArray, G.create = function(e) {
        return new G(e);
    }, G.encode = function(e, t) {
        if (t = t || i.create(), null != e.permissions && e.permissions.length) for(var n = 0; n < e.permissions.length; ++n)t.uint32(10).string(e.permissions[n]);
        return t;
    }, G.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, G.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.TestIamPermissionsResponse; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.permissions && o.permissions.length || (o.permissions = []), o.permissions.push(e.string())) : e.skipType(7 & r);
        }
        return o;
    }, G.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, G.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.permissions && e.hasOwnProperty("permissions")) {
            if (!Array.isArray(e.permissions)) return "permissions: array expected";
            for(var t = 0; t < e.permissions.length; ++t)if (!p.isString(e.permissions[t])) return "permissions: string[] expected";
        }
        return null;
    }, G.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.TestIamPermissionsResponse) return e;
        var t = new l.google.iam.v1.TestIamPermissionsResponse;
        if (e.permissions) {
            if (!Array.isArray(e.permissions)) throw TypeError(".google.iam.v1.TestIamPermissionsResponse.permissions: array expected");
            t.permissions = [];
            for(var n = 0; n < e.permissions.length; ++n)t.permissions[n] = String(e.permissions[n]);
        }
        return t;
    }, G.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.permissions = []), e.permissions && e.permissions.length) {
            n.permissions = [];
            for(var o = 0; o < e.permissions.length; ++o)n.permissions[o] = e.permissions[o];
        }
        return n;
    }, G.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, G), t.GetPolicyOptions = (U.prototype.requestedPolicyVersion = 0, U.create = function(e) {
        return new U(e);
    }, U.encode = function(e, t) {
        return t = t || i.create(), null != e.requestedPolicyVersion && Object.hasOwnProperty.call(e, "requestedPolicyVersion") && t.uint32(8).int32(e.requestedPolicyVersion), t;
    }, U.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, U.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.GetPolicyOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? o.requestedPolicyVersion = e.int32() : e.skipType(7 & r);
        }
        return o;
    }, U.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, U.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.requestedPolicyVersion && e.hasOwnProperty("requestedPolicyVersion") && !p.isInteger(e.requestedPolicyVersion) ? "requestedPolicyVersion: integer expected" : null;
    }, U.fromObject = function(e) {
        var t;
        return e instanceof l.google.iam.v1.GetPolicyOptions ? e : (t = new l.google.iam.v1.GetPolicyOptions, null != e.requestedPolicyVersion && (t.requestedPolicyVersion = 0 | e.requestedPolicyVersion), t);
    }, U.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.requestedPolicyVersion = 0), null != e.requestedPolicyVersion && e.hasOwnProperty("requestedPolicyVersion") && (n.requestedPolicyVersion = e.requestedPolicyVersion), n;
    }, U.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, U), t.Policy = (d.prototype.version = 0, d.prototype.bindings = p.emptyArray, d.prototype.etag = p.newBuffer([]), d.create = function(e) {
        return new d(e);
    }, d.encode = function(e, t) {
        if (t = t || i.create(), null != e.version && Object.hasOwnProperty.call(e, "version") && t.uint32(8).int32(e.version), null != e.etag && Object.hasOwnProperty.call(e, "etag") && t.uint32(26).bytes(e.etag), null != e.bindings && e.bindings.length) for(var n = 0; n < e.bindings.length; ++n)l.google.iam.v1.Binding.encode(e.bindings[n], t.uint32(34).fork()).ldelim();
        return t;
    }, d.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, d.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.Policy; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.version = e.int32();
                    break;
                case 4:
                    o.bindings && o.bindings.length || (o.bindings = []), o.bindings.push(l.google.iam.v1.Binding.decode(e, e.uint32()));
                    break;
                case 3:
                    o.etag = e.bytes();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, d.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, d.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.version && e.hasOwnProperty("version") && !p.isInteger(e.version)) return "version: integer expected";
        if (null != e.bindings && e.hasOwnProperty("bindings")) {
            if (!Array.isArray(e.bindings)) return "bindings: array expected";
            for(var t = 0; t < e.bindings.length; ++t){
                var n = l.google.iam.v1.Binding.verify(e.bindings[t]);
                if (n) return "bindings." + n;
            }
        }
        return null != e.etag && e.hasOwnProperty("etag") && !(e.etag && "number" == typeof e.etag.length || p.isString(e.etag)) ? "etag: buffer expected" : null;
    }, d.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.Policy) return e;
        var t = new l.google.iam.v1.Policy;
        if (null != e.version && (t.version = 0 | e.version), e.bindings) {
            if (!Array.isArray(e.bindings)) throw TypeError(".google.iam.v1.Policy.bindings: array expected");
            t.bindings = [];
            for(var n = 0; n < e.bindings.length; ++n){
                if ("object" != typeof e.bindings[n]) throw TypeError(".google.iam.v1.Policy.bindings: object expected");
                t.bindings[n] = l.google.iam.v1.Binding.fromObject(e.bindings[n]);
            }
        }
        return null != e.etag && ("string" == typeof e.etag ? p.base64.decode(e.etag, t.etag = p.newBuffer(p.base64.length(e.etag)), 0) : e.etag.length && (t.etag = e.etag)), t;
    }, d.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.bindings = []), t.defaults && (n.version = 0, t.bytes === String ? n.etag = "" : (n.etag = [], t.bytes !== Array && (n.etag = p.newBuffer(n.etag)))), null != e.version && e.hasOwnProperty("version") && (n.version = e.version), null != e.etag && e.hasOwnProperty("etag") && (n.etag = t.bytes === String ? p.base64.encode(e.etag, 0, e.etag.length) : t.bytes === Array ? Array.prototype.slice.call(e.etag) : e.etag), e.bindings && e.bindings.length) {
            n.bindings = [];
            for(var o = 0; o < e.bindings.length; ++o)n.bindings[o] = l.google.iam.v1.Binding.toObject(e.bindings[o], t);
        }
        return n;
    }, d.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, d), t.Binding = (g.prototype.role = "", g.prototype.members = p.emptyArray, g.prototype.condition = null, g.create = function(e) {
        return new g(e);
    }, g.encode = function(e, t) {
        if (t = t || i.create(), null != e.role && Object.hasOwnProperty.call(e, "role") && t.uint32(10).string(e.role), null != e.members && e.members.length) for(var n = 0; n < e.members.length; ++n)t.uint32(18).string(e.members[n]);
        return null != e.condition && Object.hasOwnProperty.call(e, "condition") && l.google.type.Expr.encode(e.condition, t.uint32(26).fork()).ldelim(), t;
    }, g.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, g.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.Binding; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.role = e.string();
                    break;
                case 2:
                    o.members && o.members.length || (o.members = []), o.members.push(e.string());
                    break;
                case 3:
                    o.condition = l.google.type.Expr.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, g.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, g.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.role && e.hasOwnProperty("role") && !p.isString(e.role)) return "role: string expected";
        if (null != e.members && e.hasOwnProperty("members")) {
            if (!Array.isArray(e.members)) return "members: array expected";
            for(var t = 0; t < e.members.length; ++t)if (!p.isString(e.members[t])) return "members: string[] expected";
        }
        if (null != e.condition && e.hasOwnProperty("condition")) {
            var n = l.google.type.Expr.verify(e.condition);
            if (n) return "condition." + n;
        }
        return null;
    }, g.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.Binding) return e;
        var t = new l.google.iam.v1.Binding;
        if (null != e.role && (t.role = String(e.role)), e.members) {
            if (!Array.isArray(e.members)) throw TypeError(".google.iam.v1.Binding.members: array expected");
            t.members = [];
            for(var n = 0; n < e.members.length; ++n)t.members[n] = String(e.members[n]);
        }
        if (null != e.condition) {
            if ("object" != typeof e.condition) throw TypeError(".google.iam.v1.Binding.condition: object expected");
            t.condition = l.google.type.Expr.fromObject(e.condition);
        }
        return t;
    }, g.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.members = []), t.defaults && (n.role = "", n.condition = null), null != e.role && e.hasOwnProperty("role") && (n.role = e.role), e.members && e.members.length) {
            n.members = [];
            for(var o = 0; o < e.members.length; ++o)n.members[o] = e.members[o];
        }
        return null != e.condition && e.hasOwnProperty("condition") && (n.condition = l.google.type.Expr.toObject(e.condition, t)), n;
    }, g.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, g), t.PolicyDelta = (M.prototype.bindingDeltas = p.emptyArray, M.prototype.auditConfigDeltas = p.emptyArray, M.create = function(e) {
        return new M(e);
    }, M.encode = function(e, t) {
        if (t = t || i.create(), null != e.bindingDeltas && e.bindingDeltas.length) for(var n = 0; n < e.bindingDeltas.length; ++n)l.google.iam.v1.BindingDelta.encode(e.bindingDeltas[n], t.uint32(10).fork()).ldelim();
        if (null != e.auditConfigDeltas && e.auditConfigDeltas.length) for(n = 0; n < e.auditConfigDeltas.length; ++n)l.google.iam.v1.AuditConfigDelta.encode(e.auditConfigDeltas[n], t.uint32(18).fork()).ldelim();
        return t;
    }, M.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, M.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.PolicyDelta; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.bindingDeltas && o.bindingDeltas.length || (o.bindingDeltas = []), o.bindingDeltas.push(l.google.iam.v1.BindingDelta.decode(e, e.uint32()));
                    break;
                case 2:
                    o.auditConfigDeltas && o.auditConfigDeltas.length || (o.auditConfigDeltas = []), o.auditConfigDeltas.push(l.google.iam.v1.AuditConfigDelta.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, M.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, M.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.bindingDeltas && e.hasOwnProperty("bindingDeltas")) {
            if (!Array.isArray(e.bindingDeltas)) return "bindingDeltas: array expected";
            for(var t = 0; t < e.bindingDeltas.length; ++t)if (n = l.google.iam.v1.BindingDelta.verify(e.bindingDeltas[t])) return "bindingDeltas." + n;
        }
        if (null != e.auditConfigDeltas && e.hasOwnProperty("auditConfigDeltas")) {
            if (!Array.isArray(e.auditConfigDeltas)) return "auditConfigDeltas: array expected";
            for(var n, t = 0; t < e.auditConfigDeltas.length; ++t)if (n = l.google.iam.v1.AuditConfigDelta.verify(e.auditConfigDeltas[t])) return "auditConfigDeltas." + n;
        }
        return null;
    }, M.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.PolicyDelta) return e;
        var t = new l.google.iam.v1.PolicyDelta;
        if (e.bindingDeltas) {
            if (!Array.isArray(e.bindingDeltas)) throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: array expected");
            t.bindingDeltas = [];
            for(var n = 0; n < e.bindingDeltas.length; ++n){
                if ("object" != typeof e.bindingDeltas[n]) throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: object expected");
                t.bindingDeltas[n] = l.google.iam.v1.BindingDelta.fromObject(e.bindingDeltas[n]);
            }
        }
        if (e.auditConfigDeltas) {
            if (!Array.isArray(e.auditConfigDeltas)) throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: array expected");
            t.auditConfigDeltas = [];
            for(n = 0; n < e.auditConfigDeltas.length; ++n){
                if ("object" != typeof e.auditConfigDeltas[n]) throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: object expected");
                t.auditConfigDeltas[n] = l.google.iam.v1.AuditConfigDelta.fromObject(e.auditConfigDeltas[n]);
            }
        }
        return t;
    }, M.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.bindingDeltas = [], n.auditConfigDeltas = []), e.bindingDeltas && e.bindingDeltas.length) {
            n.bindingDeltas = [];
            for(var o = 0; o < e.bindingDeltas.length; ++o)n.bindingDeltas[o] = l.google.iam.v1.BindingDelta.toObject(e.bindingDeltas[o], t);
        }
        if (e.auditConfigDeltas && e.auditConfigDeltas.length) {
            n.auditConfigDeltas = [];
            for(o = 0; o < e.auditConfigDeltas.length; ++o)n.auditConfigDeltas[o] = l.google.iam.v1.AuditConfigDelta.toObject(e.auditConfigDeltas[o], t);
        }
        return n;
    }, M.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, M), t.BindingDelta = (f.prototype.action = 0, f.prototype.role = "", f.prototype.member = "", f.prototype.condition = null, f.create = function(e) {
        return new f(e);
    }, f.encode = function(e, t) {
        return t = t || i.create(), null != e.action && Object.hasOwnProperty.call(e, "action") && t.uint32(8).int32(e.action), null != e.role && Object.hasOwnProperty.call(e, "role") && t.uint32(18).string(e.role), null != e.member && Object.hasOwnProperty.call(e, "member") && t.uint32(26).string(e.member), null != e.condition && Object.hasOwnProperty.call(e, "condition") && l.google.type.Expr.encode(e.condition, t.uint32(34).fork()).ldelim(), t;
    }, f.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, f.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.BindingDelta; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.action = e.int32();
                    break;
                case 2:
                    o.role = e.string();
                    break;
                case 3:
                    o.member = e.string();
                    break;
                case 4:
                    o.condition = l.google.type.Expr.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, f.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, f.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.action && e.hasOwnProperty("action")) switch(e.action){
            default:
                return "action: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.role && e.hasOwnProperty("role") && !p.isString(e.role)) return "role: string expected";
        if (null != e.member && e.hasOwnProperty("member") && !p.isString(e.member)) return "member: string expected";
        if (null != e.condition && e.hasOwnProperty("condition")) {
            e = l.google.type.Expr.verify(e.condition);
            if (e) return "condition." + e;
        }
        return null;
    }, f.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.BindingDelta) return e;
        var t = new l.google.iam.v1.BindingDelta;
        switch(e.action){
            case "ACTION_UNSPECIFIED":
            case 0:
                t.action = 0;
                break;
            case "ADD":
            case 1:
                t.action = 1;
                break;
            case "REMOVE":
            case 2:
                t.action = 2;
        }
        if (null != e.role && (t.role = String(e.role)), null != e.member && (t.member = String(e.member)), null != e.condition) {
            if ("object" != typeof e.condition) throw TypeError(".google.iam.v1.BindingDelta.condition: object expected");
            t.condition = l.google.type.Expr.fromObject(e.condition);
        }
        return t;
    }, f.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.action = t.enums === String ? "ACTION_UNSPECIFIED" : 0, n.role = "", n.member = "", n.condition = null), null != e.action && e.hasOwnProperty("action") && (n.action = t.enums === String ? l.google.iam.v1.BindingDelta.Action[e.action] : e.action), null != e.role && e.hasOwnProperty("role") && (n.role = e.role), null != e.member && e.hasOwnProperty("member") && (n.member = e.member), null != e.condition && e.hasOwnProperty("condition") && (n.condition = l.google.type.Expr.toObject(e.condition, t)), n;
    }, f.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, f.Action = (e = {}, (r = Object.create(e))[e[0] = "ACTION_UNSPECIFIED"] = 0, r[e[1] = "ADD"] = 1, r[e[2] = "REMOVE"] = 2, r), f), t.AuditConfigDelta = (y.prototype.action = 0, y.prototype.service = "", y.prototype.exemptedMember = "", y.prototype.logType = "", y.create = function(e) {
        return new y(e);
    }, y.encode = function(e, t) {
        return t = t || i.create(), null != e.action && Object.hasOwnProperty.call(e, "action") && t.uint32(8).int32(e.action), null != e.service && Object.hasOwnProperty.call(e, "service") && t.uint32(18).string(e.service), null != e.exemptedMember && Object.hasOwnProperty.call(e, "exemptedMember") && t.uint32(26).string(e.exemptedMember), null != e.logType && Object.hasOwnProperty.call(e, "logType") && t.uint32(34).string(e.logType), t;
    }, y.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, y.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.AuditConfigDelta; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.action = e.int32();
                    break;
                case 2:
                    o.service = e.string();
                    break;
                case 3:
                    o.exemptedMember = e.string();
                    break;
                case 4:
                    o.logType = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, y.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, y.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.action && e.hasOwnProperty("action")) switch(e.action){
            default:
                return "action: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        return null != e.service && e.hasOwnProperty("service") && !p.isString(e.service) ? "service: string expected" : null != e.exemptedMember && e.hasOwnProperty("exemptedMember") && !p.isString(e.exemptedMember) ? "exemptedMember: string expected" : null != e.logType && e.hasOwnProperty("logType") && !p.isString(e.logType) ? "logType: string expected" : null;
    }, y.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.AuditConfigDelta) return e;
        var t = new l.google.iam.v1.AuditConfigDelta;
        switch(e.action){
            case "ACTION_UNSPECIFIED":
            case 0:
                t.action = 0;
                break;
            case "ADD":
            case 1:
                t.action = 1;
                break;
            case "REMOVE":
            case 2:
                t.action = 2;
        }
        return null != e.service && (t.service = String(e.service)), null != e.exemptedMember && (t.exemptedMember = String(e.exemptedMember)), null != e.logType && (t.logType = String(e.logType)), t;
    }, y.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.action = t.enums === String ? "ACTION_UNSPECIFIED" : 0, n.service = "", n.exemptedMember = "", n.logType = ""), null != e.action && e.hasOwnProperty("action") && (n.action = t.enums === String ? l.google.iam.v1.AuditConfigDelta.Action[e.action] : e.action), null != e.service && e.hasOwnProperty("service") && (n.service = e.service), null != e.exemptedMember && e.hasOwnProperty("exemptedMember") && (n.exemptedMember = e.exemptedMember), null != e.logType && e.hasOwnProperty("logType") && (n.logType = e.logType), n;
    }, y.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, y.Action = (e = {}, (r = Object.create(e))[e[0] = "ACTION_UNSPECIFIED"] = 0, r[e[1] = "ADD"] = 1, r[e[2] = "REMOVE"] = 2, r), y), t.logging = ((e = {}).AuditData = (L.prototype.policyDelta = null, L.create = function(e) {
        return new L(e);
    }, L.encode = function(e, t) {
        return t = t || i.create(), null != e.policyDelta && Object.hasOwnProperty.call(e, "policyDelta") && l.google.iam.v1.PolicyDelta.encode(e.policyDelta, t.uint32(18).fork()).ldelim(), t;
    }, L.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, L.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.iam.v1.logging.AuditData; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 2 ? o.policyDelta = l.google.iam.v1.PolicyDelta.decode(e, e.uint32()) : e.skipType(7 & r);
        }
        return o;
    }, L.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, L.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.policyDelta && e.hasOwnProperty("policyDelta")) {
            e = l.google.iam.v1.PolicyDelta.verify(e.policyDelta);
            if (e) return "policyDelta." + e;
        }
        return null;
    }, L.fromObject = function(e) {
        if (e instanceof l.google.iam.v1.logging.AuditData) return e;
        var t = new l.google.iam.v1.logging.AuditData;
        if (null != e.policyDelta) {
            if ("object" != typeof e.policyDelta) throw TypeError(".google.iam.v1.logging.AuditData.policyDelta: object expected");
            t.policyDelta = l.google.iam.v1.PolicyDelta.fromObject(e.policyDelta);
        }
        return t;
    }, L.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.policyDelta = null), null != e.policyDelta && e.hasOwnProperty("policyDelta") && (n.policyDelta = l.google.iam.v1.PolicyDelta.toObject(e.policyDelta, t)), n;
    }, L.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, L), e), t), n), F.api = ((r = {}).Http = (J.prototype.rules = p.emptyArray, J.prototype.fullyDecodeReservedExpansion = !1, J.create = function(e) {
        return new J(e);
    }, J.encode = function(e, t) {
        if (t = t || i.create(), null != e.rules && e.rules.length) for(var n = 0; n < e.rules.length; ++n)l.google.api.HttpRule.encode(e.rules[n], t.uint32(10).fork()).ldelim();
        return null != e.fullyDecodeReservedExpansion && Object.hasOwnProperty.call(e, "fullyDecodeReservedExpansion") && t.uint32(16).bool(e.fullyDecodeReservedExpansion), t;
    }, J.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, J.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.api.Http; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.rules && o.rules.length || (o.rules = []), o.rules.push(l.google.api.HttpRule.decode(e, e.uint32()));
                    break;
                case 2:
                    o.fullyDecodeReservedExpansion = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, J.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, J.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.rules && e.hasOwnProperty("rules")) {
            if (!Array.isArray(e.rules)) return "rules: array expected";
            for(var t = 0; t < e.rules.length; ++t){
                var n = l.google.api.HttpRule.verify(e.rules[t]);
                if (n) return "rules." + n;
            }
        }
        return null != e.fullyDecodeReservedExpansion && e.hasOwnProperty("fullyDecodeReservedExpansion") && "boolean" != typeof e.fullyDecodeReservedExpansion ? "fullyDecodeReservedExpansion: boolean expected" : null;
    }, J.fromObject = function(e) {
        if (e instanceof l.google.api.Http) return e;
        var t = new l.google.api.Http;
        if (e.rules) {
            if (!Array.isArray(e.rules)) throw TypeError(".google.api.Http.rules: array expected");
            t.rules = [];
            for(var n = 0; n < e.rules.length; ++n){
                if ("object" != typeof e.rules[n]) throw TypeError(".google.api.Http.rules: object expected");
                t.rules[n] = l.google.api.HttpRule.fromObject(e.rules[n]);
            }
        }
        return null != e.fullyDecodeReservedExpansion && (t.fullyDecodeReservedExpansion = Boolean(e.fullyDecodeReservedExpansion)), t;
    }, J.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.rules = []), t.defaults && (n.fullyDecodeReservedExpansion = !1), e.rules && e.rules.length) {
            n.rules = [];
            for(var o = 0; o < e.rules.length; ++o)n.rules[o] = l.google.api.HttpRule.toObject(e.rules[o], t);
        }
        return null != e.fullyDecodeReservedExpansion && e.hasOwnProperty("fullyDecodeReservedExpansion") && (n.fullyDecodeReservedExpansion = e.fullyDecodeReservedExpansion), n;
    }, J.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, J), r.HttpRule = (h.prototype.selector = "", h.prototype.get = "", h.prototype.put = "", h.prototype.post = "", h.prototype.delete = "", h.prototype.patch = "", h.prototype.custom = null, h.prototype.body = "", h.prototype.responseBody = "", h.prototype.additionalBindings = p.emptyArray, Object.defineProperty(h.prototype, "pattern", {
        get: p.oneOfGetter(e = [
            "get",
            "put",
            "post",
            "delete",
            "patch",
            "custom"
        ]),
        set: p.oneOfSetter(e)
    }), h.create = function(e) {
        return new h(e);
    }, h.encode = function(e, t) {
        if (t = t || i.create(), null != e.selector && Object.hasOwnProperty.call(e, "selector") && t.uint32(10).string(e.selector), null != e.get && Object.hasOwnProperty.call(e, "get") && t.uint32(18).string(e.get), null != e.put && Object.hasOwnProperty.call(e, "put") && t.uint32(26).string(e.put), null != e.post && Object.hasOwnProperty.call(e, "post") && t.uint32(34).string(e.post), null != e.delete && Object.hasOwnProperty.call(e, "delete") && t.uint32(42).string(e.delete), null != e.patch && Object.hasOwnProperty.call(e, "patch") && t.uint32(50).string(e.patch), null != e.body && Object.hasOwnProperty.call(e, "body") && t.uint32(58).string(e.body), null != e.custom && Object.hasOwnProperty.call(e, "custom") && l.google.api.CustomHttpPattern.encode(e.custom, t.uint32(66).fork()).ldelim(), null != e.additionalBindings && e.additionalBindings.length) for(var n = 0; n < e.additionalBindings.length; ++n)l.google.api.HttpRule.encode(e.additionalBindings[n], t.uint32(90).fork()).ldelim();
        return null != e.responseBody && Object.hasOwnProperty.call(e, "responseBody") && t.uint32(98).string(e.responseBody), t;
    }, h.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, h.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.api.HttpRule; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.selector = e.string();
                    break;
                case 2:
                    o.get = e.string();
                    break;
                case 3:
                    o.put = e.string();
                    break;
                case 4:
                    o.post = e.string();
                    break;
                case 5:
                    o.delete = e.string();
                    break;
                case 6:
                    o.patch = e.string();
                    break;
                case 8:
                    o.custom = l.google.api.CustomHttpPattern.decode(e, e.uint32());
                    break;
                case 7:
                    o.body = e.string();
                    break;
                case 12:
                    o.responseBody = e.string();
                    break;
                case 11:
                    o.additionalBindings && o.additionalBindings.length || (o.additionalBindings = []), o.additionalBindings.push(l.google.api.HttpRule.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, h.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, h.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        var t = {};
        if (null != e.selector && e.hasOwnProperty("selector") && !p.isString(e.selector)) return "selector: string expected";
        if (null != e.get && e.hasOwnProperty("get") && (t.pattern = 1, !p.isString(e.get))) return "get: string expected";
        if (null != e.put && e.hasOwnProperty("put")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !p.isString(e.put)) return "put: string expected";
        }
        if (null != e.post && e.hasOwnProperty("post")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !p.isString(e.post)) return "post: string expected";
        }
        if (null != e.delete && e.hasOwnProperty("delete")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !p.isString(e.delete)) return "delete: string expected";
        }
        if (null != e.patch && e.hasOwnProperty("patch")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !p.isString(e.patch)) return "patch: string expected";
        }
        if (null != e.custom && e.hasOwnProperty("custom")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, n = l.google.api.CustomHttpPattern.verify(e.custom)) return "custom." + n;
        }
        if (null != e.body && e.hasOwnProperty("body") && !p.isString(e.body)) return "body: string expected";
        if (null != e.responseBody && e.hasOwnProperty("responseBody") && !p.isString(e.responseBody)) return "responseBody: string expected";
        if (null != e.additionalBindings && e.hasOwnProperty("additionalBindings")) {
            if (!Array.isArray(e.additionalBindings)) return "additionalBindings: array expected";
            for(var n, o = 0; o < e.additionalBindings.length; ++o)if (n = l.google.api.HttpRule.verify(e.additionalBindings[o])) return "additionalBindings." + n;
        }
        return null;
    }, h.fromObject = function(e) {
        if (e instanceof l.google.api.HttpRule) return e;
        var t = new l.google.api.HttpRule;
        if (null != e.selector && (t.selector = String(e.selector)), null != e.get && (t.get = String(e.get)), null != e.put && (t.put = String(e.put)), null != e.post && (t.post = String(e.post)), null != e.delete && (t.delete = String(e.delete)), null != e.patch && (t.patch = String(e.patch)), null != e.custom) {
            if ("object" != typeof e.custom) throw TypeError(".google.api.HttpRule.custom: object expected");
            t.custom = l.google.api.CustomHttpPattern.fromObject(e.custom);
        }
        if (null != e.body && (t.body = String(e.body)), null != e.responseBody && (t.responseBody = String(e.responseBody)), e.additionalBindings) {
            if (!Array.isArray(e.additionalBindings)) throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
            t.additionalBindings = [];
            for(var n = 0; n < e.additionalBindings.length; ++n){
                if ("object" != typeof e.additionalBindings[n]) throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                t.additionalBindings[n] = l.google.api.HttpRule.fromObject(e.additionalBindings[n]);
            }
        }
        return t;
    }, h.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.additionalBindings = []), t.defaults && (n.selector = "", n.body = "", n.responseBody = ""), null != e.selector && e.hasOwnProperty("selector") && (n.selector = e.selector), null != e.get && e.hasOwnProperty("get") && (n.get = e.get, t.oneofs) && (n.pattern = "get"), null != e.put && e.hasOwnProperty("put") && (n.put = e.put, t.oneofs) && (n.pattern = "put"), null != e.post && e.hasOwnProperty("post") && (n.post = e.post, t.oneofs) && (n.pattern = "post"), null != e.delete && e.hasOwnProperty("delete") && (n.delete = e.delete, t.oneofs) && (n.pattern = "delete"), null != e.patch && e.hasOwnProperty("patch") && (n.patch = e.patch, t.oneofs) && (n.pattern = "patch"), null != e.body && e.hasOwnProperty("body") && (n.body = e.body), null != e.custom && e.hasOwnProperty("custom") && (n.custom = l.google.api.CustomHttpPattern.toObject(e.custom, t), t.oneofs) && (n.pattern = "custom"), e.additionalBindings && e.additionalBindings.length) {
            n.additionalBindings = [];
            for(var o = 0; o < e.additionalBindings.length; ++o)n.additionalBindings[o] = l.google.api.HttpRule.toObject(e.additionalBindings[o], t);
        }
        return null != e.responseBody && e.hasOwnProperty("responseBody") && (n.responseBody = e.responseBody), n;
    }, h.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, h), r.CustomHttpPattern = (_.prototype.kind = "", _.prototype.path = "", _.create = function(e) {
        return new _(e);
    }, _.encode = function(e, t) {
        return t = t || i.create(), null != e.kind && Object.hasOwnProperty.call(e, "kind") && t.uint32(10).string(e.kind), null != e.path && Object.hasOwnProperty.call(e, "path") && t.uint32(18).string(e.path), t;
    }, _.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, _.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.api.CustomHttpPattern; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.kind = e.string();
                    break;
                case 2:
                    o.path = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, _.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, _.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.kind && e.hasOwnProperty("kind") && !p.isString(e.kind) ? "kind: string expected" : null != e.path && e.hasOwnProperty("path") && !p.isString(e.path) ? "path: string expected" : null;
    }, _.fromObject = function(e) {
        var t;
        return e instanceof l.google.api.CustomHttpPattern ? e : (t = new l.google.api.CustomHttpPattern, null != e.kind && (t.kind = String(e.kind)), null != e.path && (t.path = String(e.path)), t);
    }, _.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.kind = "", n.path = ""), null != e.kind && e.hasOwnProperty("kind") && (n.kind = e.kind), null != e.path && e.hasOwnProperty("path") && (n.path = e.path), n;
    }, _.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, _), r.FieldBehavior = (e = {}, (t = Object.create(e))[e[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0, t[e[1] = "OPTIONAL"] = 1, t[e[2] = "REQUIRED"] = 2, t[e[3] = "OUTPUT_ONLY"] = 3, t[e[4] = "INPUT_ONLY"] = 4, t[e[5] = "IMMUTABLE"] = 5, t), r.ResourceDescriptor = (b.prototype.type = "", b.prototype.pattern = p.emptyArray, b.prototype.nameField = "", b.prototype.history = 0, b.prototype.plural = "", b.prototype.singular = "", b.create = function(e) {
        return new b(e);
    }, b.encode = function(e, t) {
        if (t = t || i.create(), null != e.type && Object.hasOwnProperty.call(e, "type") && t.uint32(10).string(e.type), null != e.pattern && e.pattern.length) for(var n = 0; n < e.pattern.length; ++n)t.uint32(18).string(e.pattern[n]);
        return null != e.nameField && Object.hasOwnProperty.call(e, "nameField") && t.uint32(26).string(e.nameField), null != e.history && Object.hasOwnProperty.call(e, "history") && t.uint32(32).int32(e.history), null != e.plural && Object.hasOwnProperty.call(e, "plural") && t.uint32(42).string(e.plural), null != e.singular && Object.hasOwnProperty.call(e, "singular") && t.uint32(50).string(e.singular), t;
    }, b.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, b.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.api.ResourceDescriptor; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.type = e.string();
                    break;
                case 2:
                    o.pattern && o.pattern.length || (o.pattern = []), o.pattern.push(e.string());
                    break;
                case 3:
                    o.nameField = e.string();
                    break;
                case 4:
                    o.history = e.int32();
                    break;
                case 5:
                    o.plural = e.string();
                    break;
                case 6:
                    o.singular = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, b.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, b.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.type && e.hasOwnProperty("type") && !p.isString(e.type)) return "type: string expected";
        if (null != e.pattern && e.hasOwnProperty("pattern")) {
            if (!Array.isArray(e.pattern)) return "pattern: array expected";
            for(var t = 0; t < e.pattern.length; ++t)if (!p.isString(e.pattern[t])) return "pattern: string[] expected";
        }
        if (null != e.nameField && e.hasOwnProperty("nameField") && !p.isString(e.nameField)) return "nameField: string expected";
        if (null != e.history && e.hasOwnProperty("history")) switch(e.history){
            default:
                return "history: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        return null != e.plural && e.hasOwnProperty("plural") && !p.isString(e.plural) ? "plural: string expected" : null != e.singular && e.hasOwnProperty("singular") && !p.isString(e.singular) ? "singular: string expected" : null;
    }, b.fromObject = function(e) {
        if (e instanceof l.google.api.ResourceDescriptor) return e;
        var t = new l.google.api.ResourceDescriptor;
        if (null != e.type && (t.type = String(e.type)), e.pattern) {
            if (!Array.isArray(e.pattern)) throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
            t.pattern = [];
            for(var n = 0; n < e.pattern.length; ++n)t.pattern[n] = String(e.pattern[n]);
        }
        switch(null != e.nameField && (t.nameField = String(e.nameField)), e.history){
            case "HISTORY_UNSPECIFIED":
            case 0:
                t.history = 0;
                break;
            case "ORIGINALLY_SINGLE_PATTERN":
            case 1:
                t.history = 1;
                break;
            case "FUTURE_MULTI_PATTERN":
            case 2:
                t.history = 2;
        }
        return null != e.plural && (t.plural = String(e.plural)), null != e.singular && (t.singular = String(e.singular)), t;
    }, b.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.pattern = []), t.defaults && (n.type = "", n.nameField = "", n.history = t.enums === String ? "HISTORY_UNSPECIFIED" : 0, n.plural = "", n.singular = ""), null != e.type && e.hasOwnProperty("type") && (n.type = e.type), e.pattern && e.pattern.length) {
            n.pattern = [];
            for(var o = 0; o < e.pattern.length; ++o)n.pattern[o] = e.pattern[o];
        }
        return null != e.nameField && e.hasOwnProperty("nameField") && (n.nameField = e.nameField), null != e.history && e.hasOwnProperty("history") && (n.history = t.enums === String ? l.google.api.ResourceDescriptor.History[e.history] : e.history), null != e.plural && e.hasOwnProperty("plural") && (n.plural = e.plural), null != e.singular && e.hasOwnProperty("singular") && (n.singular = e.singular), n;
    }, b.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, b.History = (e = {}, (t = Object.create(e))[e[0] = "HISTORY_UNSPECIFIED"] = 0, t[e[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1, t[e[2] = "FUTURE_MULTI_PATTERN"] = 2, t), b), r.ResourceReference = (H.prototype.type = "", H.prototype.childType = "", H.create = function(e) {
        return new H(e);
    }, H.encode = function(e, t) {
        return t = t || i.create(), null != e.type && Object.hasOwnProperty.call(e, "type") && t.uint32(10).string(e.type), null != e.childType && Object.hasOwnProperty.call(e, "childType") && t.uint32(18).string(e.childType), t;
    }, H.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, H.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.api.ResourceReference; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.type = e.string();
                    break;
                case 2:
                    o.childType = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, H.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, H.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.type && e.hasOwnProperty("type") && !p.isString(e.type) ? "type: string expected" : null != e.childType && e.hasOwnProperty("childType") && !p.isString(e.childType) ? "childType: string expected" : null;
    }, H.fromObject = function(e) {
        var t;
        return e instanceof l.google.api.ResourceReference ? e : (t = new l.google.api.ResourceReference, null != e.type && (t.type = String(e.type)), null != e.childType && (t.childType = String(e.childType)), t);
    }, H.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.type = "", n.childType = ""), null != e.type && e.hasOwnProperty("type") && (n.type = e.type), null != e.childType && e.hasOwnProperty("childType") && (n.childType = e.childType), n;
    }, H.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, H), r), F.protobuf = ((n = {}).FileDescriptorSet = (q.prototype.file = p.emptyArray, q.create = function(e) {
        return new q(e);
    }, q.encode = function(e, t) {
        if (t = t || i.create(), null != e.file && e.file.length) for(var n = 0; n < e.file.length; ++n)l.google.protobuf.FileDescriptorProto.encode(e.file[n], t.uint32(10).fork()).ldelim();
        return t;
    }, q.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, q.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.FileDescriptorSet; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.file && o.file.length || (o.file = []), o.file.push(l.google.protobuf.FileDescriptorProto.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, q.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, q.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.file && e.hasOwnProperty("file")) {
            if (!Array.isArray(e.file)) return "file: array expected";
            for(var t = 0; t < e.file.length; ++t){
                var n = l.google.protobuf.FileDescriptorProto.verify(e.file[t]);
                if (n) return "file." + n;
            }
        }
        return null;
    }, q.fromObject = function(e) {
        if (e instanceof l.google.protobuf.FileDescriptorSet) return e;
        var t = new l.google.protobuf.FileDescriptorSet;
        if (e.file) {
            if (!Array.isArray(e.file)) throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
            t.file = [];
            for(var n = 0; n < e.file.length; ++n){
                if ("object" != typeof e.file[n]) throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                t.file[n] = l.google.protobuf.FileDescriptorProto.fromObject(e.file[n]);
            }
        }
        return t;
    }, q.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.file = []), e.file && e.file.length) {
            n.file = [];
            for(var o = 0; o < e.file.length; ++o)n.file[o] = l.google.protobuf.FileDescriptorProto.toObject(e.file[o], t);
        }
        return n;
    }, q.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, q), n.FileDescriptorProto = (m.prototype.name = "", m.prototype.package = "", m.prototype.dependency = p.emptyArray, m.prototype.publicDependency = p.emptyArray, m.prototype.weakDependency = p.emptyArray, m.prototype.messageType = p.emptyArray, m.prototype.enumType = p.emptyArray, m.prototype.service = p.emptyArray, m.prototype.extension = p.emptyArray, m.prototype.options = null, m.prototype.sourceCodeInfo = null, m.prototype.syntax = "", m.create = function(e) {
        return new m(e);
    }, m.encode = function(e, t) {
        if (t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.package && Object.hasOwnProperty.call(e, "package") && t.uint32(18).string(e.package), null != e.dependency && e.dependency.length) for(var n = 0; n < e.dependency.length; ++n)t.uint32(26).string(e.dependency[n]);
        if (null != e.messageType && e.messageType.length) for(n = 0; n < e.messageType.length; ++n)l.google.protobuf.DescriptorProto.encode(e.messageType[n], t.uint32(34).fork()).ldelim();
        if (null != e.enumType && e.enumType.length) for(n = 0; n < e.enumType.length; ++n)l.google.protobuf.EnumDescriptorProto.encode(e.enumType[n], t.uint32(42).fork()).ldelim();
        if (null != e.service && e.service.length) for(n = 0; n < e.service.length; ++n)l.google.protobuf.ServiceDescriptorProto.encode(e.service[n], t.uint32(50).fork()).ldelim();
        if (null != e.extension && e.extension.length) for(n = 0; n < e.extension.length; ++n)l.google.protobuf.FieldDescriptorProto.encode(e.extension[n], t.uint32(58).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.FileOptions.encode(e.options, t.uint32(66).fork()).ldelim(), null != e.sourceCodeInfo && Object.hasOwnProperty.call(e, "sourceCodeInfo") && l.google.protobuf.SourceCodeInfo.encode(e.sourceCodeInfo, t.uint32(74).fork()).ldelim(), null != e.publicDependency && e.publicDependency.length) for(n = 0; n < e.publicDependency.length; ++n)t.uint32(80).int32(e.publicDependency[n]);
        if (null != e.weakDependency && e.weakDependency.length) for(n = 0; n < e.weakDependency.length; ++n)t.uint32(88).int32(e.weakDependency[n]);
        return null != e.syntax && Object.hasOwnProperty.call(e, "syntax") && t.uint32(98).string(e.syntax), t;
    }, m.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, m.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.FileDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.package = e.string();
                    break;
                case 3:
                    o.dependency && o.dependency.length || (o.dependency = []), o.dependency.push(e.string());
                    break;
                case 10:
                    if (o.publicDependency && o.publicDependency.length || (o.publicDependency = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.publicDependency.push(e.int32());
                    else o.publicDependency.push(e.int32());
                    break;
                case 11:
                    if (o.weakDependency && o.weakDependency.length || (o.weakDependency = []), 2 == (7 & r)) for(i = e.uint32() + e.pos; e.pos < i;)o.weakDependency.push(e.int32());
                    else o.weakDependency.push(e.int32());
                    break;
                case 4:
                    o.messageType && o.messageType.length || (o.messageType = []), o.messageType.push(l.google.protobuf.DescriptorProto.decode(e, e.uint32()));
                    break;
                case 5:
                    o.enumType && o.enumType.length || (o.enumType = []), o.enumType.push(l.google.protobuf.EnumDescriptorProto.decode(e, e.uint32()));
                    break;
                case 6:
                    o.service && o.service.length || (o.service = []), o.service.push(l.google.protobuf.ServiceDescriptorProto.decode(e, e.uint32()));
                    break;
                case 7:
                    o.extension && o.extension.length || (o.extension = []), o.extension.push(l.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 8:
                    o.options = l.google.protobuf.FileOptions.decode(e, e.uint32());
                    break;
                case 9:
                    o.sourceCodeInfo = l.google.protobuf.SourceCodeInfo.decode(e, e.uint32());
                    break;
                case 12:
                    o.syntax = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, m.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, m.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.package && e.hasOwnProperty("package") && !p.isString(e.package)) return "package: string expected";
        if (null != e.dependency && e.hasOwnProperty("dependency")) {
            if (!Array.isArray(e.dependency)) return "dependency: array expected";
            for(var t = 0; t < e.dependency.length; ++t)if (!p.isString(e.dependency[t])) return "dependency: string[] expected";
        }
        if (null != e.publicDependency && e.hasOwnProperty("publicDependency")) {
            if (!Array.isArray(e.publicDependency)) return "publicDependency: array expected";
            for(t = 0; t < e.publicDependency.length; ++t)if (!p.isInteger(e.publicDependency[t])) return "publicDependency: integer[] expected";
        }
        if (null != e.weakDependency && e.hasOwnProperty("weakDependency")) {
            if (!Array.isArray(e.weakDependency)) return "weakDependency: array expected";
            for(t = 0; t < e.weakDependency.length; ++t)if (!p.isInteger(e.weakDependency[t])) return "weakDependency: integer[] expected";
        }
        if (null != e.messageType && e.hasOwnProperty("messageType")) {
            if (!Array.isArray(e.messageType)) return "messageType: array expected";
            for(t = 0; t < e.messageType.length; ++t)if (n = l.google.protobuf.DescriptorProto.verify(e.messageType[t])) return "messageType." + n;
        }
        if (null != e.enumType && e.hasOwnProperty("enumType")) {
            if (!Array.isArray(e.enumType)) return "enumType: array expected";
            for(t = 0; t < e.enumType.length; ++t)if (n = l.google.protobuf.EnumDescriptorProto.verify(e.enumType[t])) return "enumType." + n;
        }
        if (null != e.service && e.hasOwnProperty("service")) {
            if (!Array.isArray(e.service)) return "service: array expected";
            for(t = 0; t < e.service.length; ++t)if (n = l.google.protobuf.ServiceDescriptorProto.verify(e.service[t])) return "service." + n;
        }
        if (null != e.extension && e.hasOwnProperty("extension")) {
            if (!Array.isArray(e.extension)) return "extension: array expected";
            for(t = 0; t < e.extension.length; ++t)if (n = l.google.protobuf.FieldDescriptorProto.verify(e.extension[t])) return "extension." + n;
        }
        var n;
        if (null != e.options && e.hasOwnProperty("options") && (n = l.google.protobuf.FileOptions.verify(e.options))) return "options." + n;
        if (null != e.sourceCodeInfo && e.hasOwnProperty("sourceCodeInfo") && (n = l.google.protobuf.SourceCodeInfo.verify(e.sourceCodeInfo))) return "sourceCodeInfo." + n;
        return null != e.syntax && e.hasOwnProperty("syntax") && !p.isString(e.syntax) ? "syntax: string expected" : null;
    }, m.fromObject = function(e) {
        if (e instanceof l.google.protobuf.FileDescriptorProto) return e;
        var t = new l.google.protobuf.FileDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.package && (t.package = String(e.package)), e.dependency) {
            if (!Array.isArray(e.dependency)) throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
            t.dependency = [];
            for(var n = 0; n < e.dependency.length; ++n)t.dependency[n] = String(e.dependency[n]);
        }
        if (e.publicDependency) {
            if (!Array.isArray(e.publicDependency)) throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
            t.publicDependency = [];
            for(n = 0; n < e.publicDependency.length; ++n)t.publicDependency[n] = 0 | e.publicDependency[n];
        }
        if (e.weakDependency) {
            if (!Array.isArray(e.weakDependency)) throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
            t.weakDependency = [];
            for(n = 0; n < e.weakDependency.length; ++n)t.weakDependency[n] = 0 | e.weakDependency[n];
        }
        if (e.messageType) {
            if (!Array.isArray(e.messageType)) throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
            t.messageType = [];
            for(n = 0; n < e.messageType.length; ++n){
                if ("object" != typeof e.messageType[n]) throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                t.messageType[n] = l.google.protobuf.DescriptorProto.fromObject(e.messageType[n]);
            }
        }
        if (e.enumType) {
            if (!Array.isArray(e.enumType)) throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
            t.enumType = [];
            for(n = 0; n < e.enumType.length; ++n){
                if ("object" != typeof e.enumType[n]) throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                t.enumType[n] = l.google.protobuf.EnumDescriptorProto.fromObject(e.enumType[n]);
            }
        }
        if (e.service) {
            if (!Array.isArray(e.service)) throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
            t.service = [];
            for(n = 0; n < e.service.length; ++n){
                if ("object" != typeof e.service[n]) throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                t.service[n] = l.google.protobuf.ServiceDescriptorProto.fromObject(e.service[n]);
            }
        }
        if (e.extension) {
            if (!Array.isArray(e.extension)) throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
            t.extension = [];
            for(n = 0; n < e.extension.length; ++n){
                if ("object" != typeof e.extension[n]) throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                t.extension[n] = l.google.protobuf.FieldDescriptorProto.fromObject(e.extension[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
            t.options = l.google.protobuf.FileOptions.fromObject(e.options);
        }
        if (null != e.sourceCodeInfo) {
            if ("object" != typeof e.sourceCodeInfo) throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
            t.sourceCodeInfo = l.google.protobuf.SourceCodeInfo.fromObject(e.sourceCodeInfo);
        }
        return null != e.syntax && (t.syntax = String(e.syntax)), t;
    }, m.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.dependency = [], n.messageType = [], n.enumType = [], n.service = [], n.extension = [], n.publicDependency = [], n.weakDependency = []), t.defaults && (n.name = "", n.package = "", n.options = null, n.sourceCodeInfo = null, n.syntax = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.package && e.hasOwnProperty("package") && (n.package = e.package), e.dependency && e.dependency.length) {
            n.dependency = [];
            for(var o = 0; o < e.dependency.length; ++o)n.dependency[o] = e.dependency[o];
        }
        if (e.messageType && e.messageType.length) {
            n.messageType = [];
            for(o = 0; o < e.messageType.length; ++o)n.messageType[o] = l.google.protobuf.DescriptorProto.toObject(e.messageType[o], t);
        }
        if (e.enumType && e.enumType.length) {
            n.enumType = [];
            for(o = 0; o < e.enumType.length; ++o)n.enumType[o] = l.google.protobuf.EnumDescriptorProto.toObject(e.enumType[o], t);
        }
        if (e.service && e.service.length) {
            n.service = [];
            for(o = 0; o < e.service.length; ++o)n.service[o] = l.google.protobuf.ServiceDescriptorProto.toObject(e.service[o], t);
        }
        if (e.extension && e.extension.length) {
            n.extension = [];
            for(o = 0; o < e.extension.length; ++o)n.extension[o] = l.google.protobuf.FieldDescriptorProto.toObject(e.extension[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.FileOptions.toObject(e.options, t)), null != e.sourceCodeInfo && e.hasOwnProperty("sourceCodeInfo") && (n.sourceCodeInfo = l.google.protobuf.SourceCodeInfo.toObject(e.sourceCodeInfo, t)), e.publicDependency && e.publicDependency.length) {
            n.publicDependency = [];
            for(o = 0; o < e.publicDependency.length; ++o)n.publicDependency[o] = e.publicDependency[o];
        }
        if (e.weakDependency && e.weakDependency.length) {
            n.weakDependency = [];
            for(o = 0; o < e.weakDependency.length; ++o)n.weakDependency[o] = e.weakDependency[o];
        }
        return null != e.syntax && e.hasOwnProperty("syntax") && (n.syntax = e.syntax), n;
    }, m.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, m), n.DescriptorProto = (O.prototype.name = "", O.prototype.field = p.emptyArray, O.prototype.extension = p.emptyArray, O.prototype.nestedType = p.emptyArray, O.prototype.enumType = p.emptyArray, O.prototype.extensionRange = p.emptyArray, O.prototype.oneofDecl = p.emptyArray, O.prototype.options = null, O.prototype.reservedRange = p.emptyArray, O.prototype.reservedName = p.emptyArray, O.create = function(e) {
        return new O(e);
    }, O.encode = function(e, t) {
        if (t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.field && e.field.length) for(var n = 0; n < e.field.length; ++n)l.google.protobuf.FieldDescriptorProto.encode(e.field[n], t.uint32(18).fork()).ldelim();
        if (null != e.nestedType && e.nestedType.length) for(n = 0; n < e.nestedType.length; ++n)l.google.protobuf.DescriptorProto.encode(e.nestedType[n], t.uint32(26).fork()).ldelim();
        if (null != e.enumType && e.enumType.length) for(n = 0; n < e.enumType.length; ++n)l.google.protobuf.EnumDescriptorProto.encode(e.enumType[n], t.uint32(34).fork()).ldelim();
        if (null != e.extensionRange && e.extensionRange.length) for(n = 0; n < e.extensionRange.length; ++n)l.google.protobuf.DescriptorProto.ExtensionRange.encode(e.extensionRange[n], t.uint32(42).fork()).ldelim();
        if (null != e.extension && e.extension.length) for(n = 0; n < e.extension.length; ++n)l.google.protobuf.FieldDescriptorProto.encode(e.extension[n], t.uint32(50).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.MessageOptions.encode(e.options, t.uint32(58).fork()).ldelim(), null != e.oneofDecl && e.oneofDecl.length) for(n = 0; n < e.oneofDecl.length; ++n)l.google.protobuf.OneofDescriptorProto.encode(e.oneofDecl[n], t.uint32(66).fork()).ldelim();
        if (null != e.reservedRange && e.reservedRange.length) for(n = 0; n < e.reservedRange.length; ++n)l.google.protobuf.DescriptorProto.ReservedRange.encode(e.reservedRange[n], t.uint32(74).fork()).ldelim();
        if (null != e.reservedName && e.reservedName.length) for(n = 0; n < e.reservedName.length; ++n)t.uint32(82).string(e.reservedName[n]);
        return t;
    }, O.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, O.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.DescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.field && o.field.length || (o.field = []), o.field.push(l.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 6:
                    o.extension && o.extension.length || (o.extension = []), o.extension.push(l.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.nestedType && o.nestedType.length || (o.nestedType = []), o.nestedType.push(l.google.protobuf.DescriptorProto.decode(e, e.uint32()));
                    break;
                case 4:
                    o.enumType && o.enumType.length || (o.enumType = []), o.enumType.push(l.google.protobuf.EnumDescriptorProto.decode(e, e.uint32()));
                    break;
                case 5:
                    o.extensionRange && o.extensionRange.length || (o.extensionRange = []), o.extensionRange.push(l.google.protobuf.DescriptorProto.ExtensionRange.decode(e, e.uint32()));
                    break;
                case 8:
                    o.oneofDecl && o.oneofDecl.length || (o.oneofDecl = []), o.oneofDecl.push(l.google.protobuf.OneofDescriptorProto.decode(e, e.uint32()));
                    break;
                case 7:
                    o.options = l.google.protobuf.MessageOptions.decode(e, e.uint32());
                    break;
                case 9:
                    o.reservedRange && o.reservedRange.length || (o.reservedRange = []), o.reservedRange.push(l.google.protobuf.DescriptorProto.ReservedRange.decode(e, e.uint32()));
                    break;
                case 10:
                    o.reservedName && o.reservedName.length || (o.reservedName = []), o.reservedName.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, O.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, O.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.field && e.hasOwnProperty("field")) {
            if (!Array.isArray(e.field)) return "field: array expected";
            for(var t = 0; t < e.field.length; ++t)if (n = l.google.protobuf.FieldDescriptorProto.verify(e.field[t])) return "field." + n;
        }
        if (null != e.extension && e.hasOwnProperty("extension")) {
            if (!Array.isArray(e.extension)) return "extension: array expected";
            for(t = 0; t < e.extension.length; ++t)if (n = l.google.protobuf.FieldDescriptorProto.verify(e.extension[t])) return "extension." + n;
        }
        if (null != e.nestedType && e.hasOwnProperty("nestedType")) {
            if (!Array.isArray(e.nestedType)) return "nestedType: array expected";
            for(t = 0; t < e.nestedType.length; ++t)if (n = l.google.protobuf.DescriptorProto.verify(e.nestedType[t])) return "nestedType." + n;
        }
        if (null != e.enumType && e.hasOwnProperty("enumType")) {
            if (!Array.isArray(e.enumType)) return "enumType: array expected";
            for(t = 0; t < e.enumType.length; ++t)if (n = l.google.protobuf.EnumDescriptorProto.verify(e.enumType[t])) return "enumType." + n;
        }
        if (null != e.extensionRange && e.hasOwnProperty("extensionRange")) {
            if (!Array.isArray(e.extensionRange)) return "extensionRange: array expected";
            for(t = 0; t < e.extensionRange.length; ++t)if (n = l.google.protobuf.DescriptorProto.ExtensionRange.verify(e.extensionRange[t])) return "extensionRange." + n;
        }
        if (null != e.oneofDecl && e.hasOwnProperty("oneofDecl")) {
            if (!Array.isArray(e.oneofDecl)) return "oneofDecl: array expected";
            for(t = 0; t < e.oneofDecl.length; ++t)if (n = l.google.protobuf.OneofDescriptorProto.verify(e.oneofDecl[t])) return "oneofDecl." + n;
        }
        if (null != e.options && e.hasOwnProperty("options") && (n = l.google.protobuf.MessageOptions.verify(e.options))) return "options." + n;
        if (null != e.reservedRange && e.hasOwnProperty("reservedRange")) {
            if (!Array.isArray(e.reservedRange)) return "reservedRange: array expected";
            for(var n, t = 0; t < e.reservedRange.length; ++t)if (n = l.google.protobuf.DescriptorProto.ReservedRange.verify(e.reservedRange[t])) return "reservedRange." + n;
        }
        if (null != e.reservedName && e.hasOwnProperty("reservedName")) {
            if (!Array.isArray(e.reservedName)) return "reservedName: array expected";
            for(t = 0; t < e.reservedName.length; ++t)if (!p.isString(e.reservedName[t])) return "reservedName: string[] expected";
        }
        return null;
    }, O.fromObject = function(e) {
        if (e instanceof l.google.protobuf.DescriptorProto) return e;
        var t = new l.google.protobuf.DescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.field) {
            if (!Array.isArray(e.field)) throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
            t.field = [];
            for(var n = 0; n < e.field.length; ++n){
                if ("object" != typeof e.field[n]) throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                t.field[n] = l.google.protobuf.FieldDescriptorProto.fromObject(e.field[n]);
            }
        }
        if (e.extension) {
            if (!Array.isArray(e.extension)) throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
            t.extension = [];
            for(n = 0; n < e.extension.length; ++n){
                if ("object" != typeof e.extension[n]) throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                t.extension[n] = l.google.protobuf.FieldDescriptorProto.fromObject(e.extension[n]);
            }
        }
        if (e.nestedType) {
            if (!Array.isArray(e.nestedType)) throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
            t.nestedType = [];
            for(n = 0; n < e.nestedType.length; ++n){
                if ("object" != typeof e.nestedType[n]) throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                t.nestedType[n] = l.google.protobuf.DescriptorProto.fromObject(e.nestedType[n]);
            }
        }
        if (e.enumType) {
            if (!Array.isArray(e.enumType)) throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
            t.enumType = [];
            for(n = 0; n < e.enumType.length; ++n){
                if ("object" != typeof e.enumType[n]) throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                t.enumType[n] = l.google.protobuf.EnumDescriptorProto.fromObject(e.enumType[n]);
            }
        }
        if (e.extensionRange) {
            if (!Array.isArray(e.extensionRange)) throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
            t.extensionRange = [];
            for(n = 0; n < e.extensionRange.length; ++n){
                if ("object" != typeof e.extensionRange[n]) throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                t.extensionRange[n] = l.google.protobuf.DescriptorProto.ExtensionRange.fromObject(e.extensionRange[n]);
            }
        }
        if (e.oneofDecl) {
            if (!Array.isArray(e.oneofDecl)) throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
            t.oneofDecl = [];
            for(n = 0; n < e.oneofDecl.length; ++n){
                if ("object" != typeof e.oneofDecl[n]) throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                t.oneofDecl[n] = l.google.protobuf.OneofDescriptorProto.fromObject(e.oneofDecl[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
            t.options = l.google.protobuf.MessageOptions.fromObject(e.options);
        }
        if (e.reservedRange) {
            if (!Array.isArray(e.reservedRange)) throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
            t.reservedRange = [];
            for(n = 0; n < e.reservedRange.length; ++n){
                if ("object" != typeof e.reservedRange[n]) throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                t.reservedRange[n] = l.google.protobuf.DescriptorProto.ReservedRange.fromObject(e.reservedRange[n]);
            }
        }
        if (e.reservedName) {
            if (!Array.isArray(e.reservedName)) throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
            t.reservedName = [];
            for(n = 0; n < e.reservedName.length; ++n)t.reservedName[n] = String(e.reservedName[n]);
        }
        return t;
    }, O.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.field = [], n.nestedType = [], n.enumType = [], n.extensionRange = [], n.extension = [], n.oneofDecl = [], n.reservedRange = [], n.reservedName = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.field && e.field.length) {
            n.field = [];
            for(var o = 0; o < e.field.length; ++o)n.field[o] = l.google.protobuf.FieldDescriptorProto.toObject(e.field[o], t);
        }
        if (e.nestedType && e.nestedType.length) {
            n.nestedType = [];
            for(o = 0; o < e.nestedType.length; ++o)n.nestedType[o] = l.google.protobuf.DescriptorProto.toObject(e.nestedType[o], t);
        }
        if (e.enumType && e.enumType.length) {
            n.enumType = [];
            for(o = 0; o < e.enumType.length; ++o)n.enumType[o] = l.google.protobuf.EnumDescriptorProto.toObject(e.enumType[o], t);
        }
        if (e.extensionRange && e.extensionRange.length) {
            n.extensionRange = [];
            for(o = 0; o < e.extensionRange.length; ++o)n.extensionRange[o] = l.google.protobuf.DescriptorProto.ExtensionRange.toObject(e.extensionRange[o], t);
        }
        if (e.extension && e.extension.length) {
            n.extension = [];
            for(o = 0; o < e.extension.length; ++o)n.extension[o] = l.google.protobuf.FieldDescriptorProto.toObject(e.extension[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.MessageOptions.toObject(e.options, t)), e.oneofDecl && e.oneofDecl.length) {
            n.oneofDecl = [];
            for(o = 0; o < e.oneofDecl.length; ++o)n.oneofDecl[o] = l.google.protobuf.OneofDescriptorProto.toObject(e.oneofDecl[o], t);
        }
        if (e.reservedRange && e.reservedRange.length) {
            n.reservedRange = [];
            for(o = 0; o < e.reservedRange.length; ++o)n.reservedRange[o] = l.google.protobuf.DescriptorProto.ReservedRange.toObject(e.reservedRange[o], t);
        }
        if (e.reservedName && e.reservedName.length) {
            n.reservedName = [];
            for(o = 0; o < e.reservedName.length; ++o)n.reservedName[o] = e.reservedName[o];
        }
        return n;
    }, O.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, O.ExtensionRange = (v.prototype.start = 0, v.prototype.end = 0, v.prototype.options = null, v.create = function(e) {
        return new v(e);
    }, v.encode = function(e, t) {
        return t = t || i.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.ExtensionRangeOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, v.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, v.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.DescriptorProto.ExtensionRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                case 3:
                    o.options = l.google.protobuf.ExtensionRangeOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, v.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, v.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.start && e.hasOwnProperty("start") && !p.isInteger(e.start)) return "start: integer expected";
        if (null != e.end && e.hasOwnProperty("end") && !p.isInteger(e.end)) return "end: integer expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = l.google.protobuf.ExtensionRangeOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, v.fromObject = function(e) {
        if (e instanceof l.google.protobuf.DescriptorProto.ExtensionRange) return e;
        var t = new l.google.protobuf.DescriptorProto.ExtensionRange;
        if (null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
            t.options = l.google.protobuf.ExtensionRangeOptions.fromObject(e.options);
        }
        return t;
    }, v.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0, n.options = null), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.ExtensionRangeOptions.toObject(e.options, t)), n;
    }, v.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, v), O.ReservedRange = (Y.prototype.start = 0, Y.prototype.end = 0, Y.create = function(e) {
        return new Y(e);
    }, Y.encode = function(e, t) {
        return t = t || i.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), t;
    }, Y.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, Y.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.DescriptorProto.ReservedRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, Y.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, Y.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.start && e.hasOwnProperty("start") && !p.isInteger(e.start) ? "start: integer expected" : null != e.end && e.hasOwnProperty("end") && !p.isInteger(e.end) ? "end: integer expected" : null;
    }, Y.fromObject = function(e) {
        var t;
        return e instanceof l.google.protobuf.DescriptorProto.ReservedRange ? e : (t = new l.google.protobuf.DescriptorProto.ReservedRange, null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), t);
    }, Y.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, Y.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, Y), O), n.ExtensionRangeOptions = (z.prototype.uninterpretedOption = p.emptyArray, z.create = function(e) {
        return new z(e);
    }, z.encode = function(e, t) {
        if (t = t || i.create(), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, z.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, z.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.ExtensionRangeOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 999 ? (o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, z.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, z.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, z.fromObject = function(e) {
        if (e instanceof l.google.protobuf.ExtensionRangeOptions) return e;
        var t = new l.google.protobuf.ExtensionRangeOptions;
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, z.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, z.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, z), n.FieldDescriptorProto = (P.prototype.name = "", P.prototype.number = 0, P.prototype.label = 1, P.prototype.type = 1, P.prototype.typeName = "", P.prototype.extendee = "", P.prototype.defaultValue = "", P.prototype.oneofIndex = 0, P.prototype.jsonName = "", P.prototype.options = null, P.prototype.proto3Optional = !1, P.create = function(e) {
        return new P(e);
    }, P.encode = function(e, t) {
        return t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.extendee && Object.hasOwnProperty.call(e, "extendee") && t.uint32(18).string(e.extendee), null != e.number && Object.hasOwnProperty.call(e, "number") && t.uint32(24).int32(e.number), null != e.label && Object.hasOwnProperty.call(e, "label") && t.uint32(32).int32(e.label), null != e.type && Object.hasOwnProperty.call(e, "type") && t.uint32(40).int32(e.type), null != e.typeName && Object.hasOwnProperty.call(e, "typeName") && t.uint32(50).string(e.typeName), null != e.defaultValue && Object.hasOwnProperty.call(e, "defaultValue") && t.uint32(58).string(e.defaultValue), null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.FieldOptions.encode(e.options, t.uint32(66).fork()).ldelim(), null != e.oneofIndex && Object.hasOwnProperty.call(e, "oneofIndex") && t.uint32(72).int32(e.oneofIndex), null != e.jsonName && Object.hasOwnProperty.call(e, "jsonName") && t.uint32(82).string(e.jsonName), null != e.proto3Optional && Object.hasOwnProperty.call(e, "proto3Optional") && t.uint32(136).bool(e.proto3Optional), t;
    }, P.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, P.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.FieldDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 3:
                    o.number = e.int32();
                    break;
                case 4:
                    o.label = e.int32();
                    break;
                case 5:
                    o.type = e.int32();
                    break;
                case 6:
                    o.typeName = e.string();
                    break;
                case 2:
                    o.extendee = e.string();
                    break;
                case 7:
                    o.defaultValue = e.string();
                    break;
                case 9:
                    o.oneofIndex = e.int32();
                    break;
                case 10:
                    o.jsonName = e.string();
                    break;
                case 8:
                    o.options = l.google.protobuf.FieldOptions.decode(e, e.uint32());
                    break;
                case 17:
                    o.proto3Optional = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, P.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, P.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.number && e.hasOwnProperty("number") && !p.isInteger(e.number)) return "number: integer expected";
        if (null != e.label && e.hasOwnProperty("label")) switch(e.label){
            default:
                return "label: enum value expected";
            case 1:
            case 2:
            case 3:
        }
        if (null != e.type && e.hasOwnProperty("type")) switch(e.type){
            default:
                return "type: enum value expected";
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
        }
        if (null != e.typeName && e.hasOwnProperty("typeName") && !p.isString(e.typeName)) return "typeName: string expected";
        if (null != e.extendee && e.hasOwnProperty("extendee") && !p.isString(e.extendee)) return "extendee: string expected";
        if (null != e.defaultValue && e.hasOwnProperty("defaultValue") && !p.isString(e.defaultValue)) return "defaultValue: string expected";
        if (null != e.oneofIndex && e.hasOwnProperty("oneofIndex") && !p.isInteger(e.oneofIndex)) return "oneofIndex: integer expected";
        if (null != e.jsonName && e.hasOwnProperty("jsonName") && !p.isString(e.jsonName)) return "jsonName: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            var t = l.google.protobuf.FieldOptions.verify(e.options);
            if (t) return "options." + t;
        }
        return null != e.proto3Optional && e.hasOwnProperty("proto3Optional") && "boolean" != typeof e.proto3Optional ? "proto3Optional: boolean expected" : null;
    }, P.fromObject = function(e) {
        if (e instanceof l.google.protobuf.FieldDescriptorProto) return e;
        var t = new l.google.protobuf.FieldDescriptorProto;
        switch(null != e.name && (t.name = String(e.name)), null != e.number && (t.number = 0 | e.number), e.label){
            case "LABEL_OPTIONAL":
            case 1:
                t.label = 1;
                break;
            case "LABEL_REQUIRED":
            case 2:
                t.label = 2;
                break;
            case "LABEL_REPEATED":
            case 3:
                t.label = 3;
        }
        switch(e.type){
            case "TYPE_DOUBLE":
            case 1:
                t.type = 1;
                break;
            case "TYPE_FLOAT":
            case 2:
                t.type = 2;
                break;
            case "TYPE_INT64":
            case 3:
                t.type = 3;
                break;
            case "TYPE_UINT64":
            case 4:
                t.type = 4;
                break;
            case "TYPE_INT32":
            case 5:
                t.type = 5;
                break;
            case "TYPE_FIXED64":
            case 6:
                t.type = 6;
                break;
            case "TYPE_FIXED32":
            case 7:
                t.type = 7;
                break;
            case "TYPE_BOOL":
            case 8:
                t.type = 8;
                break;
            case "TYPE_STRING":
            case 9:
                t.type = 9;
                break;
            case "TYPE_GROUP":
            case 10:
                t.type = 10;
                break;
            case "TYPE_MESSAGE":
            case 11:
                t.type = 11;
                break;
            case "TYPE_BYTES":
            case 12:
                t.type = 12;
                break;
            case "TYPE_UINT32":
            case 13:
                t.type = 13;
                break;
            case "TYPE_ENUM":
            case 14:
                t.type = 14;
                break;
            case "TYPE_SFIXED32":
            case 15:
                t.type = 15;
                break;
            case "TYPE_SFIXED64":
            case 16:
                t.type = 16;
                break;
            case "TYPE_SINT32":
            case 17:
                t.type = 17;
                break;
            case "TYPE_SINT64":
            case 18:
                t.type = 18;
        }
        if (null != e.typeName && (t.typeName = String(e.typeName)), null != e.extendee && (t.extendee = String(e.extendee)), null != e.defaultValue && (t.defaultValue = String(e.defaultValue)), null != e.oneofIndex && (t.oneofIndex = 0 | e.oneofIndex), null != e.jsonName && (t.jsonName = String(e.jsonName)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
            t.options = l.google.protobuf.FieldOptions.fromObject(e.options);
        }
        return null != e.proto3Optional && (t.proto3Optional = Boolean(e.proto3Optional)), t;
    }, P.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.extendee = "", n.number = 0, n.label = t.enums === String ? "LABEL_OPTIONAL" : 1, n.type = t.enums === String ? "TYPE_DOUBLE" : 1, n.typeName = "", n.defaultValue = "", n.options = null, n.oneofIndex = 0, n.jsonName = "", n.proto3Optional = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.extendee && e.hasOwnProperty("extendee") && (n.extendee = e.extendee), null != e.number && e.hasOwnProperty("number") && (n.number = e.number), null != e.label && e.hasOwnProperty("label") && (n.label = t.enums === String ? l.google.protobuf.FieldDescriptorProto.Label[e.label] : e.label), null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? l.google.protobuf.FieldDescriptorProto.Type[e.type] : e.type), null != e.typeName && e.hasOwnProperty("typeName") && (n.typeName = e.typeName), null != e.defaultValue && e.hasOwnProperty("defaultValue") && (n.defaultValue = e.defaultValue), null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.FieldOptions.toObject(e.options, t)), null != e.oneofIndex && e.hasOwnProperty("oneofIndex") && (n.oneofIndex = e.oneofIndex), null != e.jsonName && e.hasOwnProperty("jsonName") && (n.jsonName = e.jsonName), null != e.proto3Optional && e.hasOwnProperty("proto3Optional") && (n.proto3Optional = e.proto3Optional), n;
    }, P.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, P.Type = (e = {}, (t = Object.create(e))[e[1] = "TYPE_DOUBLE"] = 1, t[e[2] = "TYPE_FLOAT"] = 2, t[e[3] = "TYPE_INT64"] = 3, t[e[4] = "TYPE_UINT64"] = 4, t[e[5] = "TYPE_INT32"] = 5, t[e[6] = "TYPE_FIXED64"] = 6, t[e[7] = "TYPE_FIXED32"] = 7, t[e[8] = "TYPE_BOOL"] = 8, t[e[9] = "TYPE_STRING"] = 9, t[e[10] = "TYPE_GROUP"] = 10, t[e[11] = "TYPE_MESSAGE"] = 11, t[e[12] = "TYPE_BYTES"] = 12, t[e[13] = "TYPE_UINT32"] = 13, t[e[14] = "TYPE_ENUM"] = 14, t[e[15] = "TYPE_SFIXED32"] = 15, t[e[16] = "TYPE_SFIXED64"] = 16, t[e[17] = "TYPE_SINT32"] = 17, t[e[18] = "TYPE_SINT64"] = 18, t), P.Label = (e = {}, (t = Object.create(e))[e[1] = "LABEL_OPTIONAL"] = 1, t[e[2] = "LABEL_REQUIRED"] = 2, t[e[3] = "LABEL_REPEATED"] = 3, t), P), n.OneofDescriptorProto = (W.prototype.name = "", W.prototype.options = null, W.create = function(e) {
        return new W(e);
    }, W.encode = function(e, t) {
        return t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.OneofOptions.encode(e.options, t.uint32(18).fork()).ldelim(), t;
    }, W.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, W.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.OneofDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.options = l.google.protobuf.OneofOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, W.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, W.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = l.google.protobuf.OneofOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, W.fromObject = function(e) {
        if (e instanceof l.google.protobuf.OneofDescriptorProto) return e;
        var t = new l.google.protobuf.OneofDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
            t.options = l.google.protobuf.OneofOptions.fromObject(e.options);
        }
        return t;
    }, W.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.OneofOptions.toObject(e.options, t)), n;
    }, W.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, W), n.EnumDescriptorProto = (w.prototype.name = "", w.prototype.value = p.emptyArray, w.prototype.options = null, w.prototype.reservedRange = p.emptyArray, w.prototype.reservedName = p.emptyArray, w.create = function(e) {
        return new w(e);
    }, w.encode = function(e, t) {
        if (t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.value && e.value.length) for(var n = 0; n < e.value.length; ++n)l.google.protobuf.EnumValueDescriptorProto.encode(e.value[n], t.uint32(18).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.EnumOptions.encode(e.options, t.uint32(26).fork()).ldelim(), null != e.reservedRange && e.reservedRange.length) for(n = 0; n < e.reservedRange.length; ++n)l.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(e.reservedRange[n], t.uint32(34).fork()).ldelim();
        if (null != e.reservedName && e.reservedName.length) for(n = 0; n < e.reservedName.length; ++n)t.uint32(42).string(e.reservedName[n]);
        return t;
    }, w.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, w.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.EnumDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.value && o.value.length || (o.value = []), o.value.push(l.google.protobuf.EnumValueDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.options = l.google.protobuf.EnumOptions.decode(e, e.uint32());
                    break;
                case 4:
                    o.reservedRange && o.reservedRange.length || (o.reservedRange = []), o.reservedRange.push(l.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(e, e.uint32()));
                    break;
                case 5:
                    o.reservedName && o.reservedName.length || (o.reservedName = []), o.reservedName.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, w.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, w.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.value && e.hasOwnProperty("value")) {
            if (!Array.isArray(e.value)) return "value: array expected";
            for(var t = 0; t < e.value.length; ++t)if (n = l.google.protobuf.EnumValueDescriptorProto.verify(e.value[t])) return "value." + n;
        }
        if (null != e.options && e.hasOwnProperty("options") && (n = l.google.protobuf.EnumOptions.verify(e.options))) return "options." + n;
        if (null != e.reservedRange && e.hasOwnProperty("reservedRange")) {
            if (!Array.isArray(e.reservedRange)) return "reservedRange: array expected";
            for(var n, t = 0; t < e.reservedRange.length; ++t)if (n = l.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(e.reservedRange[t])) return "reservedRange." + n;
        }
        if (null != e.reservedName && e.hasOwnProperty("reservedName")) {
            if (!Array.isArray(e.reservedName)) return "reservedName: array expected";
            for(t = 0; t < e.reservedName.length; ++t)if (!p.isString(e.reservedName[t])) return "reservedName: string[] expected";
        }
        return null;
    }, w.fromObject = function(e) {
        if (e instanceof l.google.protobuf.EnumDescriptorProto) return e;
        var t = new l.google.protobuf.EnumDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.value) {
            if (!Array.isArray(e.value)) throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
            t.value = [];
            for(var n = 0; n < e.value.length; ++n){
                if ("object" != typeof e.value[n]) throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                t.value[n] = l.google.protobuf.EnumValueDescriptorProto.fromObject(e.value[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
            t.options = l.google.protobuf.EnumOptions.fromObject(e.options);
        }
        if (e.reservedRange) {
            if (!Array.isArray(e.reservedRange)) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
            t.reservedRange = [];
            for(n = 0; n < e.reservedRange.length; ++n){
                if ("object" != typeof e.reservedRange[n]) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                t.reservedRange[n] = l.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(e.reservedRange[n]);
            }
        }
        if (e.reservedName) {
            if (!Array.isArray(e.reservedName)) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
            t.reservedName = [];
            for(n = 0; n < e.reservedName.length; ++n)t.reservedName[n] = String(e.reservedName[n]);
        }
        return t;
    }, w.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.value = [], n.reservedRange = [], n.reservedName = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.value && e.value.length) {
            n.value = [];
            for(var o = 0; o < e.value.length; ++o)n.value[o] = l.google.protobuf.EnumValueDescriptorProto.toObject(e.value[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.EnumOptions.toObject(e.options, t)), e.reservedRange && e.reservedRange.length) {
            n.reservedRange = [];
            for(o = 0; o < e.reservedRange.length; ++o)n.reservedRange[o] = l.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(e.reservedRange[o], t);
        }
        if (e.reservedName && e.reservedName.length) {
            n.reservedName = [];
            for(o = 0; o < e.reservedName.length; ++o)n.reservedName[o] = e.reservedName[o];
        }
        return n;
    }, w.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, w.EnumReservedRange = (X.prototype.start = 0, X.prototype.end = 0, X.create = function(e) {
        return new X(e);
    }, X.encode = function(e, t) {
        return t = t || i.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), t;
    }, X.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, X.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.EnumDescriptorProto.EnumReservedRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, X.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, X.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.start && e.hasOwnProperty("start") && !p.isInteger(e.start) ? "start: integer expected" : null != e.end && e.hasOwnProperty("end") && !p.isInteger(e.end) ? "end: integer expected" : null;
    }, X.fromObject = function(e) {
        var t;
        return e instanceof l.google.protobuf.EnumDescriptorProto.EnumReservedRange ? e : (t = new l.google.protobuf.EnumDescriptorProto.EnumReservedRange, null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), t);
    }, X.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, X.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, X), w), n.EnumValueDescriptorProto = (j.prototype.name = "", j.prototype.number = 0, j.prototype.options = null, j.create = function(e) {
        return new j(e);
    }, j.encode = function(e, t) {
        return t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.number && Object.hasOwnProperty.call(e, "number") && t.uint32(16).int32(e.number), null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.EnumValueOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, j.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, j.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.EnumValueDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.number = e.int32();
                    break;
                case 3:
                    o.options = l.google.protobuf.EnumValueOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, j.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, j.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.number && e.hasOwnProperty("number") && !p.isInteger(e.number)) return "number: integer expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = l.google.protobuf.EnumValueOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, j.fromObject = function(e) {
        if (e instanceof l.google.protobuf.EnumValueDescriptorProto) return e;
        var t = new l.google.protobuf.EnumValueDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.number && (t.number = 0 | e.number), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
            t.options = l.google.protobuf.EnumValueOptions.fromObject(e.options);
        }
        return t;
    }, j.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.number = 0, n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.number && e.hasOwnProperty("number") && (n.number = e.number), null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.EnumValueOptions.toObject(e.options, t)), n;
    }, j.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, j), n.ServiceDescriptorProto = (D.prototype.name = "", D.prototype.method = p.emptyArray, D.prototype.options = null, D.create = function(e) {
        return new D(e);
    }, D.encode = function(e, t) {
        if (t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.method && e.method.length) for(var n = 0; n < e.method.length; ++n)l.google.protobuf.MethodDescriptorProto.encode(e.method[n], t.uint32(18).fork()).ldelim();
        return null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.ServiceOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, D.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, D.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.ServiceDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.method && o.method.length || (o.method = []), o.method.push(l.google.protobuf.MethodDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.options = l.google.protobuf.ServiceOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, D.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, D.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.method && e.hasOwnProperty("method")) {
            if (!Array.isArray(e.method)) return "method: array expected";
            for(var t = 0; t < e.method.length; ++t)if (n = l.google.protobuf.MethodDescriptorProto.verify(e.method[t])) return "method." + n;
        }
        var n;
        if (null != e.options && e.hasOwnProperty("options") && (n = l.google.protobuf.ServiceOptions.verify(e.options))) return "options." + n;
        return null;
    }, D.fromObject = function(e) {
        if (e instanceof l.google.protobuf.ServiceDescriptorProto) return e;
        var t = new l.google.protobuf.ServiceDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.method) {
            if (!Array.isArray(e.method)) throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
            t.method = [];
            for(var n = 0; n < e.method.length; ++n){
                if ("object" != typeof e.method[n]) throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                t.method[n] = l.google.protobuf.MethodDescriptorProto.fromObject(e.method[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
            t.options = l.google.protobuf.ServiceOptions.fromObject(e.options);
        }
        return t;
    }, D.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.method = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.method && e.method.length) {
            n.method = [];
            for(var o = 0; o < e.method.length; ++o)n.method[o] = l.google.protobuf.MethodDescriptorProto.toObject(e.method[o], t);
        }
        return null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.ServiceOptions.toObject(e.options, t)), n;
    }, D.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, D), n.MethodDescriptorProto = (x.prototype.name = "", x.prototype.inputType = "", x.prototype.outputType = "", x.prototype.options = null, x.prototype.clientStreaming = !1, x.prototype.serverStreaming = !1, x.create = function(e) {
        return new x(e);
    }, x.encode = function(e, t) {
        return t = t || i.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.inputType && Object.hasOwnProperty.call(e, "inputType") && t.uint32(18).string(e.inputType), null != e.outputType && Object.hasOwnProperty.call(e, "outputType") && t.uint32(26).string(e.outputType), null != e.options && Object.hasOwnProperty.call(e, "options") && l.google.protobuf.MethodOptions.encode(e.options, t.uint32(34).fork()).ldelim(), null != e.clientStreaming && Object.hasOwnProperty.call(e, "clientStreaming") && t.uint32(40).bool(e.clientStreaming), null != e.serverStreaming && Object.hasOwnProperty.call(e, "serverStreaming") && t.uint32(48).bool(e.serverStreaming), t;
    }, x.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, x.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.MethodDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.inputType = e.string();
                    break;
                case 3:
                    o.outputType = e.string();
                    break;
                case 4:
                    o.options = l.google.protobuf.MethodOptions.decode(e, e.uint32());
                    break;
                case 5:
                    o.clientStreaming = e.bool();
                    break;
                case 6:
                    o.serverStreaming = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, x.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, x.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !p.isString(e.name)) return "name: string expected";
        if (null != e.inputType && e.hasOwnProperty("inputType") && !p.isString(e.inputType)) return "inputType: string expected";
        if (null != e.outputType && e.hasOwnProperty("outputType") && !p.isString(e.outputType)) return "outputType: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            var t = l.google.protobuf.MethodOptions.verify(e.options);
            if (t) return "options." + t;
        }
        return null != e.clientStreaming && e.hasOwnProperty("clientStreaming") && "boolean" != typeof e.clientStreaming ? "clientStreaming: boolean expected" : null != e.serverStreaming && e.hasOwnProperty("serverStreaming") && "boolean" != typeof e.serverStreaming ? "serverStreaming: boolean expected" : null;
    }, x.fromObject = function(e) {
        if (e instanceof l.google.protobuf.MethodDescriptorProto) return e;
        var t = new l.google.protobuf.MethodDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.inputType && (t.inputType = String(e.inputType)), null != e.outputType && (t.outputType = String(e.outputType)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
            t.options = l.google.protobuf.MethodOptions.fromObject(e.options);
        }
        return null != e.clientStreaming && (t.clientStreaming = Boolean(e.clientStreaming)), null != e.serverStreaming && (t.serverStreaming = Boolean(e.serverStreaming)), t;
    }, x.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.inputType = "", n.outputType = "", n.options = null, n.clientStreaming = !1, n.serverStreaming = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.inputType && e.hasOwnProperty("inputType") && (n.inputType = e.inputType), null != e.outputType && e.hasOwnProperty("outputType") && (n.outputType = e.outputType), null != e.options && e.hasOwnProperty("options") && (n.options = l.google.protobuf.MethodOptions.toObject(e.options, t)), null != e.clientStreaming && e.hasOwnProperty("clientStreaming") && (n.clientStreaming = e.clientStreaming), null != e.serverStreaming && e.hasOwnProperty("serverStreaming") && (n.serverStreaming = e.serverStreaming), n;
    }, x.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, x), n.FileOptions = (S.prototype.javaPackage = "", S.prototype.javaOuterClassname = "", S.prototype.javaMultipleFiles = !1, S.prototype.javaGenerateEqualsAndHash = !1, S.prototype.javaStringCheckUtf8 = !1, S.prototype.optimizeFor = 1, S.prototype.goPackage = "", S.prototype.ccGenericServices = !1, S.prototype.javaGenericServices = !1, S.prototype.pyGenericServices = !1, S.prototype.phpGenericServices = !1, S.prototype.deprecated = !1, S.prototype.ccEnableArenas = !0, S.prototype.objcClassPrefix = "", S.prototype.csharpNamespace = "", S.prototype.swiftPrefix = "", S.prototype.phpClassPrefix = "", S.prototype.phpNamespace = "", S.prototype.phpMetadataNamespace = "", S.prototype.rubyPackage = "", S.prototype.uninterpretedOption = p.emptyArray, S.prototype[".google.api.resourceDefinition"] = p.emptyArray, S.create = function(e) {
        return new S(e);
    }, S.encode = function(e, t) {
        if (t = t || i.create(), null != e.javaPackage && Object.hasOwnProperty.call(e, "javaPackage") && t.uint32(10).string(e.javaPackage), null != e.javaOuterClassname && Object.hasOwnProperty.call(e, "javaOuterClassname") && t.uint32(66).string(e.javaOuterClassname), null != e.optimizeFor && Object.hasOwnProperty.call(e, "optimizeFor") && t.uint32(72).int32(e.optimizeFor), null != e.javaMultipleFiles && Object.hasOwnProperty.call(e, "javaMultipleFiles") && t.uint32(80).bool(e.javaMultipleFiles), null != e.goPackage && Object.hasOwnProperty.call(e, "goPackage") && t.uint32(90).string(e.goPackage), null != e.ccGenericServices && Object.hasOwnProperty.call(e, "ccGenericServices") && t.uint32(128).bool(e.ccGenericServices), null != e.javaGenericServices && Object.hasOwnProperty.call(e, "javaGenericServices") && t.uint32(136).bool(e.javaGenericServices), null != e.pyGenericServices && Object.hasOwnProperty.call(e, "pyGenericServices") && t.uint32(144).bool(e.pyGenericServices), null != e.javaGenerateEqualsAndHash && Object.hasOwnProperty.call(e, "javaGenerateEqualsAndHash") && t.uint32(160).bool(e.javaGenerateEqualsAndHash), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(184).bool(e.deprecated), null != e.javaStringCheckUtf8 && Object.hasOwnProperty.call(e, "javaStringCheckUtf8") && t.uint32(216).bool(e.javaStringCheckUtf8), null != e.ccEnableArenas && Object.hasOwnProperty.call(e, "ccEnableArenas") && t.uint32(248).bool(e.ccEnableArenas), null != e.objcClassPrefix && Object.hasOwnProperty.call(e, "objcClassPrefix") && t.uint32(290).string(e.objcClassPrefix), null != e.csharpNamespace && Object.hasOwnProperty.call(e, "csharpNamespace") && t.uint32(298).string(e.csharpNamespace), null != e.swiftPrefix && Object.hasOwnProperty.call(e, "swiftPrefix") && t.uint32(314).string(e.swiftPrefix), null != e.phpClassPrefix && Object.hasOwnProperty.call(e, "phpClassPrefix") && t.uint32(322).string(e.phpClassPrefix), null != e.phpNamespace && Object.hasOwnProperty.call(e, "phpNamespace") && t.uint32(330).string(e.phpNamespace), null != e.phpGenericServices && Object.hasOwnProperty.call(e, "phpGenericServices") && t.uint32(336).bool(e.phpGenericServices), null != e.phpMetadataNamespace && Object.hasOwnProperty.call(e, "phpMetadataNamespace") && t.uint32(354).string(e.phpMetadataNamespace), null != e.rubyPackage && Object.hasOwnProperty.call(e, "rubyPackage") && t.uint32(362).string(e.rubyPackage), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        if (null != e[".google.api.resourceDefinition"] && e[".google.api.resourceDefinition"].length) for(n = 0; n < e[".google.api.resourceDefinition"].length; ++n)l.google.api.ResourceDescriptor.encode(e[".google.api.resourceDefinition"][n], t.uint32(8426).fork()).ldelim();
        return t;
    }, S.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, S.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.FileOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.javaPackage = e.string();
                    break;
                case 8:
                    o.javaOuterClassname = e.string();
                    break;
                case 10:
                    o.javaMultipleFiles = e.bool();
                    break;
                case 20:
                    o.javaGenerateEqualsAndHash = e.bool();
                    break;
                case 27:
                    o.javaStringCheckUtf8 = e.bool();
                    break;
                case 9:
                    o.optimizeFor = e.int32();
                    break;
                case 11:
                    o.goPackage = e.string();
                    break;
                case 16:
                    o.ccGenericServices = e.bool();
                    break;
                case 17:
                    o.javaGenericServices = e.bool();
                    break;
                case 18:
                    o.pyGenericServices = e.bool();
                    break;
                case 42:
                    o.phpGenericServices = e.bool();
                    break;
                case 23:
                    o.deprecated = e.bool();
                    break;
                case 31:
                    o.ccEnableArenas = e.bool();
                    break;
                case 36:
                    o.objcClassPrefix = e.string();
                    break;
                case 37:
                    o.csharpNamespace = e.string();
                    break;
                case 39:
                    o.swiftPrefix = e.string();
                    break;
                case 40:
                    o.phpClassPrefix = e.string();
                    break;
                case 41:
                    o.phpNamespace = e.string();
                    break;
                case 44:
                    o.phpMetadataNamespace = e.string();
                    break;
                case 45:
                    o.rubyPackage = e.string();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1053:
                    o[".google.api.resourceDefinition"] && o[".google.api.resourceDefinition"].length || (o[".google.api.resourceDefinition"] = []), o[".google.api.resourceDefinition"].push(l.google.api.ResourceDescriptor.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, S.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, S.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.javaPackage && e.hasOwnProperty("javaPackage") && !p.isString(e.javaPackage)) return "javaPackage: string expected";
        if (null != e.javaOuterClassname && e.hasOwnProperty("javaOuterClassname") && !p.isString(e.javaOuterClassname)) return "javaOuterClassname: string expected";
        if (null != e.javaMultipleFiles && e.hasOwnProperty("javaMultipleFiles") && "boolean" != typeof e.javaMultipleFiles) return "javaMultipleFiles: boolean expected";
        if (null != e.javaGenerateEqualsAndHash && e.hasOwnProperty("javaGenerateEqualsAndHash") && "boolean" != typeof e.javaGenerateEqualsAndHash) return "javaGenerateEqualsAndHash: boolean expected";
        if (null != e.javaStringCheckUtf8 && e.hasOwnProperty("javaStringCheckUtf8") && "boolean" != typeof e.javaStringCheckUtf8) return "javaStringCheckUtf8: boolean expected";
        if (null != e.optimizeFor && e.hasOwnProperty("optimizeFor")) switch(e.optimizeFor){
            default:
                return "optimizeFor: enum value expected";
            case 1:
            case 2:
            case 3:
        }
        if (null != e.goPackage && e.hasOwnProperty("goPackage") && !p.isString(e.goPackage)) return "goPackage: string expected";
        if (null != e.ccGenericServices && e.hasOwnProperty("ccGenericServices") && "boolean" != typeof e.ccGenericServices) return "ccGenericServices: boolean expected";
        if (null != e.javaGenericServices && e.hasOwnProperty("javaGenericServices") && "boolean" != typeof e.javaGenericServices) return "javaGenericServices: boolean expected";
        if (null != e.pyGenericServices && e.hasOwnProperty("pyGenericServices") && "boolean" != typeof e.pyGenericServices) return "pyGenericServices: boolean expected";
        if (null != e.phpGenericServices && e.hasOwnProperty("phpGenericServices") && "boolean" != typeof e.phpGenericServices) return "phpGenericServices: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.ccEnableArenas && e.hasOwnProperty("ccEnableArenas") && "boolean" != typeof e.ccEnableArenas) return "ccEnableArenas: boolean expected";
        if (null != e.objcClassPrefix && e.hasOwnProperty("objcClassPrefix") && !p.isString(e.objcClassPrefix)) return "objcClassPrefix: string expected";
        if (null != e.csharpNamespace && e.hasOwnProperty("csharpNamespace") && !p.isString(e.csharpNamespace)) return "csharpNamespace: string expected";
        if (null != e.swiftPrefix && e.hasOwnProperty("swiftPrefix") && !p.isString(e.swiftPrefix)) return "swiftPrefix: string expected";
        if (null != e.phpClassPrefix && e.hasOwnProperty("phpClassPrefix") && !p.isString(e.phpClassPrefix)) return "phpClassPrefix: string expected";
        if (null != e.phpNamespace && e.hasOwnProperty("phpNamespace") && !p.isString(e.phpNamespace)) return "phpNamespace: string expected";
        if (null != e.phpMetadataNamespace && e.hasOwnProperty("phpMetadataNamespace") && !p.isString(e.phpMetadataNamespace)) return "phpMetadataNamespace: string expected";
        if (null != e.rubyPackage && e.hasOwnProperty("rubyPackage") && !p.isString(e.rubyPackage)) return "rubyPackage: string expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t)if (n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t])) return "uninterpretedOption." + n;
        }
        if (null != e[".google.api.resourceDefinition"] && e.hasOwnProperty(".google.api.resourceDefinition")) {
            if (!Array.isArray(e[".google.api.resourceDefinition"])) return ".google.api.resourceDefinition: array expected";
            for(var n, t = 0; t < e[".google.api.resourceDefinition"].length; ++t)if (n = l.google.api.ResourceDescriptor.verify(e[".google.api.resourceDefinition"][t])) return ".google.api.resourceDefinition." + n;
        }
        return null;
    }, S.fromObject = function(e) {
        if (e instanceof l.google.protobuf.FileOptions) return e;
        var t = new l.google.protobuf.FileOptions;
        switch(null != e.javaPackage && (t.javaPackage = String(e.javaPackage)), null != e.javaOuterClassname && (t.javaOuterClassname = String(e.javaOuterClassname)), null != e.javaMultipleFiles && (t.javaMultipleFiles = Boolean(e.javaMultipleFiles)), null != e.javaGenerateEqualsAndHash && (t.javaGenerateEqualsAndHash = Boolean(e.javaGenerateEqualsAndHash)), null != e.javaStringCheckUtf8 && (t.javaStringCheckUtf8 = Boolean(e.javaStringCheckUtf8)), e.optimizeFor){
            case "SPEED":
            case 1:
                t.optimizeFor = 1;
                break;
            case "CODE_SIZE":
            case 2:
                t.optimizeFor = 2;
                break;
            case "LITE_RUNTIME":
            case 3:
                t.optimizeFor = 3;
        }
        if (null != e.goPackage && (t.goPackage = String(e.goPackage)), null != e.ccGenericServices && (t.ccGenericServices = Boolean(e.ccGenericServices)), null != e.javaGenericServices && (t.javaGenericServices = Boolean(e.javaGenericServices)), null != e.pyGenericServices && (t.pyGenericServices = Boolean(e.pyGenericServices)), null != e.phpGenericServices && (t.phpGenericServices = Boolean(e.phpGenericServices)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.ccEnableArenas && (t.ccEnableArenas = Boolean(e.ccEnableArenas)), null != e.objcClassPrefix && (t.objcClassPrefix = String(e.objcClassPrefix)), null != e.csharpNamespace && (t.csharpNamespace = String(e.csharpNamespace)), null != e.swiftPrefix && (t.swiftPrefix = String(e.swiftPrefix)), null != e.phpClassPrefix && (t.phpClassPrefix = String(e.phpClassPrefix)), null != e.phpNamespace && (t.phpNamespace = String(e.phpNamespace)), null != e.phpMetadataNamespace && (t.phpMetadataNamespace = String(e.phpMetadataNamespace)), null != e.rubyPackage && (t.rubyPackage = String(e.rubyPackage)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        if (e[".google.api.resourceDefinition"]) {
            if (!Array.isArray(e[".google.api.resourceDefinition"])) throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
            t[".google.api.resourceDefinition"] = [];
            for(n = 0; n < e[".google.api.resourceDefinition"].length; ++n){
                if ("object" != typeof e[".google.api.resourceDefinition"][n]) throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                t[".google.api.resourceDefinition"][n] = l.google.api.ResourceDescriptor.fromObject(e[".google.api.resourceDefinition"][n]);
            }
        }
        return t;
    }, S.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = [], n[".google.api.resourceDefinition"] = []), t.defaults && (n.javaPackage = "", n.javaOuterClassname = "", n.optimizeFor = t.enums === String ? "SPEED" : 1, n.javaMultipleFiles = !1, n.goPackage = "", n.ccGenericServices = !1, n.javaGenericServices = !1, n.pyGenericServices = !1, n.javaGenerateEqualsAndHash = !1, n.deprecated = !1, n.javaStringCheckUtf8 = !1, n.ccEnableArenas = !0, n.objcClassPrefix = "", n.csharpNamespace = "", n.swiftPrefix = "", n.phpClassPrefix = "", n.phpNamespace = "", n.phpGenericServices = !1, n.phpMetadataNamespace = "", n.rubyPackage = ""), null != e.javaPackage && e.hasOwnProperty("javaPackage") && (n.javaPackage = e.javaPackage), null != e.javaOuterClassname && e.hasOwnProperty("javaOuterClassname") && (n.javaOuterClassname = e.javaOuterClassname), null != e.optimizeFor && e.hasOwnProperty("optimizeFor") && (n.optimizeFor = t.enums === String ? l.google.protobuf.FileOptions.OptimizeMode[e.optimizeFor] : e.optimizeFor), null != e.javaMultipleFiles && e.hasOwnProperty("javaMultipleFiles") && (n.javaMultipleFiles = e.javaMultipleFiles), null != e.goPackage && e.hasOwnProperty("goPackage") && (n.goPackage = e.goPackage), null != e.ccGenericServices && e.hasOwnProperty("ccGenericServices") && (n.ccGenericServices = e.ccGenericServices), null != e.javaGenericServices && e.hasOwnProperty("javaGenericServices") && (n.javaGenericServices = e.javaGenericServices), null != e.pyGenericServices && e.hasOwnProperty("pyGenericServices") && (n.pyGenericServices = e.pyGenericServices), null != e.javaGenerateEqualsAndHash && e.hasOwnProperty("javaGenerateEqualsAndHash") && (n.javaGenerateEqualsAndHash = e.javaGenerateEqualsAndHash), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.javaStringCheckUtf8 && e.hasOwnProperty("javaStringCheckUtf8") && (n.javaStringCheckUtf8 = e.javaStringCheckUtf8), null != e.ccEnableArenas && e.hasOwnProperty("ccEnableArenas") && (n.ccEnableArenas = e.ccEnableArenas), null != e.objcClassPrefix && e.hasOwnProperty("objcClassPrefix") && (n.objcClassPrefix = e.objcClassPrefix), null != e.csharpNamespace && e.hasOwnProperty("csharpNamespace") && (n.csharpNamespace = e.csharpNamespace), null != e.swiftPrefix && e.hasOwnProperty("swiftPrefix") && (n.swiftPrefix = e.swiftPrefix), null != e.phpClassPrefix && e.hasOwnProperty("phpClassPrefix") && (n.phpClassPrefix = e.phpClassPrefix), null != e.phpNamespace && e.hasOwnProperty("phpNamespace") && (n.phpNamespace = e.phpNamespace), null != e.phpGenericServices && e.hasOwnProperty("phpGenericServices") && (n.phpGenericServices = e.phpGenericServices), null != e.phpMetadataNamespace && e.hasOwnProperty("phpMetadataNamespace") && (n.phpMetadataNamespace = e.phpMetadataNamespace), null != e.rubyPackage && e.hasOwnProperty("rubyPackage") && (n.rubyPackage = e.rubyPackage), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        if (e[".google.api.resourceDefinition"] && e[".google.api.resourceDefinition"].length) {
            n[".google.api.resourceDefinition"] = [];
            for(o = 0; o < e[".google.api.resourceDefinition"].length; ++o)n[".google.api.resourceDefinition"][o] = l.google.api.ResourceDescriptor.toObject(e[".google.api.resourceDefinition"][o], t);
        }
        return n;
    }, S.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, S.OptimizeMode = (e = {}, (t = Object.create(e))[e[1] = "SPEED"] = 1, t[e[2] = "CODE_SIZE"] = 2, t[e[3] = "LITE_RUNTIME"] = 3, t), S), n.MessageOptions = (k.prototype.messageSetWireFormat = !1, k.prototype.noStandardDescriptorAccessor = !1, k.prototype.deprecated = !1, k.prototype.mapEntry = !1, k.prototype.uninterpretedOption = p.emptyArray, k.prototype[".google.api.resource"] = null, k.create = function(e) {
        return new k(e);
    }, k.encode = function(e, t) {
        if (t = t || i.create(), null != e.messageSetWireFormat && Object.hasOwnProperty.call(e, "messageSetWireFormat") && t.uint32(8).bool(e.messageSetWireFormat), null != e.noStandardDescriptorAccessor && Object.hasOwnProperty.call(e, "noStandardDescriptorAccessor") && t.uint32(16).bool(e.noStandardDescriptorAccessor), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.mapEntry && Object.hasOwnProperty.call(e, "mapEntry") && t.uint32(56).bool(e.mapEntry), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return null != e[".google.api.resource"] && Object.hasOwnProperty.call(e, ".google.api.resource") && l.google.api.ResourceDescriptor.encode(e[".google.api.resource"], t.uint32(8426).fork()).ldelim(), t;
    }, k.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, k.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.MessageOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.messageSetWireFormat = e.bool();
                    break;
                case 2:
                    o.noStandardDescriptorAccessor = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 7:
                    o.mapEntry = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1053:
                    o[".google.api.resource"] = l.google.api.ResourceDescriptor.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, k.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, k.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.messageSetWireFormat && e.hasOwnProperty("messageSetWireFormat") && "boolean" != typeof e.messageSetWireFormat) return "messageSetWireFormat: boolean expected";
        if (null != e.noStandardDescriptorAccessor && e.hasOwnProperty("noStandardDescriptorAccessor") && "boolean" != typeof e.noStandardDescriptorAccessor) return "noStandardDescriptorAccessor: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.mapEntry && e.hasOwnProperty("mapEntry") && "boolean" != typeof e.mapEntry) return "mapEntry: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t)if (n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t])) return "uninterpretedOption." + n;
        }
        var n;
        if (null != e[".google.api.resource"] && e.hasOwnProperty(".google.api.resource") && (n = l.google.api.ResourceDescriptor.verify(e[".google.api.resource"]))) return ".google.api.resource." + n;
        return null;
    }, k.fromObject = function(e) {
        if (e instanceof l.google.protobuf.MessageOptions) return e;
        var t = new l.google.protobuf.MessageOptions;
        if (null != e.messageSetWireFormat && (t.messageSetWireFormat = Boolean(e.messageSetWireFormat)), null != e.noStandardDescriptorAccessor && (t.noStandardDescriptorAccessor = Boolean(e.noStandardDescriptorAccessor)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.mapEntry && (t.mapEntry = Boolean(e.mapEntry)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        if (null != e[".google.api.resource"]) {
            if ("object" != typeof e[".google.api.resource"]) throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
            t[".google.api.resource"] = l.google.api.ResourceDescriptor.fromObject(e[".google.api.resource"]);
        }
        return t;
    }, k.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.messageSetWireFormat = !1, n.noStandardDescriptorAccessor = !1, n.deprecated = !1, n.mapEntry = !1, n[".google.api.resource"] = null), null != e.messageSetWireFormat && e.hasOwnProperty("messageSetWireFormat") && (n.messageSetWireFormat = e.messageSetWireFormat), null != e.noStandardDescriptorAccessor && e.hasOwnProperty("noStandardDescriptorAccessor") && (n.noStandardDescriptorAccessor = e.noStandardDescriptorAccessor), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.mapEntry && e.hasOwnProperty("mapEntry") && (n.mapEntry = e.mapEntry), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return null != e[".google.api.resource"] && e.hasOwnProperty(".google.api.resource") && (n[".google.api.resource"] = l.google.api.ResourceDescriptor.toObject(e[".google.api.resource"], t)), n;
    }, k.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, k), n.FieldOptions = (T.prototype.ctype = 0, T.prototype.packed = !1, T.prototype.jstype = 0, T.prototype.lazy = !1, T.prototype.deprecated = !1, T.prototype.weak = !1, T.prototype.uninterpretedOption = p.emptyArray, T.prototype[".google.api.fieldBehavior"] = p.emptyArray, T.prototype[".google.api.resourceReference"] = null, T.create = function(e) {
        return new T(e);
    }, T.encode = function(e, t) {
        if (t = t || i.create(), null != e.ctype && Object.hasOwnProperty.call(e, "ctype") && t.uint32(8).int32(e.ctype), null != e.packed && Object.hasOwnProperty.call(e, "packed") && t.uint32(16).bool(e.packed), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.lazy && Object.hasOwnProperty.call(e, "lazy") && t.uint32(40).bool(e.lazy), null != e.jstype && Object.hasOwnProperty.call(e, "jstype") && t.uint32(48).int32(e.jstype), null != e.weak && Object.hasOwnProperty.call(e, "weak") && t.uint32(80).bool(e.weak), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        if (null != e[".google.api.fieldBehavior"] && e[".google.api.fieldBehavior"].length) {
            t.uint32(8418).fork();
            for(n = 0; n < e[".google.api.fieldBehavior"].length; ++n)t.int32(e[".google.api.fieldBehavior"][n]);
            t.ldelim();
        }
        return null != e[".google.api.resourceReference"] && Object.hasOwnProperty.call(e, ".google.api.resourceReference") && l.google.api.ResourceReference.encode(e[".google.api.resourceReference"], t.uint32(8442).fork()).ldelim(), t;
    }, T.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, T.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.FieldOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.ctype = e.int32();
                    break;
                case 2:
                    o.packed = e.bool();
                    break;
                case 6:
                    o.jstype = e.int32();
                    break;
                case 5:
                    o.lazy = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 10:
                    o.weak = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1052:
                    if (o[".google.api.fieldBehavior"] && o[".google.api.fieldBehavior"].length || (o[".google.api.fieldBehavior"] = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o[".google.api.fieldBehavior"].push(e.int32());
                    else o[".google.api.fieldBehavior"].push(e.int32());
                    break;
                case 1055:
                    o[".google.api.resourceReference"] = l.google.api.ResourceReference.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, T.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, T.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.ctype && e.hasOwnProperty("ctype")) switch(e.ctype){
            default:
                return "ctype: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.packed && e.hasOwnProperty("packed") && "boolean" != typeof e.packed) return "packed: boolean expected";
        if (null != e.jstype && e.hasOwnProperty("jstype")) switch(e.jstype){
            default:
                return "jstype: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.lazy && e.hasOwnProperty("lazy") && "boolean" != typeof e.lazy) return "lazy: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.weak && e.hasOwnProperty("weak") && "boolean" != typeof e.weak) return "weak: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t)if (n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t])) return "uninterpretedOption." + n;
        }
        if (null != e[".google.api.fieldBehavior"] && e.hasOwnProperty(".google.api.fieldBehavior")) {
            if (!Array.isArray(e[".google.api.fieldBehavior"])) return ".google.api.fieldBehavior: array expected";
            for(t = 0; t < e[".google.api.fieldBehavior"].length; ++t)switch(e[".google.api.fieldBehavior"][t]){
                default:
                    return ".google.api.fieldBehavior: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
            }
        }
        var n;
        if (null != e[".google.api.resourceReference"] && e.hasOwnProperty(".google.api.resourceReference") && (n = l.google.api.ResourceReference.verify(e[".google.api.resourceReference"]))) return ".google.api.resourceReference." + n;
        return null;
    }, T.fromObject = function(e) {
        if (e instanceof l.google.protobuf.FieldOptions) return e;
        var t = new l.google.protobuf.FieldOptions;
        switch(e.ctype){
            case "STRING":
            case 0:
                t.ctype = 0;
                break;
            case "CORD":
            case 1:
                t.ctype = 1;
                break;
            case "STRING_PIECE":
            case 2:
                t.ctype = 2;
        }
        switch(null != e.packed && (t.packed = Boolean(e.packed)), e.jstype){
            case "JS_NORMAL":
            case 0:
                t.jstype = 0;
                break;
            case "JS_STRING":
            case 1:
                t.jstype = 1;
                break;
            case "JS_NUMBER":
            case 2:
                t.jstype = 2;
        }
        if (null != e.lazy && (t.lazy = Boolean(e.lazy)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.weak && (t.weak = Boolean(e.weak)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        if (e[".google.api.fieldBehavior"]) {
            if (!Array.isArray(e[".google.api.fieldBehavior"])) throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
            t[".google.api.fieldBehavior"] = [];
            for(n = 0; n < e[".google.api.fieldBehavior"].length; ++n)switch(e[".google.api.fieldBehavior"][n]){
                default:
                case "FIELD_BEHAVIOR_UNSPECIFIED":
                case 0:
                    t[".google.api.fieldBehavior"][n] = 0;
                    break;
                case "OPTIONAL":
                case 1:
                    t[".google.api.fieldBehavior"][n] = 1;
                    break;
                case "REQUIRED":
                case 2:
                    t[".google.api.fieldBehavior"][n] = 2;
                    break;
                case "OUTPUT_ONLY":
                case 3:
                    t[".google.api.fieldBehavior"][n] = 3;
                    break;
                case "INPUT_ONLY":
                case 4:
                    t[".google.api.fieldBehavior"][n] = 4;
                    break;
                case "IMMUTABLE":
                case 5:
                    t[".google.api.fieldBehavior"][n] = 5;
            }
        }
        if (null != e[".google.api.resourceReference"]) {
            if ("object" != typeof e[".google.api.resourceReference"]) throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
            t[".google.api.resourceReference"] = l.google.api.ResourceReference.fromObject(e[".google.api.resourceReference"]);
        }
        return t;
    }, T.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = [], n[".google.api.fieldBehavior"] = []), t.defaults && (n.ctype = t.enums === String ? "STRING" : 0, n.packed = !1, n.deprecated = !1, n.lazy = !1, n.jstype = t.enums === String ? "JS_NORMAL" : 0, n.weak = !1, n[".google.api.resourceReference"] = null), null != e.ctype && e.hasOwnProperty("ctype") && (n.ctype = t.enums === String ? l.google.protobuf.FieldOptions.CType[e.ctype] : e.ctype), null != e.packed && e.hasOwnProperty("packed") && (n.packed = e.packed), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.lazy && e.hasOwnProperty("lazy") && (n.lazy = e.lazy), null != e.jstype && e.hasOwnProperty("jstype") && (n.jstype = t.enums === String ? l.google.protobuf.FieldOptions.JSType[e.jstype] : e.jstype), null != e.weak && e.hasOwnProperty("weak") && (n.weak = e.weak), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        if (e[".google.api.fieldBehavior"] && e[".google.api.fieldBehavior"].length) {
            n[".google.api.fieldBehavior"] = [];
            for(o = 0; o < e[".google.api.fieldBehavior"].length; ++o)n[".google.api.fieldBehavior"][o] = t.enums === String ? l.google.api.FieldBehavior[e[".google.api.fieldBehavior"][o]] : e[".google.api.fieldBehavior"][o];
        }
        return null != e[".google.api.resourceReference"] && e.hasOwnProperty(".google.api.resourceReference") && (n[".google.api.resourceReference"] = l.google.api.ResourceReference.toObject(e[".google.api.resourceReference"], t)), n;
    }, T.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, T.CType = (e = {}, (t = Object.create(e))[e[0] = "STRING"] = 0, t[e[1] = "CORD"] = 1, t[e[2] = "STRING_PIECE"] = 2, t), T.JSType = (e = {}, (t = Object.create(e))[e[0] = "JS_NORMAL"] = 0, t[e[1] = "JS_STRING"] = 1, t[e[2] = "JS_NUMBER"] = 2, t), T), n.OneofOptions = (Q.prototype.uninterpretedOption = p.emptyArray, Q.create = function(e) {
        return new Q(e);
    }, Q.encode = function(e, t) {
        if (t = t || i.create(), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, Q.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, Q.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.OneofOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 999 ? (o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, Q.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, Q.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, Q.fromObject = function(e) {
        if (e instanceof l.google.protobuf.OneofOptions) return e;
        var t = new l.google.protobuf.OneofOptions;
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, Q.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, Q.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, Q), n.EnumOptions = (E.prototype.allowAlias = !1, E.prototype.deprecated = !1, E.prototype.uninterpretedOption = p.emptyArray, E.create = function(e) {
        return new E(e);
    }, E.encode = function(e, t) {
        if (t = t || i.create(), null != e.allowAlias && Object.hasOwnProperty.call(e, "allowAlias") && t.uint32(16).bool(e.allowAlias), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, E.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, E.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.EnumOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 2:
                    o.allowAlias = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, E.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, E.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.allowAlias && e.hasOwnProperty("allowAlias") && "boolean" != typeof e.allowAlias) return "allowAlias: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, E.fromObject = function(e) {
        if (e instanceof l.google.protobuf.EnumOptions) return e;
        var t = new l.google.protobuf.EnumOptions;
        if (null != e.allowAlias && (t.allowAlias = Boolean(e.allowAlias)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, E.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.allowAlias = !1, n.deprecated = !1), null != e.allowAlias && e.hasOwnProperty("allowAlias") && (n.allowAlias = e.allowAlias), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, E.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, E), n.EnumValueOptions = (K.prototype.deprecated = !1, K.prototype.uninterpretedOption = p.emptyArray, K.create = function(e) {
        return new K(e);
    }, K.encode = function(e, t) {
        if (t = t || i.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(8).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, K.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, K.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.EnumValueOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, K.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, K.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, K.fromObject = function(e) {
        if (e instanceof l.google.protobuf.EnumValueOptions) return e;
        var t = new l.google.protobuf.EnumValueOptions;
        if (null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, K.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.deprecated = !1), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, K.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, K), n.ServiceOptions = (A.prototype.deprecated = !1, A.prototype.uninterpretedOption = p.emptyArray, A.prototype[".google.api.defaultHost"] = "", A.prototype[".google.api.oauthScopes"] = "", A.create = function(e) {
        return new A(e);
    }, A.encode = function(e, t) {
        if (t = t || i.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(264).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return null != e[".google.api.defaultHost"] && Object.hasOwnProperty.call(e, ".google.api.defaultHost") && t.uint32(8394).string(e[".google.api.defaultHost"]), null != e[".google.api.oauthScopes"] && Object.hasOwnProperty.call(e, ".google.api.oauthScopes") && t.uint32(8402).string(e[".google.api.oauthScopes"]), t;
    }, A.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, A.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.ServiceOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 33:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1049:
                    o[".google.api.defaultHost"] = e.string();
                    break;
                case 1050:
                    o[".google.api.oauthScopes"] = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, A.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, A.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null != e[".google.api.defaultHost"] && e.hasOwnProperty(".google.api.defaultHost") && !p.isString(e[".google.api.defaultHost"]) ? ".google.api.defaultHost: string expected" : null != e[".google.api.oauthScopes"] && e.hasOwnProperty(".google.api.oauthScopes") && !p.isString(e[".google.api.oauthScopes"]) ? ".google.api.oauthScopes: string expected" : null;
    }, A.fromObject = function(e) {
        if (e instanceof l.google.protobuf.ServiceOptions) return e;
        var t = new l.google.protobuf.ServiceOptions;
        if (null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return null != e[".google.api.defaultHost"] && (t[".google.api.defaultHost"] = String(e[".google.api.defaultHost"])), null != e[".google.api.oauthScopes"] && (t[".google.api.oauthScopes"] = String(e[".google.api.oauthScopes"])), t;
    }, A.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.deprecated = !1, n[".google.api.defaultHost"] = "", n[".google.api.oauthScopes"] = ""), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return null != e[".google.api.defaultHost"] && e.hasOwnProperty(".google.api.defaultHost") && (n[".google.api.defaultHost"] = e[".google.api.defaultHost"]), null != e[".google.api.oauthScopes"] && e.hasOwnProperty(".google.api.oauthScopes") && (n[".google.api.oauthScopes"] = e[".google.api.oauthScopes"]), n;
    }, A.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, A), n.MethodOptions = (N.prototype.deprecated = !1, N.prototype.idempotencyLevel = 0, N.prototype.uninterpretedOption = p.emptyArray, N.prototype[".google.api.http"] = null, N.prototype[".google.api.methodSignature"] = p.emptyArray, N.create = function(e) {
        return new N(e);
    }, N.encode = function(e, t) {
        if (t = t || i.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(264).bool(e.deprecated), null != e.idempotencyLevel && Object.hasOwnProperty.call(e, "idempotencyLevel") && t.uint32(272).int32(e.idempotencyLevel), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)l.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        if (null != e[".google.api.methodSignature"] && e[".google.api.methodSignature"].length) for(n = 0; n < e[".google.api.methodSignature"].length; ++n)t.uint32(8410).string(e[".google.api.methodSignature"][n]);
        return null != e[".google.api.http"] && Object.hasOwnProperty.call(e, ".google.api.http") && l.google.api.HttpRule.encode(e[".google.api.http"], t.uint32(578365826).fork()).ldelim(), t;
    }, N.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, N.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.MethodOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 33:
                    o.deprecated = e.bool();
                    break;
                case 34:
                    o.idempotencyLevel = e.int32();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(l.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 72295728:
                    o[".google.api.http"] = l.google.api.HttpRule.decode(e, e.uint32());
                    break;
                case 1051:
                    o[".google.api.methodSignature"] && o[".google.api.methodSignature"].length || (o[".google.api.methodSignature"] = []), o[".google.api.methodSignature"].push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, N.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, N.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.idempotencyLevel && e.hasOwnProperty("idempotencyLevel")) switch(e.idempotencyLevel){
            default:
                return "idempotencyLevel: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t)if (n = l.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t])) return "uninterpretedOption." + n;
        }
        var n;
        if (null != e[".google.api.http"] && e.hasOwnProperty(".google.api.http") && (n = l.google.api.HttpRule.verify(e[".google.api.http"]))) return ".google.api.http." + n;
        if (null != e[".google.api.methodSignature"] && e.hasOwnProperty(".google.api.methodSignature")) {
            if (!Array.isArray(e[".google.api.methodSignature"])) return ".google.api.methodSignature: array expected";
            for(t = 0; t < e[".google.api.methodSignature"].length; ++t)if (!p.isString(e[".google.api.methodSignature"][t])) return ".google.api.methodSignature: string[] expected";
        }
        return null;
    }, N.fromObject = function(e) {
        if (e instanceof l.google.protobuf.MethodOptions) return e;
        var t = new l.google.protobuf.MethodOptions;
        switch(null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.idempotencyLevel){
            case "IDEMPOTENCY_UNKNOWN":
            case 0:
                t.idempotencyLevel = 0;
                break;
            case "NO_SIDE_EFFECTS":
            case 1:
                t.idempotencyLevel = 1;
                break;
            case "IDEMPOTENT":
            case 2:
                t.idempotencyLevel = 2;
        }
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = l.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        if (null != e[".google.api.http"]) {
            if ("object" != typeof e[".google.api.http"]) throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
            t[".google.api.http"] = l.google.api.HttpRule.fromObject(e[".google.api.http"]);
        }
        if (e[".google.api.methodSignature"]) {
            if (!Array.isArray(e[".google.api.methodSignature"])) throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
            t[".google.api.methodSignature"] = [];
            for(n = 0; n < e[".google.api.methodSignature"].length; ++n)t[".google.api.methodSignature"][n] = String(e[".google.api.methodSignature"][n]);
        }
        return t;
    }, N.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = [], n[".google.api.methodSignature"] = []), t.defaults && (n.deprecated = !1, n.idempotencyLevel = t.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0, n[".google.api.http"] = null), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.idempotencyLevel && e.hasOwnProperty("idempotencyLevel") && (n.idempotencyLevel = t.enums === String ? l.google.protobuf.MethodOptions.IdempotencyLevel[e.idempotencyLevel] : e.idempotencyLevel), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = l.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        if (e[".google.api.methodSignature"] && e[".google.api.methodSignature"].length) {
            n[".google.api.methodSignature"] = [];
            for(o = 0; o < e[".google.api.methodSignature"].length; ++o)n[".google.api.methodSignature"][o] = e[".google.api.methodSignature"][o];
        }
        return null != e[".google.api.http"] && e.hasOwnProperty(".google.api.http") && (n[".google.api.http"] = l.google.api.HttpRule.toObject(e[".google.api.http"], t)), n;
    }, N.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, N.IdempotencyLevel = (e = {}, (t = Object.create(e))[e[0] = "IDEMPOTENCY_UNKNOWN"] = 0, t[e[1] = "NO_SIDE_EFFECTS"] = 1, t[e[2] = "IDEMPOTENT"] = 2, t), N), n.UninterpretedOption = (R.prototype.name = p.emptyArray, R.prototype.identifierValue = "", R.prototype.positiveIntValue = p.Long ? p.Long.fromBits(0, 0, !0) : 0, R.prototype.negativeIntValue = p.Long ? p.Long.fromBits(0, 0, !1) : 0, R.prototype.doubleValue = 0, R.prototype.stringValue = p.newBuffer([]), R.prototype.aggregateValue = "", R.create = function(e) {
        return new R(e);
    }, R.encode = function(e, t) {
        if (t = t || i.create(), null != e.name && e.name.length) for(var n = 0; n < e.name.length; ++n)l.google.protobuf.UninterpretedOption.NamePart.encode(e.name[n], t.uint32(18).fork()).ldelim();
        return null != e.identifierValue && Object.hasOwnProperty.call(e, "identifierValue") && t.uint32(26).string(e.identifierValue), null != e.positiveIntValue && Object.hasOwnProperty.call(e, "positiveIntValue") && t.uint32(32).uint64(e.positiveIntValue), null != e.negativeIntValue && Object.hasOwnProperty.call(e, "negativeIntValue") && t.uint32(40).int64(e.negativeIntValue), null != e.doubleValue && Object.hasOwnProperty.call(e, "doubleValue") && t.uint32(49).double(e.doubleValue), null != e.stringValue && Object.hasOwnProperty.call(e, "stringValue") && t.uint32(58).bytes(e.stringValue), null != e.aggregateValue && Object.hasOwnProperty.call(e, "aggregateValue") && t.uint32(66).string(e.aggregateValue), t;
    }, R.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, R.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.UninterpretedOption; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 2:
                    o.name && o.name.length || (o.name = []), o.name.push(l.google.protobuf.UninterpretedOption.NamePart.decode(e, e.uint32()));
                    break;
                case 3:
                    o.identifierValue = e.string();
                    break;
                case 4:
                    o.positiveIntValue = e.uint64();
                    break;
                case 5:
                    o.negativeIntValue = e.int64();
                    break;
                case 6:
                    o.doubleValue = e.double();
                    break;
                case 7:
                    o.stringValue = e.bytes();
                    break;
                case 8:
                    o.aggregateValue = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, R.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, R.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name")) {
            if (!Array.isArray(e.name)) return "name: array expected";
            for(var t = 0; t < e.name.length; ++t){
                var n = l.google.protobuf.UninterpretedOption.NamePart.verify(e.name[t]);
                if (n) return "name." + n;
            }
        }
        return null != e.identifierValue && e.hasOwnProperty("identifierValue") && !p.isString(e.identifierValue) ? "identifierValue: string expected" : null != e.positiveIntValue && e.hasOwnProperty("positiveIntValue") && !(p.isInteger(e.positiveIntValue) || e.positiveIntValue && p.isInteger(e.positiveIntValue.low) && p.isInteger(e.positiveIntValue.high)) ? "positiveIntValue: integer|Long expected" : null != e.negativeIntValue && e.hasOwnProperty("negativeIntValue") && !(p.isInteger(e.negativeIntValue) || e.negativeIntValue && p.isInteger(e.negativeIntValue.low) && p.isInteger(e.negativeIntValue.high)) ? "negativeIntValue: integer|Long expected" : null != e.doubleValue && e.hasOwnProperty("doubleValue") && "number" != typeof e.doubleValue ? "doubleValue: number expected" : null != e.stringValue && e.hasOwnProperty("stringValue") && !(e.stringValue && "number" == typeof e.stringValue.length || p.isString(e.stringValue)) ? "stringValue: buffer expected" : null != e.aggregateValue && e.hasOwnProperty("aggregateValue") && !p.isString(e.aggregateValue) ? "aggregateValue: string expected" : null;
    }, R.fromObject = function(e) {
        if (e instanceof l.google.protobuf.UninterpretedOption) return e;
        var t = new l.google.protobuf.UninterpretedOption;
        if (e.name) {
            if (!Array.isArray(e.name)) throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
            t.name = [];
            for(var n = 0; n < e.name.length; ++n){
                if ("object" != typeof e.name[n]) throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                t.name[n] = l.google.protobuf.UninterpretedOption.NamePart.fromObject(e.name[n]);
            }
        }
        return null != e.identifierValue && (t.identifierValue = String(e.identifierValue)), null != e.positiveIntValue && (p.Long ? (t.positiveIntValue = p.Long.fromValue(e.positiveIntValue)).unsigned = !0 : "string" == typeof e.positiveIntValue ? t.positiveIntValue = parseInt(e.positiveIntValue, 10) : "number" == typeof e.positiveIntValue ? t.positiveIntValue = e.positiveIntValue : "object" == typeof e.positiveIntValue && (t.positiveIntValue = new p.LongBits(e.positiveIntValue.low >>> 0, e.positiveIntValue.high >>> 0).toNumber(!0))), null != e.negativeIntValue && (p.Long ? (t.negativeIntValue = p.Long.fromValue(e.negativeIntValue)).unsigned = !1 : "string" == typeof e.negativeIntValue ? t.negativeIntValue = parseInt(e.negativeIntValue, 10) : "number" == typeof e.negativeIntValue ? t.negativeIntValue = e.negativeIntValue : "object" == typeof e.negativeIntValue && (t.negativeIntValue = new p.LongBits(e.negativeIntValue.low >>> 0, e.negativeIntValue.high >>> 0).toNumber())), null != e.doubleValue && (t.doubleValue = Number(e.doubleValue)), null != e.stringValue && ("string" == typeof e.stringValue ? p.base64.decode(e.stringValue, t.stringValue = p.newBuffer(p.base64.length(e.stringValue)), 0) : e.stringValue.length && (t.stringValue = e.stringValue)), null != e.aggregateValue && (t.aggregateValue = String(e.aggregateValue)), t;
    }, R.toObject = function(e, t) {
        var n, o = {};
        if (((t = t || {}).arrays || t.defaults) && (o.name = []), t.defaults && (o.identifierValue = "", p.Long ? (n = new p.Long(0, 0, !0), o.positiveIntValue = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.positiveIntValue = t.longs === String ? "0" : 0, p.Long ? (n = new p.Long(0, 0, !1), o.negativeIntValue = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.negativeIntValue = t.longs === String ? "0" : 0, o.doubleValue = 0, t.bytes === String ? o.stringValue = "" : (o.stringValue = [], t.bytes !== Array && (o.stringValue = p.newBuffer(o.stringValue))), o.aggregateValue = ""), e.name && e.name.length) {
            o.name = [];
            for(var r = 0; r < e.name.length; ++r)o.name[r] = l.google.protobuf.UninterpretedOption.NamePart.toObject(e.name[r], t);
        }
        return null != e.identifierValue && e.hasOwnProperty("identifierValue") && (o.identifierValue = e.identifierValue), null != e.positiveIntValue && e.hasOwnProperty("positiveIntValue") && ("number" == typeof e.positiveIntValue ? o.positiveIntValue = t.longs === String ? String(e.positiveIntValue) : e.positiveIntValue : o.positiveIntValue = t.longs === String ? p.Long.prototype.toString.call(e.positiveIntValue) : t.longs === Number ? new p.LongBits(e.positiveIntValue.low >>> 0, e.positiveIntValue.high >>> 0).toNumber(!0) : e.positiveIntValue), null != e.negativeIntValue && e.hasOwnProperty("negativeIntValue") && ("number" == typeof e.negativeIntValue ? o.negativeIntValue = t.longs === String ? String(e.negativeIntValue) : e.negativeIntValue : o.negativeIntValue = t.longs === String ? p.Long.prototype.toString.call(e.negativeIntValue) : t.longs === Number ? new p.LongBits(e.negativeIntValue.low >>> 0, e.negativeIntValue.high >>> 0).toNumber() : e.negativeIntValue), null != e.doubleValue && e.hasOwnProperty("doubleValue") && (o.doubleValue = t.json && !isFinite(e.doubleValue) ? String(e.doubleValue) : e.doubleValue), null != e.stringValue && e.hasOwnProperty("stringValue") && (o.stringValue = t.bytes === String ? p.base64.encode(e.stringValue, 0, e.stringValue.length) : t.bytes === Array ? Array.prototype.slice.call(e.stringValue) : e.stringValue), null != e.aggregateValue && e.hasOwnProperty("aggregateValue") && (o.aggregateValue = e.aggregateValue), o;
    }, R.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, R.NamePart = (Z.prototype.namePart = "", Z.prototype.isExtension = !1, Z.create = function(e) {
        return new Z(e);
    }, Z.encode = function(e, t) {
        return (t = t || i.create()).uint32(10).string(e.namePart), t.uint32(16).bool(e.isExtension), t;
    }, Z.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, Z.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.UninterpretedOption.NamePart; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.namePart = e.string();
                    break;
                case 2:
                    o.isExtension = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        if (!o.hasOwnProperty("namePart")) throw p.ProtocolError("missing required 'namePart'", {
            instance: o
        });
        if (o.hasOwnProperty("isExtension")) return o;
        throw p.ProtocolError("missing required 'isExtension'", {
            instance: o
        });
    }, Z.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, Z.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : p.isString(e.namePart) ? "boolean" != typeof e.isExtension ? "isExtension: boolean expected" : null : "namePart: string expected";
    }, Z.fromObject = function(e) {
        var t;
        return e instanceof l.google.protobuf.UninterpretedOption.NamePart ? e : (t = new l.google.protobuf.UninterpretedOption.NamePart, null != e.namePart && (t.namePart = String(e.namePart)), null != e.isExtension && (t.isExtension = Boolean(e.isExtension)), t);
    }, Z.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.namePart = "", n.isExtension = !1), null != e.namePart && e.hasOwnProperty("namePart") && (n.namePart = e.namePart), null != e.isExtension && e.hasOwnProperty("isExtension") && (n.isExtension = e.isExtension), n;
    }, Z.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, Z), R), n.SourceCodeInfo = ($.prototype.location = p.emptyArray, $.create = function(e) {
        return new $(e);
    }, $.encode = function(e, t) {
        if (t = t || i.create(), null != e.location && e.location.length) for(var n = 0; n < e.location.length; ++n)l.google.protobuf.SourceCodeInfo.Location.encode(e.location[n], t.uint32(10).fork()).ldelim();
        return t;
    }, $.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, $.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.SourceCodeInfo; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.location && o.location.length || (o.location = []), o.location.push(l.google.protobuf.SourceCodeInfo.Location.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, $.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, $.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.location && e.hasOwnProperty("location")) {
            if (!Array.isArray(e.location)) return "location: array expected";
            for(var t = 0; t < e.location.length; ++t){
                var n = l.google.protobuf.SourceCodeInfo.Location.verify(e.location[t]);
                if (n) return "location." + n;
            }
        }
        return null;
    }, $.fromObject = function(e) {
        if (e instanceof l.google.protobuf.SourceCodeInfo) return e;
        var t = new l.google.protobuf.SourceCodeInfo;
        if (e.location) {
            if (!Array.isArray(e.location)) throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
            t.location = [];
            for(var n = 0; n < e.location.length; ++n){
                if ("object" != typeof e.location[n]) throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                t.location[n] = l.google.protobuf.SourceCodeInfo.Location.fromObject(e.location[n]);
            }
        }
        return t;
    }, $.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.location = []), e.location && e.location.length) {
            n.location = [];
            for(var o = 0; o < e.location.length; ++o)n.location[o] = l.google.protobuf.SourceCodeInfo.Location.toObject(e.location[o], t);
        }
        return n;
    }, $.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, $.Location = (I.prototype.path = p.emptyArray, I.prototype.span = p.emptyArray, I.prototype.leadingComments = "", I.prototype.trailingComments = "", I.prototype.leadingDetachedComments = p.emptyArray, I.create = function(e) {
        return new I(e);
    }, I.encode = function(e, t) {
        if (t = t || i.create(), null != e.path && e.path.length) {
            t.uint32(10).fork();
            for(var n = 0; n < e.path.length; ++n)t.int32(e.path[n]);
            t.ldelim();
        }
        if (null != e.span && e.span.length) {
            t.uint32(18).fork();
            for(n = 0; n < e.span.length; ++n)t.int32(e.span[n]);
            t.ldelim();
        }
        if (null != e.leadingComments && Object.hasOwnProperty.call(e, "leadingComments") && t.uint32(26).string(e.leadingComments), null != e.trailingComments && Object.hasOwnProperty.call(e, "trailingComments") && t.uint32(34).string(e.trailingComments), null != e.leadingDetachedComments && e.leadingDetachedComments.length) for(n = 0; n < e.leadingDetachedComments.length; ++n)t.uint32(50).string(e.leadingDetachedComments[n]);
        return t;
    }, I.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, I.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.SourceCodeInfo.Location; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    if (o.path && o.path.length || (o.path = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.path.push(e.int32());
                    else o.path.push(e.int32());
                    break;
                case 2:
                    if (o.span && o.span.length || (o.span = []), 2 == (7 & r)) for(i = e.uint32() + e.pos; e.pos < i;)o.span.push(e.int32());
                    else o.span.push(e.int32());
                    break;
                case 3:
                    o.leadingComments = e.string();
                    break;
                case 4:
                    o.trailingComments = e.string();
                    break;
                case 6:
                    o.leadingDetachedComments && o.leadingDetachedComments.length || (o.leadingDetachedComments = []), o.leadingDetachedComments.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, I.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, I.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.path && e.hasOwnProperty("path")) {
            if (!Array.isArray(e.path)) return "path: array expected";
            for(var t = 0; t < e.path.length; ++t)if (!p.isInteger(e.path[t])) return "path: integer[] expected";
        }
        if (null != e.span && e.hasOwnProperty("span")) {
            if (!Array.isArray(e.span)) return "span: array expected";
            for(t = 0; t < e.span.length; ++t)if (!p.isInteger(e.span[t])) return "span: integer[] expected";
        }
        if (null != e.leadingComments && e.hasOwnProperty("leadingComments") && !p.isString(e.leadingComments)) return "leadingComments: string expected";
        if (null != e.trailingComments && e.hasOwnProperty("trailingComments") && !p.isString(e.trailingComments)) return "trailingComments: string expected";
        if (null != e.leadingDetachedComments && e.hasOwnProperty("leadingDetachedComments")) {
            if (!Array.isArray(e.leadingDetachedComments)) return "leadingDetachedComments: array expected";
            for(t = 0; t < e.leadingDetachedComments.length; ++t)if (!p.isString(e.leadingDetachedComments[t])) return "leadingDetachedComments: string[] expected";
        }
        return null;
    }, I.fromObject = function(e) {
        if (e instanceof l.google.protobuf.SourceCodeInfo.Location) return e;
        var t = new l.google.protobuf.SourceCodeInfo.Location;
        if (e.path) {
            if (!Array.isArray(e.path)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
            t.path = [];
            for(var n = 0; n < e.path.length; ++n)t.path[n] = 0 | e.path[n];
        }
        if (e.span) {
            if (!Array.isArray(e.span)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
            t.span = [];
            for(n = 0; n < e.span.length; ++n)t.span[n] = 0 | e.span[n];
        }
        if (null != e.leadingComments && (t.leadingComments = String(e.leadingComments)), null != e.trailingComments && (t.trailingComments = String(e.trailingComments)), e.leadingDetachedComments) {
            if (!Array.isArray(e.leadingDetachedComments)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
            t.leadingDetachedComments = [];
            for(n = 0; n < e.leadingDetachedComments.length; ++n)t.leadingDetachedComments[n] = String(e.leadingDetachedComments[n]);
        }
        return t;
    }, I.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.path = [], n.span = [], n.leadingDetachedComments = []), t.defaults && (n.leadingComments = "", n.trailingComments = ""), e.path && e.path.length) {
            n.path = [];
            for(var o = 0; o < e.path.length; ++o)n.path[o] = e.path[o];
        }
        if (e.span && e.span.length) {
            n.span = [];
            for(o = 0; o < e.span.length; ++o)n.span[o] = e.span[o];
        }
        if (null != e.leadingComments && e.hasOwnProperty("leadingComments") && (n.leadingComments = e.leadingComments), null != e.trailingComments && e.hasOwnProperty("trailingComments") && (n.trailingComments = e.trailingComments), e.leadingDetachedComments && e.leadingDetachedComments.length) {
            n.leadingDetachedComments = [];
            for(o = 0; o < e.leadingDetachedComments.length; ++o)n.leadingDetachedComments[o] = e.leadingDetachedComments[o];
        }
        return n;
    }, I.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, I), $), n.GeneratedCodeInfo = (ee.prototype.annotation = p.emptyArray, ee.create = function(e) {
        return new ee(e);
    }, ee.encode = function(e, t) {
        if (t = t || i.create(), null != e.annotation && e.annotation.length) for(var n = 0; n < e.annotation.length; ++n)l.google.protobuf.GeneratedCodeInfo.Annotation.encode(e.annotation[n], t.uint32(10).fork()).ldelim();
        return t;
    }, ee.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, ee.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.GeneratedCodeInfo; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.annotation && o.annotation.length || (o.annotation = []), o.annotation.push(l.google.protobuf.GeneratedCodeInfo.Annotation.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, ee.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, ee.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.annotation && e.hasOwnProperty("annotation")) {
            if (!Array.isArray(e.annotation)) return "annotation: array expected";
            for(var t = 0; t < e.annotation.length; ++t){
                var n = l.google.protobuf.GeneratedCodeInfo.Annotation.verify(e.annotation[t]);
                if (n) return "annotation." + n;
            }
        }
        return null;
    }, ee.fromObject = function(e) {
        if (e instanceof l.google.protobuf.GeneratedCodeInfo) return e;
        var t = new l.google.protobuf.GeneratedCodeInfo;
        if (e.annotation) {
            if (!Array.isArray(e.annotation)) throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
            t.annotation = [];
            for(var n = 0; n < e.annotation.length; ++n){
                if ("object" != typeof e.annotation[n]) throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                t.annotation[n] = l.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(e.annotation[n]);
            }
        }
        return t;
    }, ee.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.annotation = []), e.annotation && e.annotation.length) {
            n.annotation = [];
            for(var o = 0; o < e.annotation.length; ++o)n.annotation[o] = l.google.protobuf.GeneratedCodeInfo.Annotation.toObject(e.annotation[o], t);
        }
        return n;
    }, ee.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, ee.Annotation = (C.prototype.path = p.emptyArray, C.prototype.sourceFile = "", C.prototype.begin = 0, C.prototype.end = 0, C.create = function(e) {
        return new C(e);
    }, C.encode = function(e, t) {
        if (t = t || i.create(), null != e.path && e.path.length) {
            t.uint32(10).fork();
            for(var n = 0; n < e.path.length; ++n)t.int32(e.path[n]);
            t.ldelim();
        }
        return null != e.sourceFile && Object.hasOwnProperty.call(e, "sourceFile") && t.uint32(18).string(e.sourceFile), null != e.begin && Object.hasOwnProperty.call(e, "begin") && t.uint32(24).int32(e.begin), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(32).int32(e.end), t;
    }, C.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, C.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.protobuf.GeneratedCodeInfo.Annotation; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    if (o.path && o.path.length || (o.path = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.path.push(e.int32());
                    else o.path.push(e.int32());
                    break;
                case 2:
                    o.sourceFile = e.string();
                    break;
                case 3:
                    o.begin = e.int32();
                    break;
                case 4:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, C.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, C.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.path && e.hasOwnProperty("path")) {
            if (!Array.isArray(e.path)) return "path: array expected";
            for(var t = 0; t < e.path.length; ++t)if (!p.isInteger(e.path[t])) return "path: integer[] expected";
        }
        return null != e.sourceFile && e.hasOwnProperty("sourceFile") && !p.isString(e.sourceFile) ? "sourceFile: string expected" : null != e.begin && e.hasOwnProperty("begin") && !p.isInteger(e.begin) ? "begin: integer expected" : null != e.end && e.hasOwnProperty("end") && !p.isInteger(e.end) ? "end: integer expected" : null;
    }, C.fromObject = function(e) {
        if (e instanceof l.google.protobuf.GeneratedCodeInfo.Annotation) return e;
        var t = new l.google.protobuf.GeneratedCodeInfo.Annotation;
        if (e.path) {
            if (!Array.isArray(e.path)) throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
            t.path = [];
            for(var n = 0; n < e.path.length; ++n)t.path[n] = 0 | e.path[n];
        }
        return null != e.sourceFile && (t.sourceFile = String(e.sourceFile)), null != e.begin && (t.begin = 0 | e.begin), null != e.end && (t.end = 0 | e.end), t;
    }, C.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.path = []), t.defaults && (n.sourceFile = "", n.begin = 0, n.end = 0), e.path && e.path.length) {
            n.path = [];
            for(var o = 0; o < e.path.length; ++o)n.path[o] = e.path[o];
        }
        return null != e.sourceFile && e.hasOwnProperty("sourceFile") && (n.sourceFile = e.sourceFile), null != e.begin && e.hasOwnProperty("begin") && (n.begin = e.begin), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, C.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, C), ee), n), F.type = ((r = {}).Expr = (V.prototype.expression = "", V.prototype.title = "", V.prototype.description = "", V.prototype.location = "", V.create = function(e) {
        return new V(e);
    }, V.encode = function(e, t) {
        return t = t || i.create(), null != e.expression && Object.hasOwnProperty.call(e, "expression") && t.uint32(10).string(e.expression), null != e.title && Object.hasOwnProperty.call(e, "title") && t.uint32(18).string(e.title), null != e.description && Object.hasOwnProperty.call(e, "description") && t.uint32(26).string(e.description), null != e.location && Object.hasOwnProperty.call(e, "location") && t.uint32(34).string(e.location), t;
    }, V.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, V.decode = function(e, t) {
        e instanceof a || (e = a.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new l.google.type.Expr; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.expression = e.string();
                    break;
                case 2:
                    o.title = e.string();
                    break;
                case 3:
                    o.description = e.string();
                    break;
                case 4:
                    o.location = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, V.decodeDelimited = function(e) {
        return e instanceof a || (e = new a(e)), this.decode(e, e.uint32());
    }, V.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.expression && e.hasOwnProperty("expression") && !p.isString(e.expression) ? "expression: string expected" : null != e.title && e.hasOwnProperty("title") && !p.isString(e.title) ? "title: string expected" : null != e.description && e.hasOwnProperty("description") && !p.isString(e.description) ? "description: string expected" : null != e.location && e.hasOwnProperty("location") && !p.isString(e.location) ? "location: string expected" : null;
    }, V.fromObject = function(e) {
        var t;
        return e instanceof l.google.type.Expr ? e : (t = new l.google.type.Expr, null != e.expression && (t.expression = String(e.expression)), null != e.title && (t.title = String(e.title)), null != e.description && (t.description = String(e.description)), null != e.location && (t.location = String(e.location)), t);
    }, V.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.expression = "", n.title = "", n.description = "", n.location = ""), null != e.expression && e.hasOwnProperty("expression") && (n.expression = e.expression), null != e.title && e.hasOwnProperty("title") && (n.title = e.title), null != e.description && e.hasOwnProperty("description") && (n.description = e.description), null != e.location && e.hasOwnProperty("location") && (n.location = e.location), n;
    }, V.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, V), r), F), l;
});
}}),
"[project]/node_modules/google-gax/build/protos/locations.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
((e)=>{
    "function" == typeof define && define.amd ? ((r)=>r !== undefined && __turbopack_context__.v(r))(e(__turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)"))) : "function" == ("TURBOPACK compile-time value", "function") && "object" == ("TURBOPACK compile-time value", "object") && module && module.exports && (module.exports = e(__turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)")));
})(function(o) {
    var e, t, n, F, s = o.Reader, r = o.Writer, u = o.util, c = o.roots.locations_protos || (o.roots.locations_protos = {});
    function L(e, t, n) {
        o.rpc.Service.call(this, e, t, n);
    }
    function i(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function a(e) {
        if (this.locations = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function G(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function p(e) {
        if (this.labels = {}, e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function l(e) {
        if (this.rules = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function d(e) {
        if (this.additionalBindings = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function g(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function B(e) {
        if (this.file = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function f(e) {
        if (this.dependency = [], this.publicDependency = [], this.weakDependency = [], this.messageType = [], this.enumType = [], this.service = [], this.extension = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function y(e) {
        if (this.field = [], this.extension = [], this.nestedType = [], this.enumType = [], this.extensionRange = [], this.oneofDecl = [], this.reservedRange = [], this.reservedName = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function h(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function b(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function U(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function O(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function m(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function v(e) {
        if (this.value = [], this.reservedRange = [], this.reservedName = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function P(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function w(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function j(e) {
        if (this.method = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function x(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function S(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function k(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function D(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function M(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function T(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function E(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function A(e) {
        if (this.uninterpretedOption = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function N(e) {
        if (this.uninterpretedOption = [], this[".google.api.methodSignature"] = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function I(e) {
        if (this.name = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function R(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function _(e) {
        if (this.location = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function C(e) {
        if (this.path = [], this.span = [], this.leadingDetachedComments = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function J(e) {
        if (this.annotation = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function V(e) {
        if (this.path = [], e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    function H(e) {
        if (e) for(var t = Object.keys(e), n = 0; n < t.length; ++n)null != e[t[n]] && (this[t[n]] = e[t[n]]);
    }
    return c.google = ((F = {}).cloud = ((n = {}).location = ((e = {}).Locations = (((L.prototype = Object.create(o.rpc.Service.prototype)).constructor = L).create = function(e, t, n) {
        return new this(e, t, n);
    }, Object.defineProperty(L.prototype.listLocations = function e(t, n) {
        return this.rpcCall(e, c.google.cloud.location.ListLocationsRequest, c.google.cloud.location.ListLocationsResponse, t, n);
    }, "name", {
        value: "ListLocations"
    }), Object.defineProperty(L.prototype.getLocation = function e(t, n) {
        return this.rpcCall(e, c.google.cloud.location.GetLocationRequest, c.google.cloud.location.Location, t, n);
    }, "name", {
        value: "GetLocation"
    }), L), e.ListLocationsRequest = (i.prototype.name = "", i.prototype.filter = "", i.prototype.pageSize = 0, i.prototype.pageToken = "", i.create = function(e) {
        return new i(e);
    }, i.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.filter && Object.hasOwnProperty.call(e, "filter") && t.uint32(18).string(e.filter), null != e.pageSize && Object.hasOwnProperty.call(e, "pageSize") && t.uint32(24).int32(e.pageSize), null != e.pageToken && Object.hasOwnProperty.call(e, "pageToken") && t.uint32(34).string(e.pageToken), t;
    }, i.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, i.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.cloud.location.ListLocationsRequest; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.filter = e.string();
                    break;
                case 3:
                    o.pageSize = e.int32();
                    break;
                case 4:
                    o.pageToken = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, i.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, i.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.name && e.hasOwnProperty("name") && !u.isString(e.name) ? "name: string expected" : null != e.filter && e.hasOwnProperty("filter") && !u.isString(e.filter) ? "filter: string expected" : null != e.pageSize && e.hasOwnProperty("pageSize") && !u.isInteger(e.pageSize) ? "pageSize: integer expected" : null != e.pageToken && e.hasOwnProperty("pageToken") && !u.isString(e.pageToken) ? "pageToken: string expected" : null;
    }, i.fromObject = function(e) {
        var t;
        return e instanceof c.google.cloud.location.ListLocationsRequest ? e : (t = new c.google.cloud.location.ListLocationsRequest, null != e.name && (t.name = String(e.name)), null != e.filter && (t.filter = String(e.filter)), null != e.pageSize && (t.pageSize = 0 | e.pageSize), null != e.pageToken && (t.pageToken = String(e.pageToken)), t);
    }, i.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.filter = "", n.pageSize = 0, n.pageToken = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.filter && e.hasOwnProperty("filter") && (n.filter = e.filter), null != e.pageSize && e.hasOwnProperty("pageSize") && (n.pageSize = e.pageSize), null != e.pageToken && e.hasOwnProperty("pageToken") && (n.pageToken = e.pageToken), n;
    }, i.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, i), e.ListLocationsResponse = (a.prototype.locations = u.emptyArray, a.prototype.nextPageToken = "", a.create = function(e) {
        return new a(e);
    }, a.encode = function(e, t) {
        if (t = t || r.create(), null != e.locations && e.locations.length) for(var n = 0; n < e.locations.length; ++n)c.google.cloud.location.Location.encode(e.locations[n], t.uint32(10).fork()).ldelim();
        return null != e.nextPageToken && Object.hasOwnProperty.call(e, "nextPageToken") && t.uint32(18).string(e.nextPageToken), t;
    }, a.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, a.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.cloud.location.ListLocationsResponse; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.locations && o.locations.length || (o.locations = []), o.locations.push(c.google.cloud.location.Location.decode(e, e.uint32()));
                    break;
                case 2:
                    o.nextPageToken = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, a.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, a.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.locations && e.hasOwnProperty("locations")) {
            if (!Array.isArray(e.locations)) return "locations: array expected";
            for(var t = 0; t < e.locations.length; ++t){
                var n = c.google.cloud.location.Location.verify(e.locations[t]);
                if (n) return "locations." + n;
            }
        }
        return null != e.nextPageToken && e.hasOwnProperty("nextPageToken") && !u.isString(e.nextPageToken) ? "nextPageToken: string expected" : null;
    }, a.fromObject = function(e) {
        if (e instanceof c.google.cloud.location.ListLocationsResponse) return e;
        var t = new c.google.cloud.location.ListLocationsResponse;
        if (e.locations) {
            if (!Array.isArray(e.locations)) throw TypeError(".google.cloud.location.ListLocationsResponse.locations: array expected");
            t.locations = [];
            for(var n = 0; n < e.locations.length; ++n){
                if ("object" != typeof e.locations[n]) throw TypeError(".google.cloud.location.ListLocationsResponse.locations: object expected");
                t.locations[n] = c.google.cloud.location.Location.fromObject(e.locations[n]);
            }
        }
        return null != e.nextPageToken && (t.nextPageToken = String(e.nextPageToken)), t;
    }, a.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.locations = []), t.defaults && (n.nextPageToken = ""), e.locations && e.locations.length) {
            n.locations = [];
            for(var o = 0; o < e.locations.length; ++o)n.locations[o] = c.google.cloud.location.Location.toObject(e.locations[o], t);
        }
        return null != e.nextPageToken && e.hasOwnProperty("nextPageToken") && (n.nextPageToken = e.nextPageToken), n;
    }, a.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, a), e.GetLocationRequest = (G.prototype.name = "", G.create = function(e) {
        return new G(e);
    }, G.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), t;
    }, G.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, G.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.cloud.location.GetLocationRequest; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? o.name = e.string() : e.skipType(7 & r);
        }
        return o;
    }, G.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, G.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.name && e.hasOwnProperty("name") && !u.isString(e.name) ? "name: string expected" : null;
    }, G.fromObject = function(e) {
        var t;
        return e instanceof c.google.cloud.location.GetLocationRequest ? e : (t = new c.google.cloud.location.GetLocationRequest, null != e.name && (t.name = String(e.name)), t);
    }, G.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), n;
    }, G.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, G), e.Location = (p.prototype.name = "", p.prototype.locationId = "", p.prototype.displayName = "", p.prototype.labels = u.emptyObject, p.prototype.metadata = null, p.create = function(e) {
        return new p(e);
    }, p.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.labels && Object.hasOwnProperty.call(e, "labels")) for(var n = Object.keys(e.labels), o = 0; o < n.length; ++o)t.uint32(18).fork().uint32(10).string(n[o]).uint32(18).string(e.labels[n[o]]).ldelim();
        return null != e.metadata && Object.hasOwnProperty.call(e, "metadata") && c.google.protobuf.Any.encode(e.metadata, t.uint32(26).fork()).ldelim(), null != e.locationId && Object.hasOwnProperty.call(e, "locationId") && t.uint32(34).string(e.locationId), null != e.displayName && Object.hasOwnProperty.call(e, "displayName") && t.uint32(42).string(e.displayName), t;
    }, p.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, p.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.cloud.location.Location; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 4:
                    o.locationId = e.string();
                    break;
                case 5:
                    o.displayName = e.string();
                    break;
                case 2:
                    o.labels === u.emptyObject && (o.labels = {});
                    for(var i = e.uint32() + e.pos, a = "", p = ""; e.pos < i;){
                        var l = e.uint32();
                        switch(l >>> 3){
                            case 1:
                                a = e.string();
                                break;
                            case 2:
                                p = e.string();
                                break;
                            default:
                                e.skipType(7 & l);
                        }
                    }
                    o.labels[a] = p;
                    break;
                case 3:
                    o.metadata = c.google.protobuf.Any.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, p.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, p.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.locationId && e.hasOwnProperty("locationId") && !u.isString(e.locationId)) return "locationId: string expected";
        if (null != e.displayName && e.hasOwnProperty("displayName") && !u.isString(e.displayName)) return "displayName: string expected";
        if (null != e.labels && e.hasOwnProperty("labels")) {
            if (!u.isObject(e.labels)) return "labels: object expected";
            for(var t = Object.keys(e.labels), n = 0; n < t.length; ++n)if (!u.isString(e.labels[t[n]])) return "labels: string{k:string} expected";
        }
        if (null != e.metadata && e.hasOwnProperty("metadata")) {
            var o = c.google.protobuf.Any.verify(e.metadata);
            if (o) return "metadata." + o;
        }
        return null;
    }, p.fromObject = function(e) {
        if (e instanceof c.google.cloud.location.Location) return e;
        var t = new c.google.cloud.location.Location;
        if (null != e.name && (t.name = String(e.name)), null != e.locationId && (t.locationId = String(e.locationId)), null != e.displayName && (t.displayName = String(e.displayName)), e.labels) {
            if ("object" != typeof e.labels) throw TypeError(".google.cloud.location.Location.labels: object expected");
            t.labels = {};
            for(var n = Object.keys(e.labels), o = 0; o < n.length; ++o)t.labels[n[o]] = String(e.labels[n[o]]);
        }
        if (null != e.metadata) {
            if ("object" != typeof e.metadata) throw TypeError(".google.cloud.location.Location.metadata: object expected");
            t.metadata = c.google.protobuf.Any.fromObject(e.metadata);
        }
        return t;
    }, p.toObject = function(e, t) {
        var n, o = {};
        if (((t = t || {}).objects || t.defaults) && (o.labels = {}), t.defaults && (o.name = "", o.metadata = null, o.locationId = "", o.displayName = ""), null != e.name && e.hasOwnProperty("name") && (o.name = e.name), e.labels && (n = Object.keys(e.labels)).length) {
            o.labels = {};
            for(var r = 0; r < n.length; ++r)o.labels[n[r]] = e.labels[n[r]];
        }
        return null != e.metadata && e.hasOwnProperty("metadata") && (o.metadata = c.google.protobuf.Any.toObject(e.metadata, t)), null != e.locationId && e.hasOwnProperty("locationId") && (o.locationId = e.locationId), null != e.displayName && e.hasOwnProperty("displayName") && (o.displayName = e.displayName), o;
    }, p.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, p), e), n), F.api = ((e = {}).Http = (l.prototype.rules = u.emptyArray, l.prototype.fullyDecodeReservedExpansion = !1, l.create = function(e) {
        return new l(e);
    }, l.encode = function(e, t) {
        if (t = t || r.create(), null != e.rules && e.rules.length) for(var n = 0; n < e.rules.length; ++n)c.google.api.HttpRule.encode(e.rules[n], t.uint32(10).fork()).ldelim();
        return null != e.fullyDecodeReservedExpansion && Object.hasOwnProperty.call(e, "fullyDecodeReservedExpansion") && t.uint32(16).bool(e.fullyDecodeReservedExpansion), t;
    }, l.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, l.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.api.Http; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.rules && o.rules.length || (o.rules = []), o.rules.push(c.google.api.HttpRule.decode(e, e.uint32()));
                    break;
                case 2:
                    o.fullyDecodeReservedExpansion = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, l.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, l.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.rules && e.hasOwnProperty("rules")) {
            if (!Array.isArray(e.rules)) return "rules: array expected";
            for(var t = 0; t < e.rules.length; ++t){
                var n = c.google.api.HttpRule.verify(e.rules[t]);
                if (n) return "rules." + n;
            }
        }
        return null != e.fullyDecodeReservedExpansion && e.hasOwnProperty("fullyDecodeReservedExpansion") && "boolean" != typeof e.fullyDecodeReservedExpansion ? "fullyDecodeReservedExpansion: boolean expected" : null;
    }, l.fromObject = function(e) {
        if (e instanceof c.google.api.Http) return e;
        var t = new c.google.api.Http;
        if (e.rules) {
            if (!Array.isArray(e.rules)) throw TypeError(".google.api.Http.rules: array expected");
            t.rules = [];
            for(var n = 0; n < e.rules.length; ++n){
                if ("object" != typeof e.rules[n]) throw TypeError(".google.api.Http.rules: object expected");
                t.rules[n] = c.google.api.HttpRule.fromObject(e.rules[n]);
            }
        }
        return null != e.fullyDecodeReservedExpansion && (t.fullyDecodeReservedExpansion = Boolean(e.fullyDecodeReservedExpansion)), t;
    }, l.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.rules = []), t.defaults && (n.fullyDecodeReservedExpansion = !1), e.rules && e.rules.length) {
            n.rules = [];
            for(var o = 0; o < e.rules.length; ++o)n.rules[o] = c.google.api.HttpRule.toObject(e.rules[o], t);
        }
        return null != e.fullyDecodeReservedExpansion && e.hasOwnProperty("fullyDecodeReservedExpansion") && (n.fullyDecodeReservedExpansion = e.fullyDecodeReservedExpansion), n;
    }, l.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, l), e.HttpRule = (d.prototype.selector = "", d.prototype.get = null, d.prototype.put = null, d.prototype.post = null, d.prototype.delete = null, d.prototype.patch = null, d.prototype.custom = null, d.prototype.body = "", d.prototype.responseBody = "", d.prototype.additionalBindings = u.emptyArray, Object.defineProperty(d.prototype, "pattern", {
        get: u.oneOfGetter(n = [
            "get",
            "put",
            "post",
            "delete",
            "patch",
            "custom"
        ]),
        set: u.oneOfSetter(n)
    }), d.create = function(e) {
        return new d(e);
    }, d.encode = function(e, t) {
        if (t = t || r.create(), null != e.selector && Object.hasOwnProperty.call(e, "selector") && t.uint32(10).string(e.selector), null != e.get && Object.hasOwnProperty.call(e, "get") && t.uint32(18).string(e.get), null != e.put && Object.hasOwnProperty.call(e, "put") && t.uint32(26).string(e.put), null != e.post && Object.hasOwnProperty.call(e, "post") && t.uint32(34).string(e.post), null != e.delete && Object.hasOwnProperty.call(e, "delete") && t.uint32(42).string(e.delete), null != e.patch && Object.hasOwnProperty.call(e, "patch") && t.uint32(50).string(e.patch), null != e.body && Object.hasOwnProperty.call(e, "body") && t.uint32(58).string(e.body), null != e.custom && Object.hasOwnProperty.call(e, "custom") && c.google.api.CustomHttpPattern.encode(e.custom, t.uint32(66).fork()).ldelim(), null != e.additionalBindings && e.additionalBindings.length) for(var n = 0; n < e.additionalBindings.length; ++n)c.google.api.HttpRule.encode(e.additionalBindings[n], t.uint32(90).fork()).ldelim();
        return null != e.responseBody && Object.hasOwnProperty.call(e, "responseBody") && t.uint32(98).string(e.responseBody), t;
    }, d.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, d.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.api.HttpRule; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.selector = e.string();
                    break;
                case 2:
                    o.get = e.string();
                    break;
                case 3:
                    o.put = e.string();
                    break;
                case 4:
                    o.post = e.string();
                    break;
                case 5:
                    o.delete = e.string();
                    break;
                case 6:
                    o.patch = e.string();
                    break;
                case 8:
                    o.custom = c.google.api.CustomHttpPattern.decode(e, e.uint32());
                    break;
                case 7:
                    o.body = e.string();
                    break;
                case 12:
                    o.responseBody = e.string();
                    break;
                case 11:
                    o.additionalBindings && o.additionalBindings.length || (o.additionalBindings = []), o.additionalBindings.push(c.google.api.HttpRule.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, d.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, d.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        var t = {};
        if (null != e.selector && e.hasOwnProperty("selector") && !u.isString(e.selector)) return "selector: string expected";
        if (null != e.get && e.hasOwnProperty("get") && (t.pattern = 1, !u.isString(e.get))) return "get: string expected";
        if (null != e.put && e.hasOwnProperty("put")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !u.isString(e.put)) return "put: string expected";
        }
        if (null != e.post && e.hasOwnProperty("post")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !u.isString(e.post)) return "post: string expected";
        }
        if (null != e.delete && e.hasOwnProperty("delete")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !u.isString(e.delete)) return "delete: string expected";
        }
        if (null != e.patch && e.hasOwnProperty("patch")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, !u.isString(e.patch)) return "patch: string expected";
        }
        if (null != e.custom && e.hasOwnProperty("custom")) {
            if (1 === t.pattern) return "pattern: multiple values";
            if (t.pattern = 1, n = c.google.api.CustomHttpPattern.verify(e.custom)) return "custom." + n;
        }
        if (null != e.body && e.hasOwnProperty("body") && !u.isString(e.body)) return "body: string expected";
        if (null != e.responseBody && e.hasOwnProperty("responseBody") && !u.isString(e.responseBody)) return "responseBody: string expected";
        if (null != e.additionalBindings && e.hasOwnProperty("additionalBindings")) {
            if (!Array.isArray(e.additionalBindings)) return "additionalBindings: array expected";
            for(var n, o = 0; o < e.additionalBindings.length; ++o)if (n = c.google.api.HttpRule.verify(e.additionalBindings[o])) return "additionalBindings." + n;
        }
        return null;
    }, d.fromObject = function(e) {
        if (e instanceof c.google.api.HttpRule) return e;
        var t = new c.google.api.HttpRule;
        if (null != e.selector && (t.selector = String(e.selector)), null != e.get && (t.get = String(e.get)), null != e.put && (t.put = String(e.put)), null != e.post && (t.post = String(e.post)), null != e.delete && (t.delete = String(e.delete)), null != e.patch && (t.patch = String(e.patch)), null != e.custom) {
            if ("object" != typeof e.custom) throw TypeError(".google.api.HttpRule.custom: object expected");
            t.custom = c.google.api.CustomHttpPattern.fromObject(e.custom);
        }
        if (null != e.body && (t.body = String(e.body)), null != e.responseBody && (t.responseBody = String(e.responseBody)), e.additionalBindings) {
            if (!Array.isArray(e.additionalBindings)) throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
            t.additionalBindings = [];
            for(var n = 0; n < e.additionalBindings.length; ++n){
                if ("object" != typeof e.additionalBindings[n]) throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                t.additionalBindings[n] = c.google.api.HttpRule.fromObject(e.additionalBindings[n]);
            }
        }
        return t;
    }, d.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.additionalBindings = []), t.defaults && (n.selector = "", n.body = "", n.responseBody = ""), null != e.selector && e.hasOwnProperty("selector") && (n.selector = e.selector), null != e.get && e.hasOwnProperty("get") && (n.get = e.get, t.oneofs) && (n.pattern = "get"), null != e.put && e.hasOwnProperty("put") && (n.put = e.put, t.oneofs) && (n.pattern = "put"), null != e.post && e.hasOwnProperty("post") && (n.post = e.post, t.oneofs) && (n.pattern = "post"), null != e.delete && e.hasOwnProperty("delete") && (n.delete = e.delete, t.oneofs) && (n.pattern = "delete"), null != e.patch && e.hasOwnProperty("patch") && (n.patch = e.patch, t.oneofs) && (n.pattern = "patch"), null != e.body && e.hasOwnProperty("body") && (n.body = e.body), null != e.custom && e.hasOwnProperty("custom") && (n.custom = c.google.api.CustomHttpPattern.toObject(e.custom, t), t.oneofs) && (n.pattern = "custom"), e.additionalBindings && e.additionalBindings.length) {
            n.additionalBindings = [];
            for(var o = 0; o < e.additionalBindings.length; ++o)n.additionalBindings[o] = c.google.api.HttpRule.toObject(e.additionalBindings[o], t);
        }
        return null != e.responseBody && e.hasOwnProperty("responseBody") && (n.responseBody = e.responseBody), n;
    }, d.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, d), e.CustomHttpPattern = (g.prototype.kind = "", g.prototype.path = "", g.create = function(e) {
        return new g(e);
    }, g.encode = function(e, t) {
        return t = t || r.create(), null != e.kind && Object.hasOwnProperty.call(e, "kind") && t.uint32(10).string(e.kind), null != e.path && Object.hasOwnProperty.call(e, "path") && t.uint32(18).string(e.path), t;
    }, g.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, g.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.api.CustomHttpPattern; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.kind = e.string();
                    break;
                case 2:
                    o.path = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, g.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, g.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.kind && e.hasOwnProperty("kind") && !u.isString(e.kind) ? "kind: string expected" : null != e.path && e.hasOwnProperty("path") && !u.isString(e.path) ? "path: string expected" : null;
    }, g.fromObject = function(e) {
        var t;
        return e instanceof c.google.api.CustomHttpPattern ? e : (t = new c.google.api.CustomHttpPattern, null != e.kind && (t.kind = String(e.kind)), null != e.path && (t.path = String(e.path)), t);
    }, g.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.kind = "", n.path = ""), null != e.kind && e.hasOwnProperty("kind") && (n.kind = e.kind), null != e.path && e.hasOwnProperty("path") && (n.path = e.path), n;
    }, g.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, g), e), F.protobuf = ((n = {}).FileDescriptorSet = (B.prototype.file = u.emptyArray, B.create = function(e) {
        return new B(e);
    }, B.encode = function(e, t) {
        if (t = t || r.create(), null != e.file && e.file.length) for(var n = 0; n < e.file.length; ++n)c.google.protobuf.FileDescriptorProto.encode(e.file[n], t.uint32(10).fork()).ldelim();
        return t;
    }, B.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, B.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.FileDescriptorSet; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.file && o.file.length || (o.file = []), o.file.push(c.google.protobuf.FileDescriptorProto.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, B.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, B.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.file && e.hasOwnProperty("file")) {
            if (!Array.isArray(e.file)) return "file: array expected";
            for(var t = 0; t < e.file.length; ++t){
                var n = c.google.protobuf.FileDescriptorProto.verify(e.file[t]);
                if (n) return "file." + n;
            }
        }
        return null;
    }, B.fromObject = function(e) {
        if (e instanceof c.google.protobuf.FileDescriptorSet) return e;
        var t = new c.google.protobuf.FileDescriptorSet;
        if (e.file) {
            if (!Array.isArray(e.file)) throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
            t.file = [];
            for(var n = 0; n < e.file.length; ++n){
                if ("object" != typeof e.file[n]) throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                t.file[n] = c.google.protobuf.FileDescriptorProto.fromObject(e.file[n]);
            }
        }
        return t;
    }, B.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.file = []), e.file && e.file.length) {
            n.file = [];
            for(var o = 0; o < e.file.length; ++o)n.file[o] = c.google.protobuf.FileDescriptorProto.toObject(e.file[o], t);
        }
        return n;
    }, B.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, B), n.FileDescriptorProto = (f.prototype.name = "", f.prototype.package = "", f.prototype.dependency = u.emptyArray, f.prototype.publicDependency = u.emptyArray, f.prototype.weakDependency = u.emptyArray, f.prototype.messageType = u.emptyArray, f.prototype.enumType = u.emptyArray, f.prototype.service = u.emptyArray, f.prototype.extension = u.emptyArray, f.prototype.options = null, f.prototype.sourceCodeInfo = null, f.prototype.syntax = "", f.create = function(e) {
        return new f(e);
    }, f.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.package && Object.hasOwnProperty.call(e, "package") && t.uint32(18).string(e.package), null != e.dependency && e.dependency.length) for(var n = 0; n < e.dependency.length; ++n)t.uint32(26).string(e.dependency[n]);
        if (null != e.messageType && e.messageType.length) for(n = 0; n < e.messageType.length; ++n)c.google.protobuf.DescriptorProto.encode(e.messageType[n], t.uint32(34).fork()).ldelim();
        if (null != e.enumType && e.enumType.length) for(n = 0; n < e.enumType.length; ++n)c.google.protobuf.EnumDescriptorProto.encode(e.enumType[n], t.uint32(42).fork()).ldelim();
        if (null != e.service && e.service.length) for(n = 0; n < e.service.length; ++n)c.google.protobuf.ServiceDescriptorProto.encode(e.service[n], t.uint32(50).fork()).ldelim();
        if (null != e.extension && e.extension.length) for(n = 0; n < e.extension.length; ++n)c.google.protobuf.FieldDescriptorProto.encode(e.extension[n], t.uint32(58).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.FileOptions.encode(e.options, t.uint32(66).fork()).ldelim(), null != e.sourceCodeInfo && Object.hasOwnProperty.call(e, "sourceCodeInfo") && c.google.protobuf.SourceCodeInfo.encode(e.sourceCodeInfo, t.uint32(74).fork()).ldelim(), null != e.publicDependency && e.publicDependency.length) for(n = 0; n < e.publicDependency.length; ++n)t.uint32(80).int32(e.publicDependency[n]);
        if (null != e.weakDependency && e.weakDependency.length) for(n = 0; n < e.weakDependency.length; ++n)t.uint32(88).int32(e.weakDependency[n]);
        return null != e.syntax && Object.hasOwnProperty.call(e, "syntax") && t.uint32(98).string(e.syntax), t;
    }, f.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, f.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.FileDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.package = e.string();
                    break;
                case 3:
                    o.dependency && o.dependency.length || (o.dependency = []), o.dependency.push(e.string());
                    break;
                case 10:
                    if (o.publicDependency && o.publicDependency.length || (o.publicDependency = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.publicDependency.push(e.int32());
                    else o.publicDependency.push(e.int32());
                    break;
                case 11:
                    if (o.weakDependency && o.weakDependency.length || (o.weakDependency = []), 2 == (7 & r)) for(i = e.uint32() + e.pos; e.pos < i;)o.weakDependency.push(e.int32());
                    else o.weakDependency.push(e.int32());
                    break;
                case 4:
                    o.messageType && o.messageType.length || (o.messageType = []), o.messageType.push(c.google.protobuf.DescriptorProto.decode(e, e.uint32()));
                    break;
                case 5:
                    o.enumType && o.enumType.length || (o.enumType = []), o.enumType.push(c.google.protobuf.EnumDescriptorProto.decode(e, e.uint32()));
                    break;
                case 6:
                    o.service && o.service.length || (o.service = []), o.service.push(c.google.protobuf.ServiceDescriptorProto.decode(e, e.uint32()));
                    break;
                case 7:
                    o.extension && o.extension.length || (o.extension = []), o.extension.push(c.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 8:
                    o.options = c.google.protobuf.FileOptions.decode(e, e.uint32());
                    break;
                case 9:
                    o.sourceCodeInfo = c.google.protobuf.SourceCodeInfo.decode(e, e.uint32());
                    break;
                case 12:
                    o.syntax = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, f.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, f.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.package && e.hasOwnProperty("package") && !u.isString(e.package)) return "package: string expected";
        if (null != e.dependency && e.hasOwnProperty("dependency")) {
            if (!Array.isArray(e.dependency)) return "dependency: array expected";
            for(var t = 0; t < e.dependency.length; ++t)if (!u.isString(e.dependency[t])) return "dependency: string[] expected";
        }
        if (null != e.publicDependency && e.hasOwnProperty("publicDependency")) {
            if (!Array.isArray(e.publicDependency)) return "publicDependency: array expected";
            for(t = 0; t < e.publicDependency.length; ++t)if (!u.isInteger(e.publicDependency[t])) return "publicDependency: integer[] expected";
        }
        if (null != e.weakDependency && e.hasOwnProperty("weakDependency")) {
            if (!Array.isArray(e.weakDependency)) return "weakDependency: array expected";
            for(t = 0; t < e.weakDependency.length; ++t)if (!u.isInteger(e.weakDependency[t])) return "weakDependency: integer[] expected";
        }
        if (null != e.messageType && e.hasOwnProperty("messageType")) {
            if (!Array.isArray(e.messageType)) return "messageType: array expected";
            for(t = 0; t < e.messageType.length; ++t)if (n = c.google.protobuf.DescriptorProto.verify(e.messageType[t])) return "messageType." + n;
        }
        if (null != e.enumType && e.hasOwnProperty("enumType")) {
            if (!Array.isArray(e.enumType)) return "enumType: array expected";
            for(t = 0; t < e.enumType.length; ++t)if (n = c.google.protobuf.EnumDescriptorProto.verify(e.enumType[t])) return "enumType." + n;
        }
        if (null != e.service && e.hasOwnProperty("service")) {
            if (!Array.isArray(e.service)) return "service: array expected";
            for(t = 0; t < e.service.length; ++t)if (n = c.google.protobuf.ServiceDescriptorProto.verify(e.service[t])) return "service." + n;
        }
        if (null != e.extension && e.hasOwnProperty("extension")) {
            if (!Array.isArray(e.extension)) return "extension: array expected";
            for(t = 0; t < e.extension.length; ++t)if (n = c.google.protobuf.FieldDescriptorProto.verify(e.extension[t])) return "extension." + n;
        }
        var n;
        if (null != e.options && e.hasOwnProperty("options") && (n = c.google.protobuf.FileOptions.verify(e.options))) return "options." + n;
        if (null != e.sourceCodeInfo && e.hasOwnProperty("sourceCodeInfo") && (n = c.google.protobuf.SourceCodeInfo.verify(e.sourceCodeInfo))) return "sourceCodeInfo." + n;
        return null != e.syntax && e.hasOwnProperty("syntax") && !u.isString(e.syntax) ? "syntax: string expected" : null;
    }, f.fromObject = function(e) {
        if (e instanceof c.google.protobuf.FileDescriptorProto) return e;
        var t = new c.google.protobuf.FileDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.package && (t.package = String(e.package)), e.dependency) {
            if (!Array.isArray(e.dependency)) throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
            t.dependency = [];
            for(var n = 0; n < e.dependency.length; ++n)t.dependency[n] = String(e.dependency[n]);
        }
        if (e.publicDependency) {
            if (!Array.isArray(e.publicDependency)) throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
            t.publicDependency = [];
            for(n = 0; n < e.publicDependency.length; ++n)t.publicDependency[n] = 0 | e.publicDependency[n];
        }
        if (e.weakDependency) {
            if (!Array.isArray(e.weakDependency)) throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
            t.weakDependency = [];
            for(n = 0; n < e.weakDependency.length; ++n)t.weakDependency[n] = 0 | e.weakDependency[n];
        }
        if (e.messageType) {
            if (!Array.isArray(e.messageType)) throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
            t.messageType = [];
            for(n = 0; n < e.messageType.length; ++n){
                if ("object" != typeof e.messageType[n]) throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                t.messageType[n] = c.google.protobuf.DescriptorProto.fromObject(e.messageType[n]);
            }
        }
        if (e.enumType) {
            if (!Array.isArray(e.enumType)) throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
            t.enumType = [];
            for(n = 0; n < e.enumType.length; ++n){
                if ("object" != typeof e.enumType[n]) throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                t.enumType[n] = c.google.protobuf.EnumDescriptorProto.fromObject(e.enumType[n]);
            }
        }
        if (e.service) {
            if (!Array.isArray(e.service)) throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
            t.service = [];
            for(n = 0; n < e.service.length; ++n){
                if ("object" != typeof e.service[n]) throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                t.service[n] = c.google.protobuf.ServiceDescriptorProto.fromObject(e.service[n]);
            }
        }
        if (e.extension) {
            if (!Array.isArray(e.extension)) throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
            t.extension = [];
            for(n = 0; n < e.extension.length; ++n){
                if ("object" != typeof e.extension[n]) throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                t.extension[n] = c.google.protobuf.FieldDescriptorProto.fromObject(e.extension[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
            t.options = c.google.protobuf.FileOptions.fromObject(e.options);
        }
        if (null != e.sourceCodeInfo) {
            if ("object" != typeof e.sourceCodeInfo) throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
            t.sourceCodeInfo = c.google.protobuf.SourceCodeInfo.fromObject(e.sourceCodeInfo);
        }
        return null != e.syntax && (t.syntax = String(e.syntax)), t;
    }, f.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.dependency = [], n.messageType = [], n.enumType = [], n.service = [], n.extension = [], n.publicDependency = [], n.weakDependency = []), t.defaults && (n.name = "", n.package = "", n.options = null, n.sourceCodeInfo = null, n.syntax = ""), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.package && e.hasOwnProperty("package") && (n.package = e.package), e.dependency && e.dependency.length) {
            n.dependency = [];
            for(var o = 0; o < e.dependency.length; ++o)n.dependency[o] = e.dependency[o];
        }
        if (e.messageType && e.messageType.length) {
            n.messageType = [];
            for(o = 0; o < e.messageType.length; ++o)n.messageType[o] = c.google.protobuf.DescriptorProto.toObject(e.messageType[o], t);
        }
        if (e.enumType && e.enumType.length) {
            n.enumType = [];
            for(o = 0; o < e.enumType.length; ++o)n.enumType[o] = c.google.protobuf.EnumDescriptorProto.toObject(e.enumType[o], t);
        }
        if (e.service && e.service.length) {
            n.service = [];
            for(o = 0; o < e.service.length; ++o)n.service[o] = c.google.protobuf.ServiceDescriptorProto.toObject(e.service[o], t);
        }
        if (e.extension && e.extension.length) {
            n.extension = [];
            for(o = 0; o < e.extension.length; ++o)n.extension[o] = c.google.protobuf.FieldDescriptorProto.toObject(e.extension[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.FileOptions.toObject(e.options, t)), null != e.sourceCodeInfo && e.hasOwnProperty("sourceCodeInfo") && (n.sourceCodeInfo = c.google.protobuf.SourceCodeInfo.toObject(e.sourceCodeInfo, t)), e.publicDependency && e.publicDependency.length) {
            n.publicDependency = [];
            for(o = 0; o < e.publicDependency.length; ++o)n.publicDependency[o] = e.publicDependency[o];
        }
        if (e.weakDependency && e.weakDependency.length) {
            n.weakDependency = [];
            for(o = 0; o < e.weakDependency.length; ++o)n.weakDependency[o] = e.weakDependency[o];
        }
        return null != e.syntax && e.hasOwnProperty("syntax") && (n.syntax = e.syntax), n;
    }, f.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, f), n.DescriptorProto = (y.prototype.name = "", y.prototype.field = u.emptyArray, y.prototype.extension = u.emptyArray, y.prototype.nestedType = u.emptyArray, y.prototype.enumType = u.emptyArray, y.prototype.extensionRange = u.emptyArray, y.prototype.oneofDecl = u.emptyArray, y.prototype.options = null, y.prototype.reservedRange = u.emptyArray, y.prototype.reservedName = u.emptyArray, y.create = function(e) {
        return new y(e);
    }, y.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.field && e.field.length) for(var n = 0; n < e.field.length; ++n)c.google.protobuf.FieldDescriptorProto.encode(e.field[n], t.uint32(18).fork()).ldelim();
        if (null != e.nestedType && e.nestedType.length) for(n = 0; n < e.nestedType.length; ++n)c.google.protobuf.DescriptorProto.encode(e.nestedType[n], t.uint32(26).fork()).ldelim();
        if (null != e.enumType && e.enumType.length) for(n = 0; n < e.enumType.length; ++n)c.google.protobuf.EnumDescriptorProto.encode(e.enumType[n], t.uint32(34).fork()).ldelim();
        if (null != e.extensionRange && e.extensionRange.length) for(n = 0; n < e.extensionRange.length; ++n)c.google.protobuf.DescriptorProto.ExtensionRange.encode(e.extensionRange[n], t.uint32(42).fork()).ldelim();
        if (null != e.extension && e.extension.length) for(n = 0; n < e.extension.length; ++n)c.google.protobuf.FieldDescriptorProto.encode(e.extension[n], t.uint32(50).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.MessageOptions.encode(e.options, t.uint32(58).fork()).ldelim(), null != e.oneofDecl && e.oneofDecl.length) for(n = 0; n < e.oneofDecl.length; ++n)c.google.protobuf.OneofDescriptorProto.encode(e.oneofDecl[n], t.uint32(66).fork()).ldelim();
        if (null != e.reservedRange && e.reservedRange.length) for(n = 0; n < e.reservedRange.length; ++n)c.google.protobuf.DescriptorProto.ReservedRange.encode(e.reservedRange[n], t.uint32(74).fork()).ldelim();
        if (null != e.reservedName && e.reservedName.length) for(n = 0; n < e.reservedName.length; ++n)t.uint32(82).string(e.reservedName[n]);
        return t;
    }, y.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, y.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.DescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.field && o.field.length || (o.field = []), o.field.push(c.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 6:
                    o.extension && o.extension.length || (o.extension = []), o.extension.push(c.google.protobuf.FieldDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.nestedType && o.nestedType.length || (o.nestedType = []), o.nestedType.push(c.google.protobuf.DescriptorProto.decode(e, e.uint32()));
                    break;
                case 4:
                    o.enumType && o.enumType.length || (o.enumType = []), o.enumType.push(c.google.protobuf.EnumDescriptorProto.decode(e, e.uint32()));
                    break;
                case 5:
                    o.extensionRange && o.extensionRange.length || (o.extensionRange = []), o.extensionRange.push(c.google.protobuf.DescriptorProto.ExtensionRange.decode(e, e.uint32()));
                    break;
                case 8:
                    o.oneofDecl && o.oneofDecl.length || (o.oneofDecl = []), o.oneofDecl.push(c.google.protobuf.OneofDescriptorProto.decode(e, e.uint32()));
                    break;
                case 7:
                    o.options = c.google.protobuf.MessageOptions.decode(e, e.uint32());
                    break;
                case 9:
                    o.reservedRange && o.reservedRange.length || (o.reservedRange = []), o.reservedRange.push(c.google.protobuf.DescriptorProto.ReservedRange.decode(e, e.uint32()));
                    break;
                case 10:
                    o.reservedName && o.reservedName.length || (o.reservedName = []), o.reservedName.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, y.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, y.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.field && e.hasOwnProperty("field")) {
            if (!Array.isArray(e.field)) return "field: array expected";
            for(var t = 0; t < e.field.length; ++t)if (n = c.google.protobuf.FieldDescriptorProto.verify(e.field[t])) return "field." + n;
        }
        if (null != e.extension && e.hasOwnProperty("extension")) {
            if (!Array.isArray(e.extension)) return "extension: array expected";
            for(t = 0; t < e.extension.length; ++t)if (n = c.google.protobuf.FieldDescriptorProto.verify(e.extension[t])) return "extension." + n;
        }
        if (null != e.nestedType && e.hasOwnProperty("nestedType")) {
            if (!Array.isArray(e.nestedType)) return "nestedType: array expected";
            for(t = 0; t < e.nestedType.length; ++t)if (n = c.google.protobuf.DescriptorProto.verify(e.nestedType[t])) return "nestedType." + n;
        }
        if (null != e.enumType && e.hasOwnProperty("enumType")) {
            if (!Array.isArray(e.enumType)) return "enumType: array expected";
            for(t = 0; t < e.enumType.length; ++t)if (n = c.google.protobuf.EnumDescriptorProto.verify(e.enumType[t])) return "enumType." + n;
        }
        if (null != e.extensionRange && e.hasOwnProperty("extensionRange")) {
            if (!Array.isArray(e.extensionRange)) return "extensionRange: array expected";
            for(t = 0; t < e.extensionRange.length; ++t)if (n = c.google.protobuf.DescriptorProto.ExtensionRange.verify(e.extensionRange[t])) return "extensionRange." + n;
        }
        if (null != e.oneofDecl && e.hasOwnProperty("oneofDecl")) {
            if (!Array.isArray(e.oneofDecl)) return "oneofDecl: array expected";
            for(t = 0; t < e.oneofDecl.length; ++t)if (n = c.google.protobuf.OneofDescriptorProto.verify(e.oneofDecl[t])) return "oneofDecl." + n;
        }
        if (null != e.options && e.hasOwnProperty("options") && (n = c.google.protobuf.MessageOptions.verify(e.options))) return "options." + n;
        if (null != e.reservedRange && e.hasOwnProperty("reservedRange")) {
            if (!Array.isArray(e.reservedRange)) return "reservedRange: array expected";
            for(var n, t = 0; t < e.reservedRange.length; ++t)if (n = c.google.protobuf.DescriptorProto.ReservedRange.verify(e.reservedRange[t])) return "reservedRange." + n;
        }
        if (null != e.reservedName && e.hasOwnProperty("reservedName")) {
            if (!Array.isArray(e.reservedName)) return "reservedName: array expected";
            for(t = 0; t < e.reservedName.length; ++t)if (!u.isString(e.reservedName[t])) return "reservedName: string[] expected";
        }
        return null;
    }, y.fromObject = function(e) {
        if (e instanceof c.google.protobuf.DescriptorProto) return e;
        var t = new c.google.protobuf.DescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.field) {
            if (!Array.isArray(e.field)) throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
            t.field = [];
            for(var n = 0; n < e.field.length; ++n){
                if ("object" != typeof e.field[n]) throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                t.field[n] = c.google.protobuf.FieldDescriptorProto.fromObject(e.field[n]);
            }
        }
        if (e.extension) {
            if (!Array.isArray(e.extension)) throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
            t.extension = [];
            for(n = 0; n < e.extension.length; ++n){
                if ("object" != typeof e.extension[n]) throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                t.extension[n] = c.google.protobuf.FieldDescriptorProto.fromObject(e.extension[n]);
            }
        }
        if (e.nestedType) {
            if (!Array.isArray(e.nestedType)) throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
            t.nestedType = [];
            for(n = 0; n < e.nestedType.length; ++n){
                if ("object" != typeof e.nestedType[n]) throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                t.nestedType[n] = c.google.protobuf.DescriptorProto.fromObject(e.nestedType[n]);
            }
        }
        if (e.enumType) {
            if (!Array.isArray(e.enumType)) throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
            t.enumType = [];
            for(n = 0; n < e.enumType.length; ++n){
                if ("object" != typeof e.enumType[n]) throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                t.enumType[n] = c.google.protobuf.EnumDescriptorProto.fromObject(e.enumType[n]);
            }
        }
        if (e.extensionRange) {
            if (!Array.isArray(e.extensionRange)) throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
            t.extensionRange = [];
            for(n = 0; n < e.extensionRange.length; ++n){
                if ("object" != typeof e.extensionRange[n]) throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                t.extensionRange[n] = c.google.protobuf.DescriptorProto.ExtensionRange.fromObject(e.extensionRange[n]);
            }
        }
        if (e.oneofDecl) {
            if (!Array.isArray(e.oneofDecl)) throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
            t.oneofDecl = [];
            for(n = 0; n < e.oneofDecl.length; ++n){
                if ("object" != typeof e.oneofDecl[n]) throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                t.oneofDecl[n] = c.google.protobuf.OneofDescriptorProto.fromObject(e.oneofDecl[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
            t.options = c.google.protobuf.MessageOptions.fromObject(e.options);
        }
        if (e.reservedRange) {
            if (!Array.isArray(e.reservedRange)) throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
            t.reservedRange = [];
            for(n = 0; n < e.reservedRange.length; ++n){
                if ("object" != typeof e.reservedRange[n]) throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                t.reservedRange[n] = c.google.protobuf.DescriptorProto.ReservedRange.fromObject(e.reservedRange[n]);
            }
        }
        if (e.reservedName) {
            if (!Array.isArray(e.reservedName)) throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
            t.reservedName = [];
            for(n = 0; n < e.reservedName.length; ++n)t.reservedName[n] = String(e.reservedName[n]);
        }
        return t;
    }, y.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.field = [], n.nestedType = [], n.enumType = [], n.extensionRange = [], n.extension = [], n.oneofDecl = [], n.reservedRange = [], n.reservedName = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.field && e.field.length) {
            n.field = [];
            for(var o = 0; o < e.field.length; ++o)n.field[o] = c.google.protobuf.FieldDescriptorProto.toObject(e.field[o], t);
        }
        if (e.nestedType && e.nestedType.length) {
            n.nestedType = [];
            for(o = 0; o < e.nestedType.length; ++o)n.nestedType[o] = c.google.protobuf.DescriptorProto.toObject(e.nestedType[o], t);
        }
        if (e.enumType && e.enumType.length) {
            n.enumType = [];
            for(o = 0; o < e.enumType.length; ++o)n.enumType[o] = c.google.protobuf.EnumDescriptorProto.toObject(e.enumType[o], t);
        }
        if (e.extensionRange && e.extensionRange.length) {
            n.extensionRange = [];
            for(o = 0; o < e.extensionRange.length; ++o)n.extensionRange[o] = c.google.protobuf.DescriptorProto.ExtensionRange.toObject(e.extensionRange[o], t);
        }
        if (e.extension && e.extension.length) {
            n.extension = [];
            for(o = 0; o < e.extension.length; ++o)n.extension[o] = c.google.protobuf.FieldDescriptorProto.toObject(e.extension[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.MessageOptions.toObject(e.options, t)), e.oneofDecl && e.oneofDecl.length) {
            n.oneofDecl = [];
            for(o = 0; o < e.oneofDecl.length; ++o)n.oneofDecl[o] = c.google.protobuf.OneofDescriptorProto.toObject(e.oneofDecl[o], t);
        }
        if (e.reservedRange && e.reservedRange.length) {
            n.reservedRange = [];
            for(o = 0; o < e.reservedRange.length; ++o)n.reservedRange[o] = c.google.protobuf.DescriptorProto.ReservedRange.toObject(e.reservedRange[o], t);
        }
        if (e.reservedName && e.reservedName.length) {
            n.reservedName = [];
            for(o = 0; o < e.reservedName.length; ++o)n.reservedName[o] = e.reservedName[o];
        }
        return n;
    }, y.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, y.ExtensionRange = (h.prototype.start = 0, h.prototype.end = 0, h.prototype.options = null, h.create = function(e) {
        return new h(e);
    }, h.encode = function(e, t) {
        return t = t || r.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.ExtensionRangeOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, h.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, h.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.DescriptorProto.ExtensionRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                case 3:
                    o.options = c.google.protobuf.ExtensionRangeOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, h.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, h.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.start && e.hasOwnProperty("start") && !u.isInteger(e.start)) return "start: integer expected";
        if (null != e.end && e.hasOwnProperty("end") && !u.isInteger(e.end)) return "end: integer expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = c.google.protobuf.ExtensionRangeOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, h.fromObject = function(e) {
        if (e instanceof c.google.protobuf.DescriptorProto.ExtensionRange) return e;
        var t = new c.google.protobuf.DescriptorProto.ExtensionRange;
        if (null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
            t.options = c.google.protobuf.ExtensionRangeOptions.fromObject(e.options);
        }
        return t;
    }, h.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0, n.options = null), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.ExtensionRangeOptions.toObject(e.options, t)), n;
    }, h.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, h), y.ReservedRange = (b.prototype.start = 0, b.prototype.end = 0, b.create = function(e) {
        return new b(e);
    }, b.encode = function(e, t) {
        return t = t || r.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), t;
    }, b.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, b.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.DescriptorProto.ReservedRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, b.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, b.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.start && e.hasOwnProperty("start") && !u.isInteger(e.start) ? "start: integer expected" : null != e.end && e.hasOwnProperty("end") && !u.isInteger(e.end) ? "end: integer expected" : null;
    }, b.fromObject = function(e) {
        var t;
        return e instanceof c.google.protobuf.DescriptorProto.ReservedRange ? e : (t = new c.google.protobuf.DescriptorProto.ReservedRange, null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), t);
    }, b.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, b.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, b), y), n.ExtensionRangeOptions = (U.prototype.uninterpretedOption = u.emptyArray, U.create = function(e) {
        return new U(e);
    }, U.encode = function(e, t) {
        if (t = t || r.create(), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, U.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, U.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.ExtensionRangeOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 999 ? (o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, U.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, U.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, U.fromObject = function(e) {
        if (e instanceof c.google.protobuf.ExtensionRangeOptions) return e;
        var t = new c.google.protobuf.ExtensionRangeOptions;
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, U.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, U.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, U), n.FieldDescriptorProto = (O.prototype.name = "", O.prototype.number = 0, O.prototype.label = 1, O.prototype.type = 1, O.prototype.typeName = "", O.prototype.extendee = "", O.prototype.defaultValue = "", O.prototype.oneofIndex = 0, O.prototype.jsonName = "", O.prototype.options = null, O.prototype.proto3Optional = !1, O.create = function(e) {
        return new O(e);
    }, O.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.extendee && Object.hasOwnProperty.call(e, "extendee") && t.uint32(18).string(e.extendee), null != e.number && Object.hasOwnProperty.call(e, "number") && t.uint32(24).int32(e.number), null != e.label && Object.hasOwnProperty.call(e, "label") && t.uint32(32).int32(e.label), null != e.type && Object.hasOwnProperty.call(e, "type") && t.uint32(40).int32(e.type), null != e.typeName && Object.hasOwnProperty.call(e, "typeName") && t.uint32(50).string(e.typeName), null != e.defaultValue && Object.hasOwnProperty.call(e, "defaultValue") && t.uint32(58).string(e.defaultValue), null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.FieldOptions.encode(e.options, t.uint32(66).fork()).ldelim(), null != e.oneofIndex && Object.hasOwnProperty.call(e, "oneofIndex") && t.uint32(72).int32(e.oneofIndex), null != e.jsonName && Object.hasOwnProperty.call(e, "jsonName") && t.uint32(82).string(e.jsonName), null != e.proto3Optional && Object.hasOwnProperty.call(e, "proto3Optional") && t.uint32(136).bool(e.proto3Optional), t;
    }, O.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, O.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.FieldDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 3:
                    o.number = e.int32();
                    break;
                case 4:
                    o.label = e.int32();
                    break;
                case 5:
                    o.type = e.int32();
                    break;
                case 6:
                    o.typeName = e.string();
                    break;
                case 2:
                    o.extendee = e.string();
                    break;
                case 7:
                    o.defaultValue = e.string();
                    break;
                case 9:
                    o.oneofIndex = e.int32();
                    break;
                case 10:
                    o.jsonName = e.string();
                    break;
                case 8:
                    o.options = c.google.protobuf.FieldOptions.decode(e, e.uint32());
                    break;
                case 17:
                    o.proto3Optional = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, O.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, O.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.number && e.hasOwnProperty("number") && !u.isInteger(e.number)) return "number: integer expected";
        if (null != e.label && e.hasOwnProperty("label")) switch(e.label){
            default:
                return "label: enum value expected";
            case 1:
            case 2:
            case 3:
        }
        if (null != e.type && e.hasOwnProperty("type")) switch(e.type){
            default:
                return "type: enum value expected";
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
        }
        if (null != e.typeName && e.hasOwnProperty("typeName") && !u.isString(e.typeName)) return "typeName: string expected";
        if (null != e.extendee && e.hasOwnProperty("extendee") && !u.isString(e.extendee)) return "extendee: string expected";
        if (null != e.defaultValue && e.hasOwnProperty("defaultValue") && !u.isString(e.defaultValue)) return "defaultValue: string expected";
        if (null != e.oneofIndex && e.hasOwnProperty("oneofIndex") && !u.isInteger(e.oneofIndex)) return "oneofIndex: integer expected";
        if (null != e.jsonName && e.hasOwnProperty("jsonName") && !u.isString(e.jsonName)) return "jsonName: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            var t = c.google.protobuf.FieldOptions.verify(e.options);
            if (t) return "options." + t;
        }
        return null != e.proto3Optional && e.hasOwnProperty("proto3Optional") && "boolean" != typeof e.proto3Optional ? "proto3Optional: boolean expected" : null;
    }, O.fromObject = function(e) {
        if (e instanceof c.google.protobuf.FieldDescriptorProto) return e;
        var t = new c.google.protobuf.FieldDescriptorProto;
        switch(null != e.name && (t.name = String(e.name)), null != e.number && (t.number = 0 | e.number), e.label){
            case "LABEL_OPTIONAL":
            case 1:
                t.label = 1;
                break;
            case "LABEL_REQUIRED":
            case 2:
                t.label = 2;
                break;
            case "LABEL_REPEATED":
            case 3:
                t.label = 3;
        }
        switch(e.type){
            case "TYPE_DOUBLE":
            case 1:
                t.type = 1;
                break;
            case "TYPE_FLOAT":
            case 2:
                t.type = 2;
                break;
            case "TYPE_INT64":
            case 3:
                t.type = 3;
                break;
            case "TYPE_UINT64":
            case 4:
                t.type = 4;
                break;
            case "TYPE_INT32":
            case 5:
                t.type = 5;
                break;
            case "TYPE_FIXED64":
            case 6:
                t.type = 6;
                break;
            case "TYPE_FIXED32":
            case 7:
                t.type = 7;
                break;
            case "TYPE_BOOL":
            case 8:
                t.type = 8;
                break;
            case "TYPE_STRING":
            case 9:
                t.type = 9;
                break;
            case "TYPE_GROUP":
            case 10:
                t.type = 10;
                break;
            case "TYPE_MESSAGE":
            case 11:
                t.type = 11;
                break;
            case "TYPE_BYTES":
            case 12:
                t.type = 12;
                break;
            case "TYPE_UINT32":
            case 13:
                t.type = 13;
                break;
            case "TYPE_ENUM":
            case 14:
                t.type = 14;
                break;
            case "TYPE_SFIXED32":
            case 15:
                t.type = 15;
                break;
            case "TYPE_SFIXED64":
            case 16:
                t.type = 16;
                break;
            case "TYPE_SINT32":
            case 17:
                t.type = 17;
                break;
            case "TYPE_SINT64":
            case 18:
                t.type = 18;
        }
        if (null != e.typeName && (t.typeName = String(e.typeName)), null != e.extendee && (t.extendee = String(e.extendee)), null != e.defaultValue && (t.defaultValue = String(e.defaultValue)), null != e.oneofIndex && (t.oneofIndex = 0 | e.oneofIndex), null != e.jsonName && (t.jsonName = String(e.jsonName)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
            t.options = c.google.protobuf.FieldOptions.fromObject(e.options);
        }
        return null != e.proto3Optional && (t.proto3Optional = Boolean(e.proto3Optional)), t;
    }, O.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.extendee = "", n.number = 0, n.label = t.enums === String ? "LABEL_OPTIONAL" : 1, n.type = t.enums === String ? "TYPE_DOUBLE" : 1, n.typeName = "", n.defaultValue = "", n.options = null, n.oneofIndex = 0, n.jsonName = "", n.proto3Optional = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.extendee && e.hasOwnProperty("extendee") && (n.extendee = e.extendee), null != e.number && e.hasOwnProperty("number") && (n.number = e.number), null != e.label && e.hasOwnProperty("label") && (n.label = t.enums === String ? c.google.protobuf.FieldDescriptorProto.Label[e.label] : e.label), null != e.type && e.hasOwnProperty("type") && (n.type = t.enums === String ? c.google.protobuf.FieldDescriptorProto.Type[e.type] : e.type), null != e.typeName && e.hasOwnProperty("typeName") && (n.typeName = e.typeName), null != e.defaultValue && e.hasOwnProperty("defaultValue") && (n.defaultValue = e.defaultValue), null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.FieldOptions.toObject(e.options, t)), null != e.oneofIndex && e.hasOwnProperty("oneofIndex") && (n.oneofIndex = e.oneofIndex), null != e.jsonName && e.hasOwnProperty("jsonName") && (n.jsonName = e.jsonName), null != e.proto3Optional && e.hasOwnProperty("proto3Optional") && (n.proto3Optional = e.proto3Optional), n;
    }, O.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, O.Type = (e = {}, (t = Object.create(e))[e[1] = "TYPE_DOUBLE"] = 1, t[e[2] = "TYPE_FLOAT"] = 2, t[e[3] = "TYPE_INT64"] = 3, t[e[4] = "TYPE_UINT64"] = 4, t[e[5] = "TYPE_INT32"] = 5, t[e[6] = "TYPE_FIXED64"] = 6, t[e[7] = "TYPE_FIXED32"] = 7, t[e[8] = "TYPE_BOOL"] = 8, t[e[9] = "TYPE_STRING"] = 9, t[e[10] = "TYPE_GROUP"] = 10, t[e[11] = "TYPE_MESSAGE"] = 11, t[e[12] = "TYPE_BYTES"] = 12, t[e[13] = "TYPE_UINT32"] = 13, t[e[14] = "TYPE_ENUM"] = 14, t[e[15] = "TYPE_SFIXED32"] = 15, t[e[16] = "TYPE_SFIXED64"] = 16, t[e[17] = "TYPE_SINT32"] = 17, t[e[18] = "TYPE_SINT64"] = 18, t), O.Label = (e = {}, (t = Object.create(e))[e[1] = "LABEL_OPTIONAL"] = 1, t[e[2] = "LABEL_REQUIRED"] = 2, t[e[3] = "LABEL_REPEATED"] = 3, t), O), n.OneofDescriptorProto = (m.prototype.name = "", m.prototype.options = null, m.create = function(e) {
        return new m(e);
    }, m.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.OneofOptions.encode(e.options, t.uint32(18).fork()).ldelim(), t;
    }, m.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, m.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.OneofDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.options = c.google.protobuf.OneofOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, m.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, m.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = c.google.protobuf.OneofOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, m.fromObject = function(e) {
        if (e instanceof c.google.protobuf.OneofDescriptorProto) return e;
        var t = new c.google.protobuf.OneofDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
            t.options = c.google.protobuf.OneofOptions.fromObject(e.options);
        }
        return t;
    }, m.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.OneofOptions.toObject(e.options, t)), n;
    }, m.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, m), n.EnumDescriptorProto = (v.prototype.name = "", v.prototype.value = u.emptyArray, v.prototype.options = null, v.prototype.reservedRange = u.emptyArray, v.prototype.reservedName = u.emptyArray, v.create = function(e) {
        return new v(e);
    }, v.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.value && e.value.length) for(var n = 0; n < e.value.length; ++n)c.google.protobuf.EnumValueDescriptorProto.encode(e.value[n], t.uint32(18).fork()).ldelim();
        if (null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.EnumOptions.encode(e.options, t.uint32(26).fork()).ldelim(), null != e.reservedRange && e.reservedRange.length) for(n = 0; n < e.reservedRange.length; ++n)c.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(e.reservedRange[n], t.uint32(34).fork()).ldelim();
        if (null != e.reservedName && e.reservedName.length) for(n = 0; n < e.reservedName.length; ++n)t.uint32(42).string(e.reservedName[n]);
        return t;
    }, v.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, v.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.EnumDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.value && o.value.length || (o.value = []), o.value.push(c.google.protobuf.EnumValueDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.options = c.google.protobuf.EnumOptions.decode(e, e.uint32());
                    break;
                case 4:
                    o.reservedRange && o.reservedRange.length || (o.reservedRange = []), o.reservedRange.push(c.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(e, e.uint32()));
                    break;
                case 5:
                    o.reservedName && o.reservedName.length || (o.reservedName = []), o.reservedName.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, v.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, v.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.value && e.hasOwnProperty("value")) {
            if (!Array.isArray(e.value)) return "value: array expected";
            for(var t = 0; t < e.value.length; ++t)if (n = c.google.protobuf.EnumValueDescriptorProto.verify(e.value[t])) return "value." + n;
        }
        if (null != e.options && e.hasOwnProperty("options") && (n = c.google.protobuf.EnumOptions.verify(e.options))) return "options." + n;
        if (null != e.reservedRange && e.hasOwnProperty("reservedRange")) {
            if (!Array.isArray(e.reservedRange)) return "reservedRange: array expected";
            for(var n, t = 0; t < e.reservedRange.length; ++t)if (n = c.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(e.reservedRange[t])) return "reservedRange." + n;
        }
        if (null != e.reservedName && e.hasOwnProperty("reservedName")) {
            if (!Array.isArray(e.reservedName)) return "reservedName: array expected";
            for(t = 0; t < e.reservedName.length; ++t)if (!u.isString(e.reservedName[t])) return "reservedName: string[] expected";
        }
        return null;
    }, v.fromObject = function(e) {
        if (e instanceof c.google.protobuf.EnumDescriptorProto) return e;
        var t = new c.google.protobuf.EnumDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.value) {
            if (!Array.isArray(e.value)) throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
            t.value = [];
            for(var n = 0; n < e.value.length; ++n){
                if ("object" != typeof e.value[n]) throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                t.value[n] = c.google.protobuf.EnumValueDescriptorProto.fromObject(e.value[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
            t.options = c.google.protobuf.EnumOptions.fromObject(e.options);
        }
        if (e.reservedRange) {
            if (!Array.isArray(e.reservedRange)) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
            t.reservedRange = [];
            for(n = 0; n < e.reservedRange.length; ++n){
                if ("object" != typeof e.reservedRange[n]) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                t.reservedRange[n] = c.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(e.reservedRange[n]);
            }
        }
        if (e.reservedName) {
            if (!Array.isArray(e.reservedName)) throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
            t.reservedName = [];
            for(n = 0; n < e.reservedName.length; ++n)t.reservedName[n] = String(e.reservedName[n]);
        }
        return t;
    }, v.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.value = [], n.reservedRange = [], n.reservedName = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.value && e.value.length) {
            n.value = [];
            for(var o = 0; o < e.value.length; ++o)n.value[o] = c.google.protobuf.EnumValueDescriptorProto.toObject(e.value[o], t);
        }
        if (null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.EnumOptions.toObject(e.options, t)), e.reservedRange && e.reservedRange.length) {
            n.reservedRange = [];
            for(o = 0; o < e.reservedRange.length; ++o)n.reservedRange[o] = c.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(e.reservedRange[o], t);
        }
        if (e.reservedName && e.reservedName.length) {
            n.reservedName = [];
            for(o = 0; o < e.reservedName.length; ++o)n.reservedName[o] = e.reservedName[o];
        }
        return n;
    }, v.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, v.EnumReservedRange = (P.prototype.start = 0, P.prototype.end = 0, P.create = function(e) {
        return new P(e);
    }, P.encode = function(e, t) {
        return t = t || r.create(), null != e.start && Object.hasOwnProperty.call(e, "start") && t.uint32(8).int32(e.start), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(16).int32(e.end), t;
    }, P.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, P.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.EnumDescriptorProto.EnumReservedRange; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.start = e.int32();
                    break;
                case 2:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, P.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, P.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.start && e.hasOwnProperty("start") && !u.isInteger(e.start) ? "start: integer expected" : null != e.end && e.hasOwnProperty("end") && !u.isInteger(e.end) ? "end: integer expected" : null;
    }, P.fromObject = function(e) {
        var t;
        return e instanceof c.google.protobuf.EnumDescriptorProto.EnumReservedRange ? e : (t = new c.google.protobuf.EnumDescriptorProto.EnumReservedRange, null != e.start && (t.start = 0 | e.start), null != e.end && (t.end = 0 | e.end), t);
    }, P.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.start = 0, n.end = 0), null != e.start && e.hasOwnProperty("start") && (n.start = e.start), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, P.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, P), v), n.EnumValueDescriptorProto = (w.prototype.name = "", w.prototype.number = 0, w.prototype.options = null, w.create = function(e) {
        return new w(e);
    }, w.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.number && Object.hasOwnProperty.call(e, "number") && t.uint32(16).int32(e.number), null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.EnumValueOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, w.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, w.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.EnumValueDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.number = e.int32();
                    break;
                case 3:
                    o.options = c.google.protobuf.EnumValueOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, w.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, w.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.number && e.hasOwnProperty("number") && !u.isInteger(e.number)) return "number: integer expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            e = c.google.protobuf.EnumValueOptions.verify(e.options);
            if (e) return "options." + e;
        }
        return null;
    }, w.fromObject = function(e) {
        if (e instanceof c.google.protobuf.EnumValueDescriptorProto) return e;
        var t = new c.google.protobuf.EnumValueDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.number && (t.number = 0 | e.number), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
            t.options = c.google.protobuf.EnumValueOptions.fromObject(e.options);
        }
        return t;
    }, w.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.number = 0, n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.number && e.hasOwnProperty("number") && (n.number = e.number), null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.EnumValueOptions.toObject(e.options, t)), n;
    }, w.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, w), n.ServiceDescriptorProto = (j.prototype.name = "", j.prototype.method = u.emptyArray, j.prototype.options = null, j.create = function(e) {
        return new j(e);
    }, j.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.method && e.method.length) for(var n = 0; n < e.method.length; ++n)c.google.protobuf.MethodDescriptorProto.encode(e.method[n], t.uint32(18).fork()).ldelim();
        return null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.ServiceOptions.encode(e.options, t.uint32(26).fork()).ldelim(), t;
    }, j.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, j.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.ServiceDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.method && o.method.length || (o.method = []), o.method.push(c.google.protobuf.MethodDescriptorProto.decode(e, e.uint32()));
                    break;
                case 3:
                    o.options = c.google.protobuf.ServiceOptions.decode(e, e.uint32());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, j.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, j.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.method && e.hasOwnProperty("method")) {
            if (!Array.isArray(e.method)) return "method: array expected";
            for(var t = 0; t < e.method.length; ++t)if (n = c.google.protobuf.MethodDescriptorProto.verify(e.method[t])) return "method." + n;
        }
        var n;
        if (null != e.options && e.hasOwnProperty("options") && (n = c.google.protobuf.ServiceOptions.verify(e.options))) return "options." + n;
        return null;
    }, j.fromObject = function(e) {
        if (e instanceof c.google.protobuf.ServiceDescriptorProto) return e;
        var t = new c.google.protobuf.ServiceDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), e.method) {
            if (!Array.isArray(e.method)) throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
            t.method = [];
            for(var n = 0; n < e.method.length; ++n){
                if ("object" != typeof e.method[n]) throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                t.method[n] = c.google.protobuf.MethodDescriptorProto.fromObject(e.method[n]);
            }
        }
        if (null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
            t.options = c.google.protobuf.ServiceOptions.fromObject(e.options);
        }
        return t;
    }, j.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.method = []), t.defaults && (n.name = "", n.options = null), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), e.method && e.method.length) {
            n.method = [];
            for(var o = 0; o < e.method.length; ++o)n.method[o] = c.google.protobuf.MethodDescriptorProto.toObject(e.method[o], t);
        }
        return null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.ServiceOptions.toObject(e.options, t)), n;
    }, j.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, j), n.MethodDescriptorProto = (x.prototype.name = "", x.prototype.inputType = "", x.prototype.outputType = "", x.prototype.options = null, x.prototype.clientStreaming = !1, x.prototype.serverStreaming = !1, x.create = function(e) {
        return new x(e);
    }, x.encode = function(e, t) {
        return t = t || r.create(), null != e.name && Object.hasOwnProperty.call(e, "name") && t.uint32(10).string(e.name), null != e.inputType && Object.hasOwnProperty.call(e, "inputType") && t.uint32(18).string(e.inputType), null != e.outputType && Object.hasOwnProperty.call(e, "outputType") && t.uint32(26).string(e.outputType), null != e.options && Object.hasOwnProperty.call(e, "options") && c.google.protobuf.MethodOptions.encode(e.options, t.uint32(34).fork()).ldelim(), null != e.clientStreaming && Object.hasOwnProperty.call(e, "clientStreaming") && t.uint32(40).bool(e.clientStreaming), null != e.serverStreaming && Object.hasOwnProperty.call(e, "serverStreaming") && t.uint32(48).bool(e.serverStreaming), t;
    }, x.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, x.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.MethodDescriptorProto; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.name = e.string();
                    break;
                case 2:
                    o.inputType = e.string();
                    break;
                case 3:
                    o.outputType = e.string();
                    break;
                case 4:
                    o.options = c.google.protobuf.MethodOptions.decode(e, e.uint32());
                    break;
                case 5:
                    o.clientStreaming = e.bool();
                    break;
                case 6:
                    o.serverStreaming = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, x.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, x.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name") && !u.isString(e.name)) return "name: string expected";
        if (null != e.inputType && e.hasOwnProperty("inputType") && !u.isString(e.inputType)) return "inputType: string expected";
        if (null != e.outputType && e.hasOwnProperty("outputType") && !u.isString(e.outputType)) return "outputType: string expected";
        if (null != e.options && e.hasOwnProperty("options")) {
            var t = c.google.protobuf.MethodOptions.verify(e.options);
            if (t) return "options." + t;
        }
        return null != e.clientStreaming && e.hasOwnProperty("clientStreaming") && "boolean" != typeof e.clientStreaming ? "clientStreaming: boolean expected" : null != e.serverStreaming && e.hasOwnProperty("serverStreaming") && "boolean" != typeof e.serverStreaming ? "serverStreaming: boolean expected" : null;
    }, x.fromObject = function(e) {
        if (e instanceof c.google.protobuf.MethodDescriptorProto) return e;
        var t = new c.google.protobuf.MethodDescriptorProto;
        if (null != e.name && (t.name = String(e.name)), null != e.inputType && (t.inputType = String(e.inputType)), null != e.outputType && (t.outputType = String(e.outputType)), null != e.options) {
            if ("object" != typeof e.options) throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
            t.options = c.google.protobuf.MethodOptions.fromObject(e.options);
        }
        return null != e.clientStreaming && (t.clientStreaming = Boolean(e.clientStreaming)), null != e.serverStreaming && (t.serverStreaming = Boolean(e.serverStreaming)), t;
    }, x.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.name = "", n.inputType = "", n.outputType = "", n.options = null, n.clientStreaming = !1, n.serverStreaming = !1), null != e.name && e.hasOwnProperty("name") && (n.name = e.name), null != e.inputType && e.hasOwnProperty("inputType") && (n.inputType = e.inputType), null != e.outputType && e.hasOwnProperty("outputType") && (n.outputType = e.outputType), null != e.options && e.hasOwnProperty("options") && (n.options = c.google.protobuf.MethodOptions.toObject(e.options, t)), null != e.clientStreaming && e.hasOwnProperty("clientStreaming") && (n.clientStreaming = e.clientStreaming), null != e.serverStreaming && e.hasOwnProperty("serverStreaming") && (n.serverStreaming = e.serverStreaming), n;
    }, x.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, x), n.FileOptions = (S.prototype.javaPackage = "", S.prototype.javaOuterClassname = "", S.prototype.javaMultipleFiles = !1, S.prototype.javaGenerateEqualsAndHash = !1, S.prototype.javaStringCheckUtf8 = !1, S.prototype.optimizeFor = 1, S.prototype.goPackage = "", S.prototype.ccGenericServices = !1, S.prototype.javaGenericServices = !1, S.prototype.pyGenericServices = !1, S.prototype.phpGenericServices = !1, S.prototype.deprecated = !1, S.prototype.ccEnableArenas = !0, S.prototype.objcClassPrefix = "", S.prototype.csharpNamespace = "", S.prototype.swiftPrefix = "", S.prototype.phpClassPrefix = "", S.prototype.phpNamespace = "", S.prototype.phpMetadataNamespace = "", S.prototype.rubyPackage = "", S.prototype.uninterpretedOption = u.emptyArray, S.create = function(e) {
        return new S(e);
    }, S.encode = function(e, t) {
        if (t = t || r.create(), null != e.javaPackage && Object.hasOwnProperty.call(e, "javaPackage") && t.uint32(10).string(e.javaPackage), null != e.javaOuterClassname && Object.hasOwnProperty.call(e, "javaOuterClassname") && t.uint32(66).string(e.javaOuterClassname), null != e.optimizeFor && Object.hasOwnProperty.call(e, "optimizeFor") && t.uint32(72).int32(e.optimizeFor), null != e.javaMultipleFiles && Object.hasOwnProperty.call(e, "javaMultipleFiles") && t.uint32(80).bool(e.javaMultipleFiles), null != e.goPackage && Object.hasOwnProperty.call(e, "goPackage") && t.uint32(90).string(e.goPackage), null != e.ccGenericServices && Object.hasOwnProperty.call(e, "ccGenericServices") && t.uint32(128).bool(e.ccGenericServices), null != e.javaGenericServices && Object.hasOwnProperty.call(e, "javaGenericServices") && t.uint32(136).bool(e.javaGenericServices), null != e.pyGenericServices && Object.hasOwnProperty.call(e, "pyGenericServices") && t.uint32(144).bool(e.pyGenericServices), null != e.javaGenerateEqualsAndHash && Object.hasOwnProperty.call(e, "javaGenerateEqualsAndHash") && t.uint32(160).bool(e.javaGenerateEqualsAndHash), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(184).bool(e.deprecated), null != e.javaStringCheckUtf8 && Object.hasOwnProperty.call(e, "javaStringCheckUtf8") && t.uint32(216).bool(e.javaStringCheckUtf8), null != e.ccEnableArenas && Object.hasOwnProperty.call(e, "ccEnableArenas") && t.uint32(248).bool(e.ccEnableArenas), null != e.objcClassPrefix && Object.hasOwnProperty.call(e, "objcClassPrefix") && t.uint32(290).string(e.objcClassPrefix), null != e.csharpNamespace && Object.hasOwnProperty.call(e, "csharpNamespace") && t.uint32(298).string(e.csharpNamespace), null != e.swiftPrefix && Object.hasOwnProperty.call(e, "swiftPrefix") && t.uint32(314).string(e.swiftPrefix), null != e.phpClassPrefix && Object.hasOwnProperty.call(e, "phpClassPrefix") && t.uint32(322).string(e.phpClassPrefix), null != e.phpNamespace && Object.hasOwnProperty.call(e, "phpNamespace") && t.uint32(330).string(e.phpNamespace), null != e.phpGenericServices && Object.hasOwnProperty.call(e, "phpGenericServices") && t.uint32(336).bool(e.phpGenericServices), null != e.phpMetadataNamespace && Object.hasOwnProperty.call(e, "phpMetadataNamespace") && t.uint32(354).string(e.phpMetadataNamespace), null != e.rubyPackage && Object.hasOwnProperty.call(e, "rubyPackage") && t.uint32(362).string(e.rubyPackage), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, S.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, S.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.FileOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.javaPackage = e.string();
                    break;
                case 8:
                    o.javaOuterClassname = e.string();
                    break;
                case 10:
                    o.javaMultipleFiles = e.bool();
                    break;
                case 20:
                    o.javaGenerateEqualsAndHash = e.bool();
                    break;
                case 27:
                    o.javaStringCheckUtf8 = e.bool();
                    break;
                case 9:
                    o.optimizeFor = e.int32();
                    break;
                case 11:
                    o.goPackage = e.string();
                    break;
                case 16:
                    o.ccGenericServices = e.bool();
                    break;
                case 17:
                    o.javaGenericServices = e.bool();
                    break;
                case 18:
                    o.pyGenericServices = e.bool();
                    break;
                case 42:
                    o.phpGenericServices = e.bool();
                    break;
                case 23:
                    o.deprecated = e.bool();
                    break;
                case 31:
                    o.ccEnableArenas = e.bool();
                    break;
                case 36:
                    o.objcClassPrefix = e.string();
                    break;
                case 37:
                    o.csharpNamespace = e.string();
                    break;
                case 39:
                    o.swiftPrefix = e.string();
                    break;
                case 40:
                    o.phpClassPrefix = e.string();
                    break;
                case 41:
                    o.phpNamespace = e.string();
                    break;
                case 44:
                    o.phpMetadataNamespace = e.string();
                    break;
                case 45:
                    o.rubyPackage = e.string();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, S.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, S.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.javaPackage && e.hasOwnProperty("javaPackage") && !u.isString(e.javaPackage)) return "javaPackage: string expected";
        if (null != e.javaOuterClassname && e.hasOwnProperty("javaOuterClassname") && !u.isString(e.javaOuterClassname)) return "javaOuterClassname: string expected";
        if (null != e.javaMultipleFiles && e.hasOwnProperty("javaMultipleFiles") && "boolean" != typeof e.javaMultipleFiles) return "javaMultipleFiles: boolean expected";
        if (null != e.javaGenerateEqualsAndHash && e.hasOwnProperty("javaGenerateEqualsAndHash") && "boolean" != typeof e.javaGenerateEqualsAndHash) return "javaGenerateEqualsAndHash: boolean expected";
        if (null != e.javaStringCheckUtf8 && e.hasOwnProperty("javaStringCheckUtf8") && "boolean" != typeof e.javaStringCheckUtf8) return "javaStringCheckUtf8: boolean expected";
        if (null != e.optimizeFor && e.hasOwnProperty("optimizeFor")) switch(e.optimizeFor){
            default:
                return "optimizeFor: enum value expected";
            case 1:
            case 2:
            case 3:
        }
        if (null != e.goPackage && e.hasOwnProperty("goPackage") && !u.isString(e.goPackage)) return "goPackage: string expected";
        if (null != e.ccGenericServices && e.hasOwnProperty("ccGenericServices") && "boolean" != typeof e.ccGenericServices) return "ccGenericServices: boolean expected";
        if (null != e.javaGenericServices && e.hasOwnProperty("javaGenericServices") && "boolean" != typeof e.javaGenericServices) return "javaGenericServices: boolean expected";
        if (null != e.pyGenericServices && e.hasOwnProperty("pyGenericServices") && "boolean" != typeof e.pyGenericServices) return "pyGenericServices: boolean expected";
        if (null != e.phpGenericServices && e.hasOwnProperty("phpGenericServices") && "boolean" != typeof e.phpGenericServices) return "phpGenericServices: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.ccEnableArenas && e.hasOwnProperty("ccEnableArenas") && "boolean" != typeof e.ccEnableArenas) return "ccEnableArenas: boolean expected";
        if (null != e.objcClassPrefix && e.hasOwnProperty("objcClassPrefix") && !u.isString(e.objcClassPrefix)) return "objcClassPrefix: string expected";
        if (null != e.csharpNamespace && e.hasOwnProperty("csharpNamespace") && !u.isString(e.csharpNamespace)) return "csharpNamespace: string expected";
        if (null != e.swiftPrefix && e.hasOwnProperty("swiftPrefix") && !u.isString(e.swiftPrefix)) return "swiftPrefix: string expected";
        if (null != e.phpClassPrefix && e.hasOwnProperty("phpClassPrefix") && !u.isString(e.phpClassPrefix)) return "phpClassPrefix: string expected";
        if (null != e.phpNamespace && e.hasOwnProperty("phpNamespace") && !u.isString(e.phpNamespace)) return "phpNamespace: string expected";
        if (null != e.phpMetadataNamespace && e.hasOwnProperty("phpMetadataNamespace") && !u.isString(e.phpMetadataNamespace)) return "phpMetadataNamespace: string expected";
        if (null != e.rubyPackage && e.hasOwnProperty("rubyPackage") && !u.isString(e.rubyPackage)) return "rubyPackage: string expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, S.fromObject = function(e) {
        if (e instanceof c.google.protobuf.FileOptions) return e;
        var t = new c.google.protobuf.FileOptions;
        switch(null != e.javaPackage && (t.javaPackage = String(e.javaPackage)), null != e.javaOuterClassname && (t.javaOuterClassname = String(e.javaOuterClassname)), null != e.javaMultipleFiles && (t.javaMultipleFiles = Boolean(e.javaMultipleFiles)), null != e.javaGenerateEqualsAndHash && (t.javaGenerateEqualsAndHash = Boolean(e.javaGenerateEqualsAndHash)), null != e.javaStringCheckUtf8 && (t.javaStringCheckUtf8 = Boolean(e.javaStringCheckUtf8)), e.optimizeFor){
            case "SPEED":
            case 1:
                t.optimizeFor = 1;
                break;
            case "CODE_SIZE":
            case 2:
                t.optimizeFor = 2;
                break;
            case "LITE_RUNTIME":
            case 3:
                t.optimizeFor = 3;
        }
        if (null != e.goPackage && (t.goPackage = String(e.goPackage)), null != e.ccGenericServices && (t.ccGenericServices = Boolean(e.ccGenericServices)), null != e.javaGenericServices && (t.javaGenericServices = Boolean(e.javaGenericServices)), null != e.pyGenericServices && (t.pyGenericServices = Boolean(e.pyGenericServices)), null != e.phpGenericServices && (t.phpGenericServices = Boolean(e.phpGenericServices)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.ccEnableArenas && (t.ccEnableArenas = Boolean(e.ccEnableArenas)), null != e.objcClassPrefix && (t.objcClassPrefix = String(e.objcClassPrefix)), null != e.csharpNamespace && (t.csharpNamespace = String(e.csharpNamespace)), null != e.swiftPrefix && (t.swiftPrefix = String(e.swiftPrefix)), null != e.phpClassPrefix && (t.phpClassPrefix = String(e.phpClassPrefix)), null != e.phpNamespace && (t.phpNamespace = String(e.phpNamespace)), null != e.phpMetadataNamespace && (t.phpMetadataNamespace = String(e.phpMetadataNamespace)), null != e.rubyPackage && (t.rubyPackage = String(e.rubyPackage)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, S.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.javaPackage = "", n.javaOuterClassname = "", n.optimizeFor = t.enums === String ? "SPEED" : 1, n.javaMultipleFiles = !1, n.goPackage = "", n.ccGenericServices = !1, n.javaGenericServices = !1, n.pyGenericServices = !1, n.javaGenerateEqualsAndHash = !1, n.deprecated = !1, n.javaStringCheckUtf8 = !1, n.ccEnableArenas = !0, n.objcClassPrefix = "", n.csharpNamespace = "", n.swiftPrefix = "", n.phpClassPrefix = "", n.phpNamespace = "", n.phpGenericServices = !1, n.phpMetadataNamespace = "", n.rubyPackage = ""), null != e.javaPackage && e.hasOwnProperty("javaPackage") && (n.javaPackage = e.javaPackage), null != e.javaOuterClassname && e.hasOwnProperty("javaOuterClassname") && (n.javaOuterClassname = e.javaOuterClassname), null != e.optimizeFor && e.hasOwnProperty("optimizeFor") && (n.optimizeFor = t.enums === String ? c.google.protobuf.FileOptions.OptimizeMode[e.optimizeFor] : e.optimizeFor), null != e.javaMultipleFiles && e.hasOwnProperty("javaMultipleFiles") && (n.javaMultipleFiles = e.javaMultipleFiles), null != e.goPackage && e.hasOwnProperty("goPackage") && (n.goPackage = e.goPackage), null != e.ccGenericServices && e.hasOwnProperty("ccGenericServices") && (n.ccGenericServices = e.ccGenericServices), null != e.javaGenericServices && e.hasOwnProperty("javaGenericServices") && (n.javaGenericServices = e.javaGenericServices), null != e.pyGenericServices && e.hasOwnProperty("pyGenericServices") && (n.pyGenericServices = e.pyGenericServices), null != e.javaGenerateEqualsAndHash && e.hasOwnProperty("javaGenerateEqualsAndHash") && (n.javaGenerateEqualsAndHash = e.javaGenerateEqualsAndHash), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.javaStringCheckUtf8 && e.hasOwnProperty("javaStringCheckUtf8") && (n.javaStringCheckUtf8 = e.javaStringCheckUtf8), null != e.ccEnableArenas && e.hasOwnProperty("ccEnableArenas") && (n.ccEnableArenas = e.ccEnableArenas), null != e.objcClassPrefix && e.hasOwnProperty("objcClassPrefix") && (n.objcClassPrefix = e.objcClassPrefix), null != e.csharpNamespace && e.hasOwnProperty("csharpNamespace") && (n.csharpNamespace = e.csharpNamespace), null != e.swiftPrefix && e.hasOwnProperty("swiftPrefix") && (n.swiftPrefix = e.swiftPrefix), null != e.phpClassPrefix && e.hasOwnProperty("phpClassPrefix") && (n.phpClassPrefix = e.phpClassPrefix), null != e.phpNamespace && e.hasOwnProperty("phpNamespace") && (n.phpNamespace = e.phpNamespace), null != e.phpGenericServices && e.hasOwnProperty("phpGenericServices") && (n.phpGenericServices = e.phpGenericServices), null != e.phpMetadataNamespace && e.hasOwnProperty("phpMetadataNamespace") && (n.phpMetadataNamespace = e.phpMetadataNamespace), null != e.rubyPackage && e.hasOwnProperty("rubyPackage") && (n.rubyPackage = e.rubyPackage), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, S.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, S.OptimizeMode = (e = {}, (t = Object.create(e))[e[1] = "SPEED"] = 1, t[e[2] = "CODE_SIZE"] = 2, t[e[3] = "LITE_RUNTIME"] = 3, t), S), n.MessageOptions = (k.prototype.messageSetWireFormat = !1, k.prototype.noStandardDescriptorAccessor = !1, k.prototype.deprecated = !1, k.prototype.mapEntry = !1, k.prototype.uninterpretedOption = u.emptyArray, k.create = function(e) {
        return new k(e);
    }, k.encode = function(e, t) {
        if (t = t || r.create(), null != e.messageSetWireFormat && Object.hasOwnProperty.call(e, "messageSetWireFormat") && t.uint32(8).bool(e.messageSetWireFormat), null != e.noStandardDescriptorAccessor && Object.hasOwnProperty.call(e, "noStandardDescriptorAccessor") && t.uint32(16).bool(e.noStandardDescriptorAccessor), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.mapEntry && Object.hasOwnProperty.call(e, "mapEntry") && t.uint32(56).bool(e.mapEntry), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, k.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, k.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.MessageOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.messageSetWireFormat = e.bool();
                    break;
                case 2:
                    o.noStandardDescriptorAccessor = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 7:
                    o.mapEntry = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, k.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, k.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.messageSetWireFormat && e.hasOwnProperty("messageSetWireFormat") && "boolean" != typeof e.messageSetWireFormat) return "messageSetWireFormat: boolean expected";
        if (null != e.noStandardDescriptorAccessor && e.hasOwnProperty("noStandardDescriptorAccessor") && "boolean" != typeof e.noStandardDescriptorAccessor) return "noStandardDescriptorAccessor: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.mapEntry && e.hasOwnProperty("mapEntry") && "boolean" != typeof e.mapEntry) return "mapEntry: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, k.fromObject = function(e) {
        if (e instanceof c.google.protobuf.MessageOptions) return e;
        var t = new c.google.protobuf.MessageOptions;
        if (null != e.messageSetWireFormat && (t.messageSetWireFormat = Boolean(e.messageSetWireFormat)), null != e.noStandardDescriptorAccessor && (t.noStandardDescriptorAccessor = Boolean(e.noStandardDescriptorAccessor)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.mapEntry && (t.mapEntry = Boolean(e.mapEntry)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, k.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.messageSetWireFormat = !1, n.noStandardDescriptorAccessor = !1, n.deprecated = !1, n.mapEntry = !1), null != e.messageSetWireFormat && e.hasOwnProperty("messageSetWireFormat") && (n.messageSetWireFormat = e.messageSetWireFormat), null != e.noStandardDescriptorAccessor && e.hasOwnProperty("noStandardDescriptorAccessor") && (n.noStandardDescriptorAccessor = e.noStandardDescriptorAccessor), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.mapEntry && e.hasOwnProperty("mapEntry") && (n.mapEntry = e.mapEntry), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, k.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, k), n.FieldOptions = (D.prototype.ctype = 0, D.prototype.packed = !1, D.prototype.jstype = 0, D.prototype.lazy = !1, D.prototype.deprecated = !1, D.prototype.weak = !1, D.prototype.uninterpretedOption = u.emptyArray, D.create = function(e) {
        return new D(e);
    }, D.encode = function(e, t) {
        if (t = t || r.create(), null != e.ctype && Object.hasOwnProperty.call(e, "ctype") && t.uint32(8).int32(e.ctype), null != e.packed && Object.hasOwnProperty.call(e, "packed") && t.uint32(16).bool(e.packed), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.lazy && Object.hasOwnProperty.call(e, "lazy") && t.uint32(40).bool(e.lazy), null != e.jstype && Object.hasOwnProperty.call(e, "jstype") && t.uint32(48).int32(e.jstype), null != e.weak && Object.hasOwnProperty.call(e, "weak") && t.uint32(80).bool(e.weak), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, D.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, D.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.FieldOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.ctype = e.int32();
                    break;
                case 2:
                    o.packed = e.bool();
                    break;
                case 6:
                    o.jstype = e.int32();
                    break;
                case 5:
                    o.lazy = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 10:
                    o.weak = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, D.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, D.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.ctype && e.hasOwnProperty("ctype")) switch(e.ctype){
            default:
                return "ctype: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.packed && e.hasOwnProperty("packed") && "boolean" != typeof e.packed) return "packed: boolean expected";
        if (null != e.jstype && e.hasOwnProperty("jstype")) switch(e.jstype){
            default:
                return "jstype: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.lazy && e.hasOwnProperty("lazy") && "boolean" != typeof e.lazy) return "lazy: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.weak && e.hasOwnProperty("weak") && "boolean" != typeof e.weak) return "weak: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, D.fromObject = function(e) {
        if (e instanceof c.google.protobuf.FieldOptions) return e;
        var t = new c.google.protobuf.FieldOptions;
        switch(e.ctype){
            case "STRING":
            case 0:
                t.ctype = 0;
                break;
            case "CORD":
            case 1:
                t.ctype = 1;
                break;
            case "STRING_PIECE":
            case 2:
                t.ctype = 2;
        }
        switch(null != e.packed && (t.packed = Boolean(e.packed)), e.jstype){
            case "JS_NORMAL":
            case 0:
                t.jstype = 0;
                break;
            case "JS_STRING":
            case 1:
                t.jstype = 1;
                break;
            case "JS_NUMBER":
            case 2:
                t.jstype = 2;
        }
        if (null != e.lazy && (t.lazy = Boolean(e.lazy)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), null != e.weak && (t.weak = Boolean(e.weak)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, D.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.ctype = t.enums === String ? "STRING" : 0, n.packed = !1, n.deprecated = !1, n.lazy = !1, n.jstype = t.enums === String ? "JS_NORMAL" : 0, n.weak = !1), null != e.ctype && e.hasOwnProperty("ctype") && (n.ctype = t.enums === String ? c.google.protobuf.FieldOptions.CType[e.ctype] : e.ctype), null != e.packed && e.hasOwnProperty("packed") && (n.packed = e.packed), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.lazy && e.hasOwnProperty("lazy") && (n.lazy = e.lazy), null != e.jstype && e.hasOwnProperty("jstype") && (n.jstype = t.enums === String ? c.google.protobuf.FieldOptions.JSType[e.jstype] : e.jstype), null != e.weak && e.hasOwnProperty("weak") && (n.weak = e.weak), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, D.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, D.CType = (e = {}, (t = Object.create(e))[e[0] = "STRING"] = 0, t[e[1] = "CORD"] = 1, t[e[2] = "STRING_PIECE"] = 2, t), D.JSType = (e = {}, (t = Object.create(e))[e[0] = "JS_NORMAL"] = 0, t[e[1] = "JS_STRING"] = 1, t[e[2] = "JS_NUMBER"] = 2, t), D), n.OneofOptions = (M.prototype.uninterpretedOption = u.emptyArray, M.create = function(e) {
        return new M(e);
    }, M.encode = function(e, t) {
        if (t = t || r.create(), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, M.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, M.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.OneofOptions; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 999 ? (o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, M.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, M.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, M.fromObject = function(e) {
        if (e instanceof c.google.protobuf.OneofOptions) return e;
        var t = new c.google.protobuf.OneofOptions;
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, M.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, M.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, M), n.EnumOptions = (T.prototype.allowAlias = !1, T.prototype.deprecated = !1, T.prototype.uninterpretedOption = u.emptyArray, T.create = function(e) {
        return new T(e);
    }, T.encode = function(e, t) {
        if (t = t || r.create(), null != e.allowAlias && Object.hasOwnProperty.call(e, "allowAlias") && t.uint32(16).bool(e.allowAlias), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(24).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, T.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, T.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.EnumOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 2:
                    o.allowAlias = e.bool();
                    break;
                case 3:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, T.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, T.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.allowAlias && e.hasOwnProperty("allowAlias") && "boolean" != typeof e.allowAlias) return "allowAlias: boolean expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, T.fromObject = function(e) {
        if (e instanceof c.google.protobuf.EnumOptions) return e;
        var t = new c.google.protobuf.EnumOptions;
        if (null != e.allowAlias && (t.allowAlias = Boolean(e.allowAlias)), null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, T.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.allowAlias = !1, n.deprecated = !1), null != e.allowAlias && e.hasOwnProperty("allowAlias") && (n.allowAlias = e.allowAlias), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, T.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, T), n.EnumValueOptions = (E.prototype.deprecated = !1, E.prototype.uninterpretedOption = u.emptyArray, E.create = function(e) {
        return new E(e);
    }, E.encode = function(e, t) {
        if (t = t || r.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(8).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return t;
    }, E.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, E.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.EnumValueOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, E.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, E.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null;
    }, E.fromObject = function(e) {
        if (e instanceof c.google.protobuf.EnumValueOptions) return e;
        var t = new c.google.protobuf.EnumValueOptions;
        if (null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return t;
    }, E.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.deprecated = !1), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return n;
    }, E.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, E), n.ServiceOptions = (A.prototype.deprecated = !1, A.prototype.uninterpretedOption = u.emptyArray, A.prototype[".google.api.defaultHost"] = "", A.prototype[".google.api.oauthScopes"] = "", A.create = function(e) {
        return new A(e);
    }, A.encode = function(e, t) {
        if (t = t || r.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(264).bool(e.deprecated), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        return null != e[".google.api.defaultHost"] && Object.hasOwnProperty.call(e, ".google.api.defaultHost") && t.uint32(8394).string(e[".google.api.defaultHost"]), null != e[".google.api.oauthScopes"] && Object.hasOwnProperty.call(e, ".google.api.oauthScopes") && t.uint32(8402).string(e[".google.api.oauthScopes"]), t;
    }, A.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, A.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.ServiceOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 33:
                    o.deprecated = e.bool();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 1049:
                    o[".google.api.defaultHost"] = e.string();
                    break;
                case 1050:
                    o[".google.api.oauthScopes"] = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, A.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, A.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t]);
                if (n) return "uninterpretedOption." + n;
            }
        }
        return null != e[".google.api.defaultHost"] && e.hasOwnProperty(".google.api.defaultHost") && !u.isString(e[".google.api.defaultHost"]) ? ".google.api.defaultHost: string expected" : null != e[".google.api.oauthScopes"] && e.hasOwnProperty(".google.api.oauthScopes") && !u.isString(e[".google.api.oauthScopes"]) ? ".google.api.oauthScopes: string expected" : null;
    }, A.fromObject = function(e) {
        if (e instanceof c.google.protobuf.ServiceOptions) return e;
        var t = new c.google.protobuf.ServiceOptions;
        if (null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        return null != e[".google.api.defaultHost"] && (t[".google.api.defaultHost"] = String(e[".google.api.defaultHost"])), null != e[".google.api.oauthScopes"] && (t[".google.api.oauthScopes"] = String(e[".google.api.oauthScopes"])), t;
    }, A.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = []), t.defaults && (n.deprecated = !1, n[".google.api.defaultHost"] = "", n[".google.api.oauthScopes"] = ""), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        return null != e[".google.api.defaultHost"] && e.hasOwnProperty(".google.api.defaultHost") && (n[".google.api.defaultHost"] = e[".google.api.defaultHost"]), null != e[".google.api.oauthScopes"] && e.hasOwnProperty(".google.api.oauthScopes") && (n[".google.api.oauthScopes"] = e[".google.api.oauthScopes"]), n;
    }, A.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, A), n.MethodOptions = (N.prototype.deprecated = !1, N.prototype.idempotencyLevel = 0, N.prototype.uninterpretedOption = u.emptyArray, N.prototype[".google.api.http"] = null, N.prototype[".google.api.methodSignature"] = u.emptyArray, N.create = function(e) {
        return new N(e);
    }, N.encode = function(e, t) {
        if (t = t || r.create(), null != e.deprecated && Object.hasOwnProperty.call(e, "deprecated") && t.uint32(264).bool(e.deprecated), null != e.idempotencyLevel && Object.hasOwnProperty.call(e, "idempotencyLevel") && t.uint32(272).int32(e.idempotencyLevel), null != e.uninterpretedOption && e.uninterpretedOption.length) for(var n = 0; n < e.uninterpretedOption.length; ++n)c.google.protobuf.UninterpretedOption.encode(e.uninterpretedOption[n], t.uint32(7994).fork()).ldelim();
        if (null != e[".google.api.methodSignature"] && e[".google.api.methodSignature"].length) for(n = 0; n < e[".google.api.methodSignature"].length; ++n)t.uint32(8410).string(e[".google.api.methodSignature"][n]);
        return null != e[".google.api.http"] && Object.hasOwnProperty.call(e, ".google.api.http") && c.google.api.HttpRule.encode(e[".google.api.http"], t.uint32(578365826).fork()).ldelim(), t;
    }, N.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, N.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.MethodOptions; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 33:
                    o.deprecated = e.bool();
                    break;
                case 34:
                    o.idempotencyLevel = e.int32();
                    break;
                case 999:
                    o.uninterpretedOption && o.uninterpretedOption.length || (o.uninterpretedOption = []), o.uninterpretedOption.push(c.google.protobuf.UninterpretedOption.decode(e, e.uint32()));
                    break;
                case 72295728:
                    o[".google.api.http"] = c.google.api.HttpRule.decode(e, e.uint32());
                    break;
                case 1051:
                    o[".google.api.methodSignature"] && o[".google.api.methodSignature"].length || (o[".google.api.methodSignature"] = []), o[".google.api.methodSignature"].push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, N.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, N.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.deprecated && e.hasOwnProperty("deprecated") && "boolean" != typeof e.deprecated) return "deprecated: boolean expected";
        if (null != e.idempotencyLevel && e.hasOwnProperty("idempotencyLevel")) switch(e.idempotencyLevel){
            default:
                return "idempotencyLevel: enum value expected";
            case 0:
            case 1:
            case 2:
        }
        if (null != e.uninterpretedOption && e.hasOwnProperty("uninterpretedOption")) {
            if (!Array.isArray(e.uninterpretedOption)) return "uninterpretedOption: array expected";
            for(var t = 0; t < e.uninterpretedOption.length; ++t)if (n = c.google.protobuf.UninterpretedOption.verify(e.uninterpretedOption[t])) return "uninterpretedOption." + n;
        }
        var n;
        if (null != e[".google.api.http"] && e.hasOwnProperty(".google.api.http") && (n = c.google.api.HttpRule.verify(e[".google.api.http"]))) return ".google.api.http." + n;
        if (null != e[".google.api.methodSignature"] && e.hasOwnProperty(".google.api.methodSignature")) {
            if (!Array.isArray(e[".google.api.methodSignature"])) return ".google.api.methodSignature: array expected";
            for(t = 0; t < e[".google.api.methodSignature"].length; ++t)if (!u.isString(e[".google.api.methodSignature"][t])) return ".google.api.methodSignature: string[] expected";
        }
        return null;
    }, N.fromObject = function(e) {
        if (e instanceof c.google.protobuf.MethodOptions) return e;
        var t = new c.google.protobuf.MethodOptions;
        switch(null != e.deprecated && (t.deprecated = Boolean(e.deprecated)), e.idempotencyLevel){
            case "IDEMPOTENCY_UNKNOWN":
            case 0:
                t.idempotencyLevel = 0;
                break;
            case "NO_SIDE_EFFECTS":
            case 1:
                t.idempotencyLevel = 1;
                break;
            case "IDEMPOTENT":
            case 2:
                t.idempotencyLevel = 2;
        }
        if (e.uninterpretedOption) {
            if (!Array.isArray(e.uninterpretedOption)) throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
            t.uninterpretedOption = [];
            for(var n = 0; n < e.uninterpretedOption.length; ++n){
                if ("object" != typeof e.uninterpretedOption[n]) throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                t.uninterpretedOption[n] = c.google.protobuf.UninterpretedOption.fromObject(e.uninterpretedOption[n]);
            }
        }
        if (null != e[".google.api.http"]) {
            if ("object" != typeof e[".google.api.http"]) throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
            t[".google.api.http"] = c.google.api.HttpRule.fromObject(e[".google.api.http"]);
        }
        if (e[".google.api.methodSignature"]) {
            if (!Array.isArray(e[".google.api.methodSignature"])) throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
            t[".google.api.methodSignature"] = [];
            for(n = 0; n < e[".google.api.methodSignature"].length; ++n)t[".google.api.methodSignature"][n] = String(e[".google.api.methodSignature"][n]);
        }
        return t;
    }, N.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.uninterpretedOption = [], n[".google.api.methodSignature"] = []), t.defaults && (n.deprecated = !1, n.idempotencyLevel = t.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0, n[".google.api.http"] = null), null != e.deprecated && e.hasOwnProperty("deprecated") && (n.deprecated = e.deprecated), null != e.idempotencyLevel && e.hasOwnProperty("idempotencyLevel") && (n.idempotencyLevel = t.enums === String ? c.google.protobuf.MethodOptions.IdempotencyLevel[e.idempotencyLevel] : e.idempotencyLevel), e.uninterpretedOption && e.uninterpretedOption.length) {
            n.uninterpretedOption = [];
            for(var o = 0; o < e.uninterpretedOption.length; ++o)n.uninterpretedOption[o] = c.google.protobuf.UninterpretedOption.toObject(e.uninterpretedOption[o], t);
        }
        if (e[".google.api.methodSignature"] && e[".google.api.methodSignature"].length) {
            n[".google.api.methodSignature"] = [];
            for(o = 0; o < e[".google.api.methodSignature"].length; ++o)n[".google.api.methodSignature"][o] = e[".google.api.methodSignature"][o];
        }
        return null != e[".google.api.http"] && e.hasOwnProperty(".google.api.http") && (n[".google.api.http"] = c.google.api.HttpRule.toObject(e[".google.api.http"], t)), n;
    }, N.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, N.IdempotencyLevel = (e = {}, (t = Object.create(e))[e[0] = "IDEMPOTENCY_UNKNOWN"] = 0, t[e[1] = "NO_SIDE_EFFECTS"] = 1, t[e[2] = "IDEMPOTENT"] = 2, t), N), n.UninterpretedOption = (I.prototype.name = u.emptyArray, I.prototype.identifierValue = "", I.prototype.positiveIntValue = u.Long ? u.Long.fromBits(0, 0, !0) : 0, I.prototype.negativeIntValue = u.Long ? u.Long.fromBits(0, 0, !1) : 0, I.prototype.doubleValue = 0, I.prototype.stringValue = u.newBuffer([]), I.prototype.aggregateValue = "", I.create = function(e) {
        return new I(e);
    }, I.encode = function(e, t) {
        if (t = t || r.create(), null != e.name && e.name.length) for(var n = 0; n < e.name.length; ++n)c.google.protobuf.UninterpretedOption.NamePart.encode(e.name[n], t.uint32(18).fork()).ldelim();
        return null != e.identifierValue && Object.hasOwnProperty.call(e, "identifierValue") && t.uint32(26).string(e.identifierValue), null != e.positiveIntValue && Object.hasOwnProperty.call(e, "positiveIntValue") && t.uint32(32).uint64(e.positiveIntValue), null != e.negativeIntValue && Object.hasOwnProperty.call(e, "negativeIntValue") && t.uint32(40).int64(e.negativeIntValue), null != e.doubleValue && Object.hasOwnProperty.call(e, "doubleValue") && t.uint32(49).double(e.doubleValue), null != e.stringValue && Object.hasOwnProperty.call(e, "stringValue") && t.uint32(58).bytes(e.stringValue), null != e.aggregateValue && Object.hasOwnProperty.call(e, "aggregateValue") && t.uint32(66).string(e.aggregateValue), t;
    }, I.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, I.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.UninterpretedOption; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 2:
                    o.name && o.name.length || (o.name = []), o.name.push(c.google.protobuf.UninterpretedOption.NamePart.decode(e, e.uint32()));
                    break;
                case 3:
                    o.identifierValue = e.string();
                    break;
                case 4:
                    o.positiveIntValue = e.uint64();
                    break;
                case 5:
                    o.negativeIntValue = e.int64();
                    break;
                case 6:
                    o.doubleValue = e.double();
                    break;
                case 7:
                    o.stringValue = e.bytes();
                    break;
                case 8:
                    o.aggregateValue = e.string();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, I.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, I.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.name && e.hasOwnProperty("name")) {
            if (!Array.isArray(e.name)) return "name: array expected";
            for(var t = 0; t < e.name.length; ++t){
                var n = c.google.protobuf.UninterpretedOption.NamePart.verify(e.name[t]);
                if (n) return "name." + n;
            }
        }
        return null != e.identifierValue && e.hasOwnProperty("identifierValue") && !u.isString(e.identifierValue) ? "identifierValue: string expected" : null != e.positiveIntValue && e.hasOwnProperty("positiveIntValue") && !(u.isInteger(e.positiveIntValue) || e.positiveIntValue && u.isInteger(e.positiveIntValue.low) && u.isInteger(e.positiveIntValue.high)) ? "positiveIntValue: integer|Long expected" : null != e.negativeIntValue && e.hasOwnProperty("negativeIntValue") && !(u.isInteger(e.negativeIntValue) || e.negativeIntValue && u.isInteger(e.negativeIntValue.low) && u.isInteger(e.negativeIntValue.high)) ? "negativeIntValue: integer|Long expected" : null != e.doubleValue && e.hasOwnProperty("doubleValue") && "number" != typeof e.doubleValue ? "doubleValue: number expected" : null != e.stringValue && e.hasOwnProperty("stringValue") && !(e.stringValue && "number" == typeof e.stringValue.length || u.isString(e.stringValue)) ? "stringValue: buffer expected" : null != e.aggregateValue && e.hasOwnProperty("aggregateValue") && !u.isString(e.aggregateValue) ? "aggregateValue: string expected" : null;
    }, I.fromObject = function(e) {
        if (e instanceof c.google.protobuf.UninterpretedOption) return e;
        var t = new c.google.protobuf.UninterpretedOption;
        if (e.name) {
            if (!Array.isArray(e.name)) throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
            t.name = [];
            for(var n = 0; n < e.name.length; ++n){
                if ("object" != typeof e.name[n]) throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                t.name[n] = c.google.protobuf.UninterpretedOption.NamePart.fromObject(e.name[n]);
            }
        }
        return null != e.identifierValue && (t.identifierValue = String(e.identifierValue)), null != e.positiveIntValue && (u.Long ? (t.positiveIntValue = u.Long.fromValue(e.positiveIntValue)).unsigned = !0 : "string" == typeof e.positiveIntValue ? t.positiveIntValue = parseInt(e.positiveIntValue, 10) : "number" == typeof e.positiveIntValue ? t.positiveIntValue = e.positiveIntValue : "object" == typeof e.positiveIntValue && (t.positiveIntValue = new u.LongBits(e.positiveIntValue.low >>> 0, e.positiveIntValue.high >>> 0).toNumber(!0))), null != e.negativeIntValue && (u.Long ? (t.negativeIntValue = u.Long.fromValue(e.negativeIntValue)).unsigned = !1 : "string" == typeof e.negativeIntValue ? t.negativeIntValue = parseInt(e.negativeIntValue, 10) : "number" == typeof e.negativeIntValue ? t.negativeIntValue = e.negativeIntValue : "object" == typeof e.negativeIntValue && (t.negativeIntValue = new u.LongBits(e.negativeIntValue.low >>> 0, e.negativeIntValue.high >>> 0).toNumber())), null != e.doubleValue && (t.doubleValue = Number(e.doubleValue)), null != e.stringValue && ("string" == typeof e.stringValue ? u.base64.decode(e.stringValue, t.stringValue = u.newBuffer(u.base64.length(e.stringValue)), 0) : e.stringValue.length && (t.stringValue = e.stringValue)), null != e.aggregateValue && (t.aggregateValue = String(e.aggregateValue)), t;
    }, I.toObject = function(e, t) {
        var n, o = {};
        if (((t = t || {}).arrays || t.defaults) && (o.name = []), t.defaults && (o.identifierValue = "", u.Long ? (n = new u.Long(0, 0, !0), o.positiveIntValue = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.positiveIntValue = t.longs === String ? "0" : 0, u.Long ? (n = new u.Long(0, 0, !1), o.negativeIntValue = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n) : o.negativeIntValue = t.longs === String ? "0" : 0, o.doubleValue = 0, t.bytes === String ? o.stringValue = "" : (o.stringValue = [], t.bytes !== Array && (o.stringValue = u.newBuffer(o.stringValue))), o.aggregateValue = ""), e.name && e.name.length) {
            o.name = [];
            for(var r = 0; r < e.name.length; ++r)o.name[r] = c.google.protobuf.UninterpretedOption.NamePart.toObject(e.name[r], t);
        }
        return null != e.identifierValue && e.hasOwnProperty("identifierValue") && (o.identifierValue = e.identifierValue), null != e.positiveIntValue && e.hasOwnProperty("positiveIntValue") && ("number" == typeof e.positiveIntValue ? o.positiveIntValue = t.longs === String ? String(e.positiveIntValue) : e.positiveIntValue : o.positiveIntValue = t.longs === String ? u.Long.prototype.toString.call(e.positiveIntValue) : t.longs === Number ? new u.LongBits(e.positiveIntValue.low >>> 0, e.positiveIntValue.high >>> 0).toNumber(!0) : e.positiveIntValue), null != e.negativeIntValue && e.hasOwnProperty("negativeIntValue") && ("number" == typeof e.negativeIntValue ? o.negativeIntValue = t.longs === String ? String(e.negativeIntValue) : e.negativeIntValue : o.negativeIntValue = t.longs === String ? u.Long.prototype.toString.call(e.negativeIntValue) : t.longs === Number ? new u.LongBits(e.negativeIntValue.low >>> 0, e.negativeIntValue.high >>> 0).toNumber() : e.negativeIntValue), null != e.doubleValue && e.hasOwnProperty("doubleValue") && (o.doubleValue = t.json && !isFinite(e.doubleValue) ? String(e.doubleValue) : e.doubleValue), null != e.stringValue && e.hasOwnProperty("stringValue") && (o.stringValue = t.bytes === String ? u.base64.encode(e.stringValue, 0, e.stringValue.length) : t.bytes === Array ? Array.prototype.slice.call(e.stringValue) : e.stringValue), null != e.aggregateValue && e.hasOwnProperty("aggregateValue") && (o.aggregateValue = e.aggregateValue), o;
    }, I.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, I.NamePart = (R.prototype.namePart = "", R.prototype.isExtension = !1, R.create = function(e) {
        return new R(e);
    }, R.encode = function(e, t) {
        return (t = t || r.create()).uint32(10).string(e.namePart), t.uint32(16).bool(e.isExtension), t;
    }, R.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, R.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.UninterpretedOption.NamePart; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.namePart = e.string();
                    break;
                case 2:
                    o.isExtension = e.bool();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        if (!o.hasOwnProperty("namePart")) throw u.ProtocolError("missing required 'namePart'", {
            instance: o
        });
        if (o.hasOwnProperty("isExtension")) return o;
        throw u.ProtocolError("missing required 'isExtension'", {
            instance: o
        });
    }, R.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, R.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : u.isString(e.namePart) ? "boolean" != typeof e.isExtension ? "isExtension: boolean expected" : null : "namePart: string expected";
    }, R.fromObject = function(e) {
        var t;
        return e instanceof c.google.protobuf.UninterpretedOption.NamePart ? e : (t = new c.google.protobuf.UninterpretedOption.NamePart, null != e.namePart && (t.namePart = String(e.namePart)), null != e.isExtension && (t.isExtension = Boolean(e.isExtension)), t);
    }, R.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.namePart = "", n.isExtension = !1), null != e.namePart && e.hasOwnProperty("namePart") && (n.namePart = e.namePart), null != e.isExtension && e.hasOwnProperty("isExtension") && (n.isExtension = e.isExtension), n;
    }, R.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, R), I), n.SourceCodeInfo = (_.prototype.location = u.emptyArray, _.create = function(e) {
        return new _(e);
    }, _.encode = function(e, t) {
        if (t = t || r.create(), null != e.location && e.location.length) for(var n = 0; n < e.location.length; ++n)c.google.protobuf.SourceCodeInfo.Location.encode(e.location[n], t.uint32(10).fork()).ldelim();
        return t;
    }, _.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, _.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.SourceCodeInfo; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.location && o.location.length || (o.location = []), o.location.push(c.google.protobuf.SourceCodeInfo.Location.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, _.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, _.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.location && e.hasOwnProperty("location")) {
            if (!Array.isArray(e.location)) return "location: array expected";
            for(var t = 0; t < e.location.length; ++t){
                var n = c.google.protobuf.SourceCodeInfo.Location.verify(e.location[t]);
                if (n) return "location." + n;
            }
        }
        return null;
    }, _.fromObject = function(e) {
        if (e instanceof c.google.protobuf.SourceCodeInfo) return e;
        var t = new c.google.protobuf.SourceCodeInfo;
        if (e.location) {
            if (!Array.isArray(e.location)) throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
            t.location = [];
            for(var n = 0; n < e.location.length; ++n){
                if ("object" != typeof e.location[n]) throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                t.location[n] = c.google.protobuf.SourceCodeInfo.Location.fromObject(e.location[n]);
            }
        }
        return t;
    }, _.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.location = []), e.location && e.location.length) {
            n.location = [];
            for(var o = 0; o < e.location.length; ++o)n.location[o] = c.google.protobuf.SourceCodeInfo.Location.toObject(e.location[o], t);
        }
        return n;
    }, _.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, _.Location = (C.prototype.path = u.emptyArray, C.prototype.span = u.emptyArray, C.prototype.leadingComments = "", C.prototype.trailingComments = "", C.prototype.leadingDetachedComments = u.emptyArray, C.create = function(e) {
        return new C(e);
    }, C.encode = function(e, t) {
        if (t = t || r.create(), null != e.path && e.path.length) {
            t.uint32(10).fork();
            for(var n = 0; n < e.path.length; ++n)t.int32(e.path[n]);
            t.ldelim();
        }
        if (null != e.span && e.span.length) {
            t.uint32(18).fork();
            for(n = 0; n < e.span.length; ++n)t.int32(e.span[n]);
            t.ldelim();
        }
        if (null != e.leadingComments && Object.hasOwnProperty.call(e, "leadingComments") && t.uint32(26).string(e.leadingComments), null != e.trailingComments && Object.hasOwnProperty.call(e, "trailingComments") && t.uint32(34).string(e.trailingComments), null != e.leadingDetachedComments && e.leadingDetachedComments.length) for(n = 0; n < e.leadingDetachedComments.length; ++n)t.uint32(50).string(e.leadingDetachedComments[n]);
        return t;
    }, C.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, C.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.SourceCodeInfo.Location; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    if (o.path && o.path.length || (o.path = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.path.push(e.int32());
                    else o.path.push(e.int32());
                    break;
                case 2:
                    if (o.span && o.span.length || (o.span = []), 2 == (7 & r)) for(i = e.uint32() + e.pos; e.pos < i;)o.span.push(e.int32());
                    else o.span.push(e.int32());
                    break;
                case 3:
                    o.leadingComments = e.string();
                    break;
                case 4:
                    o.trailingComments = e.string();
                    break;
                case 6:
                    o.leadingDetachedComments && o.leadingDetachedComments.length || (o.leadingDetachedComments = []), o.leadingDetachedComments.push(e.string());
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, C.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, C.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.path && e.hasOwnProperty("path")) {
            if (!Array.isArray(e.path)) return "path: array expected";
            for(var t = 0; t < e.path.length; ++t)if (!u.isInteger(e.path[t])) return "path: integer[] expected";
        }
        if (null != e.span && e.hasOwnProperty("span")) {
            if (!Array.isArray(e.span)) return "span: array expected";
            for(t = 0; t < e.span.length; ++t)if (!u.isInteger(e.span[t])) return "span: integer[] expected";
        }
        if (null != e.leadingComments && e.hasOwnProperty("leadingComments") && !u.isString(e.leadingComments)) return "leadingComments: string expected";
        if (null != e.trailingComments && e.hasOwnProperty("trailingComments") && !u.isString(e.trailingComments)) return "trailingComments: string expected";
        if (null != e.leadingDetachedComments && e.hasOwnProperty("leadingDetachedComments")) {
            if (!Array.isArray(e.leadingDetachedComments)) return "leadingDetachedComments: array expected";
            for(t = 0; t < e.leadingDetachedComments.length; ++t)if (!u.isString(e.leadingDetachedComments[t])) return "leadingDetachedComments: string[] expected";
        }
        return null;
    }, C.fromObject = function(e) {
        if (e instanceof c.google.protobuf.SourceCodeInfo.Location) return e;
        var t = new c.google.protobuf.SourceCodeInfo.Location;
        if (e.path) {
            if (!Array.isArray(e.path)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
            t.path = [];
            for(var n = 0; n < e.path.length; ++n)t.path[n] = 0 | e.path[n];
        }
        if (e.span) {
            if (!Array.isArray(e.span)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
            t.span = [];
            for(n = 0; n < e.span.length; ++n)t.span[n] = 0 | e.span[n];
        }
        if (null != e.leadingComments && (t.leadingComments = String(e.leadingComments)), null != e.trailingComments && (t.trailingComments = String(e.trailingComments)), e.leadingDetachedComments) {
            if (!Array.isArray(e.leadingDetachedComments)) throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
            t.leadingDetachedComments = [];
            for(n = 0; n < e.leadingDetachedComments.length; ++n)t.leadingDetachedComments[n] = String(e.leadingDetachedComments[n]);
        }
        return t;
    }, C.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.path = [], n.span = [], n.leadingDetachedComments = []), t.defaults && (n.leadingComments = "", n.trailingComments = ""), e.path && e.path.length) {
            n.path = [];
            for(var o = 0; o < e.path.length; ++o)n.path[o] = e.path[o];
        }
        if (e.span && e.span.length) {
            n.span = [];
            for(o = 0; o < e.span.length; ++o)n.span[o] = e.span[o];
        }
        if (null != e.leadingComments && e.hasOwnProperty("leadingComments") && (n.leadingComments = e.leadingComments), null != e.trailingComments && e.hasOwnProperty("trailingComments") && (n.trailingComments = e.trailingComments), e.leadingDetachedComments && e.leadingDetachedComments.length) {
            n.leadingDetachedComments = [];
            for(o = 0; o < e.leadingDetachedComments.length; ++o)n.leadingDetachedComments[o] = e.leadingDetachedComments[o];
        }
        return n;
    }, C.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, C), _), n.GeneratedCodeInfo = (J.prototype.annotation = u.emptyArray, J.create = function(e) {
        return new J(e);
    }, J.encode = function(e, t) {
        if (t = t || r.create(), null != e.annotation && e.annotation.length) for(var n = 0; n < e.annotation.length; ++n)c.google.protobuf.GeneratedCodeInfo.Annotation.encode(e.annotation[n], t.uint32(10).fork()).ldelim();
        return t;
    }, J.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, J.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.GeneratedCodeInfo; e.pos < n;){
            var r = e.uint32();
            r >>> 3 == 1 ? (o.annotation && o.annotation.length || (o.annotation = []), o.annotation.push(c.google.protobuf.GeneratedCodeInfo.Annotation.decode(e, e.uint32()))) : e.skipType(7 & r);
        }
        return o;
    }, J.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, J.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.annotation && e.hasOwnProperty("annotation")) {
            if (!Array.isArray(e.annotation)) return "annotation: array expected";
            for(var t = 0; t < e.annotation.length; ++t){
                var n = c.google.protobuf.GeneratedCodeInfo.Annotation.verify(e.annotation[t]);
                if (n) return "annotation." + n;
            }
        }
        return null;
    }, J.fromObject = function(e) {
        if (e instanceof c.google.protobuf.GeneratedCodeInfo) return e;
        var t = new c.google.protobuf.GeneratedCodeInfo;
        if (e.annotation) {
            if (!Array.isArray(e.annotation)) throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
            t.annotation = [];
            for(var n = 0; n < e.annotation.length; ++n){
                if ("object" != typeof e.annotation[n]) throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                t.annotation[n] = c.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(e.annotation[n]);
            }
        }
        return t;
    }, J.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.annotation = []), e.annotation && e.annotation.length) {
            n.annotation = [];
            for(var o = 0; o < e.annotation.length; ++o)n.annotation[o] = c.google.protobuf.GeneratedCodeInfo.Annotation.toObject(e.annotation[o], t);
        }
        return n;
    }, J.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, J.Annotation = (V.prototype.path = u.emptyArray, V.prototype.sourceFile = "", V.prototype.begin = 0, V.prototype.end = 0, V.create = function(e) {
        return new V(e);
    }, V.encode = function(e, t) {
        if (t = t || r.create(), null != e.path && e.path.length) {
            t.uint32(10).fork();
            for(var n = 0; n < e.path.length; ++n)t.int32(e.path[n]);
            t.ldelim();
        }
        return null != e.sourceFile && Object.hasOwnProperty.call(e, "sourceFile") && t.uint32(18).string(e.sourceFile), null != e.begin && Object.hasOwnProperty.call(e, "begin") && t.uint32(24).int32(e.begin), null != e.end && Object.hasOwnProperty.call(e, "end") && t.uint32(32).int32(e.end), t;
    }, V.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, V.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.GeneratedCodeInfo.Annotation; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    if (o.path && o.path.length || (o.path = []), 2 == (7 & r)) for(var i = e.uint32() + e.pos; e.pos < i;)o.path.push(e.int32());
                    else o.path.push(e.int32());
                    break;
                case 2:
                    o.sourceFile = e.string();
                    break;
                case 3:
                    o.begin = e.int32();
                    break;
                case 4:
                    o.end = e.int32();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, V.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, V.verify = function(e) {
        if ("object" != typeof e || null === e) return "object expected";
        if (null != e.path && e.hasOwnProperty("path")) {
            if (!Array.isArray(e.path)) return "path: array expected";
            for(var t = 0; t < e.path.length; ++t)if (!u.isInteger(e.path[t])) return "path: integer[] expected";
        }
        return null != e.sourceFile && e.hasOwnProperty("sourceFile") && !u.isString(e.sourceFile) ? "sourceFile: string expected" : null != e.begin && e.hasOwnProperty("begin") && !u.isInteger(e.begin) ? "begin: integer expected" : null != e.end && e.hasOwnProperty("end") && !u.isInteger(e.end) ? "end: integer expected" : null;
    }, V.fromObject = function(e) {
        if (e instanceof c.google.protobuf.GeneratedCodeInfo.Annotation) return e;
        var t = new c.google.protobuf.GeneratedCodeInfo.Annotation;
        if (e.path) {
            if (!Array.isArray(e.path)) throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
            t.path = [];
            for(var n = 0; n < e.path.length; ++n)t.path[n] = 0 | e.path[n];
        }
        return null != e.sourceFile && (t.sourceFile = String(e.sourceFile)), null != e.begin && (t.begin = 0 | e.begin), null != e.end && (t.end = 0 | e.end), t;
    }, V.toObject = function(e, t) {
        var n = {};
        if (((t = t || {}).arrays || t.defaults) && (n.path = []), t.defaults && (n.sourceFile = "", n.begin = 0, n.end = 0), e.path && e.path.length) {
            n.path = [];
            for(var o = 0; o < e.path.length; ++o)n.path[o] = e.path[o];
        }
        return null != e.sourceFile && e.hasOwnProperty("sourceFile") && (n.sourceFile = e.sourceFile), null != e.begin && e.hasOwnProperty("begin") && (n.begin = e.begin), null != e.end && e.hasOwnProperty("end") && (n.end = e.end), n;
    }, V.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, V), J), n.Any = (H.prototype.type_url = "", H.prototype.value = u.newBuffer([]), H.create = function(e) {
        return new H(e);
    }, H.encode = function(e, t) {
        return t = t || r.create(), null != e.type_url && Object.hasOwnProperty.call(e, "type_url") && t.uint32(10).string(e.type_url), null != e.value && Object.hasOwnProperty.call(e, "value") && t.uint32(18).bytes(e.value), t;
    }, H.encodeDelimited = function(e, t) {
        return this.encode(e, t).ldelim();
    }, H.decode = function(e, t) {
        e instanceof s || (e = s.create(e));
        for(var n = void 0 === t ? e.len : e.pos + t, o = new c.google.protobuf.Any; e.pos < n;){
            var r = e.uint32();
            switch(r >>> 3){
                case 1:
                    o.type_url = e.string();
                    break;
                case 2:
                    o.value = e.bytes();
                    break;
                default:
                    e.skipType(7 & r);
            }
        }
        return o;
    }, H.decodeDelimited = function(e) {
        return e instanceof s || (e = new s(e)), this.decode(e, e.uint32());
    }, H.verify = function(e) {
        return "object" != typeof e || null === e ? "object expected" : null != e.type_url && e.hasOwnProperty("type_url") && !u.isString(e.type_url) ? "type_url: string expected" : null != e.value && e.hasOwnProperty("value") && !(e.value && "number" == typeof e.value.length || u.isString(e.value)) ? "value: buffer expected" : null;
    }, H.fromObject = function(e) {
        var t;
        return e instanceof c.google.protobuf.Any ? e : (t = new c.google.protobuf.Any, null != e.type_url && (t.type_url = String(e.type_url)), null != e.value && ("string" == typeof e.value ? u.base64.decode(e.value, t.value = u.newBuffer(u.base64.length(e.value)), 0) : e.value.length && (t.value = e.value)), t);
    }, H.toObject = function(e, t) {
        var n = {};
        return (t = t || {}).defaults && (n.type_url = "", t.bytes === String ? n.value = "" : (n.value = [], t.bytes !== Array && (n.value = u.newBuffer(n.value)))), null != e.type_url && e.hasOwnProperty("type_url") && (n.type_url = e.type_url), null != e.value && e.hasOwnProperty("value") && (n.value = t.bytes === String ? u.base64.encode(e.value, 0, e.value.length) : t.bytes === Array ? Array.prototype.slice.call(e.value) : e.value), n;
    }, H.prototype.toJSON = function() {
        return this.constructor.toObject(this, o.util.toJSONOptions);
    }, H), n), F), c;
});
}}),
"[project]/node_modules/google-gax/build/src/pathTemplate.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PathTemplate = void 0;
class PathTemplate {
    /**
     * @param {String} data the of the template
     *
     * @constructor
     */ constructor(data){
        this.bindings = {};
        this.data = data;
        this.segments = this.parsePathTemplate(data);
        this.size = this.segments.length;
    }
    /**
     * Matches a fully-qualified path template string.
     *
     * @param {String} path a fully-qualified path template string
     * @return {Object} contains const names matched to binding values
     * @throws {TypeError} if path can't be matched to this template
     */ match(path) {
        let pathSegments = path.split('/');
        const bindings = {};
        if (pathSegments.length !== this.segments.length) {
            // if the path contains a wildcard, then the length may differ by 1.
            if (!this.data.includes('**')) {
                throw new TypeError(`This path ${path} does not match path template ${this.data}, the number of parameters is not same.`);
            } else if (pathSegments.length !== this.segments.length + 1) {
                throw new TypeError(`This path ${path} does not match path template ${this.data}, the number of parameters is not same with one wildcard.`);
            }
        }
        for(let index = 0; index < this.segments.length && pathSegments.length > 0; index++){
            if (this.segments[index] !== pathSegments[0]) {
                if (!this.segments[index].includes('*')) {
                    throw new TypeError(`segment does not match, ${this.segments[index]} and  ${pathSegments[index]}.`);
                } else {
                    let segment = this.segments[index];
                    const matches = segment.match(/\{[$0-9a-zA-Z_]+=.*?\}/g);
                    if (!matches) {
                        throw new Error(`Error processing path template segment ${segment}`);
                    }
                    const variables = matches.map((str)=>str.replace(/^\{/, '').replace(/=.*/, ''));
                    if (segment.includes('**')) {
                        bindings[variables[0]] = pathSegments[0] + '/' + pathSegments[1];
                        pathSegments = pathSegments.slice(2);
                    } else {
                        // atomic resource
                        if (variables.length === 1) {
                            bindings[variables[0]] = pathSegments[0];
                        } else {
                            // non-slash resource
                            // segment: {blurb_id=*}.{legacy_user=*} to match pathSegments: ['bar.user2']
                            // split the match pathSegments[0] -> value: ['bar', 'user2']
                            // compare the length of two arrays, and compare array items
                            const value = pathSegments[0].split(/[-_.~]/);
                            if (value.length !== variables.length) {
                                throw new Error(`segment ${segment} does not match ${pathSegments[0]}`);
                            }
                            for (const v of variables){
                                bindings[v] = value[0];
                                segment = segment.replace(`{${v}=*}`, `${value[0]}`);
                                value.shift();
                            }
                            // segment: {blurb_id=*}.{legacy_user=*} matching pathSegments: ['bar~user2'] should fail
                            if (segment !== pathSegments[0]) {
                                throw new TypeError(`non slash resource pattern ${this.segments[index]} and ${pathSegments[0]} should have same separator`);
                            }
                        }
                        pathSegments.shift();
                    }
                }
            } else {
                pathSegments.shift();
            }
        }
        return bindings;
    }
    /**
     * Renders a path template using the provided bindings.
     *
     * @param {Object} bindings a mapping of const names to binding strings
     * @return {String} a rendered representation of the path template
     * @throws {TypeError} if a key is missing, or if a sub-template cannot be
     *   parsed
     */ render(bindings) {
        if (Object.keys(bindings).length !== Object.keys(this.bindings).length) {
            throw new TypeError(`The number of variables ${Object.keys(bindings).length} does not match the number of needed variables ${Object.keys(this.bindings).length}`);
        }
        let path = this.inspect();
        for (const key of Object.keys(bindings)){
            const b = bindings[key].toString();
            if (!this.bindings[key]) {
                throw new TypeError(`render fails for not matching ${bindings[key]}`);
            }
            const variable = this.bindings[key];
            if (variable === '*') {
                if (!b.match(/[^/{}]+/)) {
                    throw new TypeError(`render fails for not matching ${b}`);
                }
                path = path.replace(`{${key}=*}`, `${b}`);
            } else if (variable === '**') {
                if (!b.match(/[^{}]+/)) {
                    throw new TypeError(`render fails for not matching ${b}`);
                }
                path = path.replace(`{${key}=**}`, `${b}`);
            }
        }
        return path;
    }
    /**
     * Renders the path template.
     *
     * @return {string} contains const names matched to binding values
     */ inspect() {
        return this.segments.join('/');
    }
    /**
     * Parse the path template.
     *
     * @return {string[]} return segments of the input path.
     * For example: 'buckets/{hello}'' will give back ['buckets', {hello=*}]
     */ parsePathTemplate(data) {
        const pathSegments = splitPathTemplate(data);
        let index = 0;
        let wildCardCount = 0;
        const segments = [];
        let matches;
        pathSegments.forEach((segment)=>{
            // * or ** -> segments.push('{$0=*}');
            //         -> bindings['$0'] = '*'
            if (segment === '*' || segment === '**') {
                this.bindings[`$${index}`] = segment;
                segments.push(`{$${index}=${segment}}`);
                index = index + 1;
                if (segment === '**') {
                    ++wildCardCount;
                }
            } else if (matches = segment.match(/\{[0-9a-zA-Z-.~_]+(?:=.*?)?\}/g)) {
                for (const subsegment of matches){
                    const pairMatch = subsegment.match(/^\{([0-9a-zA-Z-.~_]+)(?:=(.*?))?\}$/);
                    if (!pairMatch) {
                        throw new Error(`Cannot process path template segment ${subsegment}`);
                    }
                    const key = pairMatch[1];
                    let value = pairMatch[2];
                    if (!value) {
                        value = '*';
                        segment = segment.replace(key, key + '=*');
                        this.bindings[key] = value;
                    } else if (value === '*') {
                        this.bindings[key] = value;
                    } else if (value === '**') {
                        ++wildCardCount;
                        this.bindings[key] = value;
                    }
                }
                segments.push(segment);
            } else if (segment.match(/[0-9a-zA-Z-.~_]+/)) {
                segments.push(segment);
            }
        });
        if (wildCardCount > 1) {
            throw new TypeError('Can not have more than one wildcard.');
        }
        return segments;
    }
}
exports.PathTemplate = PathTemplate;
/**
 * Split the path template by `/`.
 * It can not be simply splitted by `/` because there might be `/` in the segments.
 * For example: 'a/b/{a=hello/world}' we do not want to break the brackets pair
 * so above path will be splitted as ['a', 'b', '{a=hello/world}']
 */ function splitPathTemplate(data) {
    let left = 0;
    let right = 0;
    let bracketCount = 0;
    const segments = [];
    while(right >= left && right < data.length){
        if (data.charAt(right) === '{') {
            bracketCount = bracketCount + 1;
        } else if (data.charAt(right) === '}') {
            bracketCount = bracketCount - 1;
        } else if (data.charAt(right) === '/') {
            if (right === data.length - 1) {
                throw new TypeError('Invalid path, it can not be ended by /');
            }
            if (bracketCount === 0) {
                // complete bracket, to avoid the case a/b/**/*/{a=hello/world}
                segments.push(data.substring(left, right));
                left = right + 1;
            }
        }
        if (right === data.length - 1) {
            if (bracketCount !== 0) {
                throw new TypeError('Brackets are invalid.');
            }
            segments.push(data.substring(left));
        }
        right = right + 1;
    }
    return segments;
} //# sourceMappingURL=pathTemplate.js.map
}}),
"[project]/node_modules/google-gax/package.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"name\":\"google-gax\",\"version\":\"4.6.1\",\"description\":\"Google API Extensions\",\"main\":\"build/src/index.js\",\"types\":\"build/src/index.d.ts\",\"files\":[\"build/src\",\"build/protos/\",\"!build/src/**/*.map\"],\"dependencies\":{\"@grpc/grpc-js\":\"^1.10.9\",\"@grpc/proto-loader\":\"^0.7.13\",\"@types/long\":\"^4.0.0\",\"abort-controller\":\"^3.0.0\",\"duplexify\":\"^4.0.0\",\"google-auth-library\":\"^9.3.0\",\"node-fetch\":\"^2.7.0\",\"object-hash\":\"^3.0.0\",\"proto3-json-serializer\":\"^2.0.2\",\"retry-request\":\"^7.0.0\",\"uuid\":\"^9.0.1\",\"protobufjs\":\"^7.3.2\"},\"devDependencies\":{\"@types/uuid\":\"^9.0.7\",\"@babel/plugin-proposal-private-methods\":\"^7.18.6\",\"@types/mocha\":\"^9.0.0\",\"@types/ncp\":\"^2.0.1\",\"@types/node\":\"^20.5.0\",\"@types/node-fetch\":\"^2.6.11\",\"@types/object-hash\":\"^3.0.0\",\"@types/proxyquire\":\"^1.3.28\",\"@types/pumpify\":\"^1.4.1\",\"@types/sinon\":\"^17.0.0\",\"@types/uglify-js\":\"^3.17.0\",\"c8\":\"^9.0.0\",\"cheerio\":\"1.0.0-rc.12\",\"codecov\":\"^3.1.0\",\"execa\":\"^5.0.0\",\"glob\":\"10.4.5\",\"google-proto-files\":\"^4.2.0\",\"gts\":\"^5.0.0\",\"jackspeak\":\"3.4.3\",\"jsdoc\":\"^4.0.0\",\"jsdoc-fresh\":\"^3.0.0\",\"jsdoc-region-tag\":\"^3.0.0\",\"linkinator\":\"^4.0.0\",\"lru-cache\":\"10.4.3\",\"long\":\"^4.0.0\",\"mkdirp\":\"^2.0.0\",\"mocha\":\"^9.0.0\",\"ncp\":\"^2.0.0\",\"null-loader\":\"^4.0.0\",\"pdfmake\":\"0.2.12\",\"protobufjs-cli\":\"1.1.3\",\"proxyquire\":\"^2.0.1\",\"pumpify\":\"^2.0.0\",\"sinon\":\"^18.0.0\",\"stream-events\":\"^1.0.4\",\"ts-loader\":\"^8.0.0\",\"typescript\":\"^5.1.6\",\"uglify-js\":\"^3.17.0\",\"walkdir\":\"^0.4.0\",\"webpack\":\"^4.0.0\",\"webpack-cli\":\"^4.0.0\"},\"scripts\":{\"docs\":\"jsdoc -c .jsdoc.js\",\"pretest\":\"npm run prepare\",\"test\":\"c8 mocha build/test/unit\",\"lint\":\"gts check src samples test\",\"clean\":\"gts clean\",\"compile\":\"tsc -p . && cp src/*.json build/src && cp -r test/fixtures build/test && cp -r protos build/\",\"compile-operation-protos\":\"pbjs -t json google/longrunning/operations.proto -p ./protos > protos/operations.json && pbjs -t static-module -r operations_protos google/longrunning/operations.proto -p ./protos > protos/operations.js && pbts protos/operations.js -o protos/operations.d.ts\",\"compile-compute-operations-protos\":\"pbjs -t json google/longrunning/compute_operations.proto -p ./protos > protos/compute_operations.json && pbjs -t static-module -r compute_operations_protos google/longrunning/compute_operations.proto -p ./protos > protos/compute_operations.js && pbts protos/compute_operations.js -o protos/compute_operations.d.ts\",\"compile-iam-protos\":\"pbjs -t json google/iam/v1/iam_policy.proto google/iam/v1/options.proto google/iam/v1/policy.proto google/iam/v1/logging/audit_data.proto -p ./protos > protos/iam_service.json && pbjs -t static-module -r iam_protos google/iam/v1/iam_policy.proto google/iam/v1/options.proto google/iam/v1/policy.proto google/iam/v1/logging/audit_data.proto -p ./protos > protos/iam_service.js && pbts protos/iam_service.js -o protos/iam_service.d.ts\",\"compile-location-protos\":\"pbjs -t json google/cloud/location/locations.proto -p ./protos > protos/locations.json && pbjs -t static-module -r locations_protos google/cloud/location/locations.proto -p ./protos > protos/locations.js && pbts protos/locations.js -o protos/locations.d.ts\",\"compile-status-protos\":\"pbjs -t json google/rpc/status.proto google/rpc/error_details.proto -p ./protos > protos/status.json\",\"compile-http-protos\":\"pbjs -t static-module -r http_proto --keep-case google/api/http.proto -p ./protos > protos/http.js && pbts protos/http.js -o protos/http.d.ts\",\"fix\":\"gts fix\",\"prepare\":\"npm run compile && cd ../tools && npm i && npm run compile && cd ../gax && pwd && node ../tools/build/src/prepublish.js . && mkdirp build/protos && cp -r protos/* build/protos/ && npm run minify-proto-json\",\"system-test\":\"c8 mocha build/test/system-test --timeout 600000 && npm run test-application\",\"samples-test\":\"cd samples/ && npm link ../ && npm test && cd ../\",\"docs-test\":\"linkinator docs\",\"predocs-test\":\"npm run docs\",\"browser-test\":\"cd test/browser-test && npm run prefetch && npm install && npm test\",\"test-application\":\"cd test/test-application && npm run prefetch && npm install && npm start\",\"prelint\":\"cd samples; npm link ../; npm install\",\"precompile\":\"gts clean\",\"update-protos\":\"cd ../tools && npm i && npm run compile && cd ../gax && node ../tools/build/src/listProtos.js .\",\"minify-proto-json\":\"cd ../tools && npm i && npm run compile && cd ../gax && node ../tools/build/src/minify.js\"},\"keywords\":[\"grpc\"],\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/googleapis/gax-nodejs.git\",\"directory\":\"gax\"},\"author\":\"Google API Authors\",\"license\":\"Apache-2.0\",\"bugs\":{\"url\":\"https://github.com/googleapis/gax-nodejs/issues\"},\"homepage\":\"https://github.com/googleapis/gax-nodejs#readme\",\"engines\":{\"node\":\">=14\"},\"browser\":\"build/src/fallback.js\"}"));}}),
"[project]/node_modules/google-gax/build/src/longRunningCalls/longRunningApiCaller.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LongrunningApiCaller = void 0;
const call_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/call.js [app-rsc] (ecmascript)");
const gax_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const longrunning_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/longRunningCalls/longrunning.js [app-rsc] (ecmascript)");
class LongrunningApiCaller {
    /**
     * Creates an API caller that performs polling on a long running operation.
     *
     * @private
     * @constructor
     * @param {LongRunningDescriptor} longrunningDescriptor - Holds the
     * decoders used for unpacking responses and the operationsClient
     * used for polling the operation.
     */ constructor(longrunningDescriptor){
        this.longrunningDescriptor = longrunningDescriptor;
    }
    init(callback) {
        if (callback) {
            return new call_1.OngoingCall(callback);
        }
        return new call_1.OngoingCallPromise();
    }
    wrap(func) {
        return func;
    }
    call(apiCall, argument, settings, canceller) {
        canceller.call((argument, callback)=>{
            return this._wrapOperation(apiCall, settings, argument, callback);
        }, argument);
    }
    _wrapOperation(apiCall, settings, argument, callback) {
        let backoffSettings = settings.longrunning;
        if (!backoffSettings) {
            backoffSettings = (0, gax_1.createDefaultBackoffSettings)();
        }
        const longrunningDescriptor = this.longrunningDescriptor;
        return apiCall(argument, (err, rawResponse)=>{
            if (err) {
                callback(err, null, null, rawResponse);
                return;
            }
            const operation = new longrunning_1.Operation(rawResponse, longrunningDescriptor, backoffSettings, settings);
            callback(null, operation, rawResponse);
        });
    }
    fail(canceller, err) {
        canceller.callback(err);
    }
    result(canceller) {
        return canceller.promise;
    }
}
exports.LongrunningApiCaller = LongrunningApiCaller; //# sourceMappingURL=longRunningApiCaller.js.map
}}),
"[project]/node_modules/google-gax/build/src/longRunningCalls/longRunningDescriptor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LongRunningDescriptor = void 0;
const longRunningApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/longRunningCalls/longRunningApiCaller.js [app-rsc] (ecmascript)");
/**
 * A descriptor for long-running operations.
 */ class LongRunningDescriptor {
    constructor(operationsClient, responseDecoder, metadataDecoder){
        this.operationsClient = operationsClient;
        this.responseDecoder = responseDecoder;
        this.metadataDecoder = metadataDecoder;
    }
    getApiCaller() {
        return new longRunningApiCaller_1.LongrunningApiCaller(this);
    }
}
exports.LongRunningDescriptor = LongRunningDescriptor; //# sourceMappingURL=longRunningDescriptor.js.map
}}),
"[project]/node_modules/google-gax/build/src/paginationCalls/resourceCollector.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ResourceCollector = void 0;
/**
 * ResourceCollector class implements asynchronous logic of calling the API call that supports pagination,
 * page by page, collecting all resources (up to `maxResults`) in the array.
 *
 * Usage:
 *   const resourceCollector = new ResourceCollector(apiCall, maxResults); // -1 for unlimited
 *   resourceCollector.processAllPages(request).then(resources => ...);
 */ class ResourceCollector {
    constructor(apiCall, maxResults = -1){
        this.apiCall = apiCall;
        this.resources = [];
        this.maxResults = maxResults;
    }
    callback(err, resources, nextPageRequest) {
        if (err) {
            // Something went wrong with this request - failing everything
            this.rejectCallback(err);
            return;
        }
        // Process one page
        for (const resource of resources){
            this.resources.push(resource);
            if (this.resources.length === this.maxResults) {
                nextPageRequest = null;
                break;
            }
        }
        // All done?
        if (!nextPageRequest) {
            this.resolveCallback(this.resources);
            return;
        }
        // Schedule the next call
        const callback = (...args)=>this.callback(...args);
        setImmediate(this.apiCall, nextPageRequest, callback);
    }
    processAllPages(firstRequest) {
        return new Promise((resolve, reject)=>{
            this.resolveCallback = resolve;
            this.rejectCallback = reject;
            // Schedule the first call
            const callback = (...args)=>this.callback(...args);
            setImmediate(this.apiCall, firstRequest, callback);
        });
    }
}
exports.ResourceCollector = ResourceCollector; //# sourceMappingURL=resourceCollector.js.map
}}),
"[project]/node_modules/google-gax/build/src/paginationCalls/pagedApiCaller.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PagedApiCaller = void 0;
const call_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/call.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
const resourceCollector_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/paginationCalls/resourceCollector.js [app-rsc] (ecmascript)");
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
class PagedApiCaller {
    /**
     * Creates an API caller that returns a stream to performs page-streaming.
     *
     * @private
     * @constructor
     * @param {PageDescriptor} pageDescriptor - indicates the structure
     *   of page streaming to be performed.
     */ constructor(pageDescriptor){
        this.pageDescriptor = pageDescriptor;
    }
    /**
     * This function translates between regular gRPC calls (that accepts a request and returns a response,
     * and does not know anything about pages and page tokens) and the users' callback (that expects
     * to see resources from one page, a request to get the next page, and the raw response from the server).
     *
     * It generates a function that can be passed as a callback function to a gRPC call, will understand
     * pagination-specific fields in the response, and call the users' callback after having those fields
     * parsed.
     *
     * @param request Request object. It needs to be passed to all subsequent next page requests
     * (the main content of the request object stays unchanged, only the next page token changes)
     * @param callback The user's callback that expects the page content, next page request, and raw response.
     */ generateParseResponseCallback(request, callback) {
        const resourceFieldName = this.pageDescriptor.resourceField;
        const responsePageTokenFieldName = this.pageDescriptor.responsePageTokenField;
        const requestPageTokenFieldName = this.pageDescriptor.requestPageTokenField;
        return (err, response)=>{
            if (err) {
                callback(err);
                return;
            }
            if (!request) {
                callback(new googleError_1.GoogleError('Undefined request in pagination method callback.'));
                return;
            }
            if (!response) {
                callback(new googleError_1.GoogleError('Undefined response in pagination method callback.'));
                return;
            }
            const resources = response[resourceFieldName] || [];
            const pageToken = response[responsePageTokenFieldName];
            let nextPageRequest = null;
            if (pageToken) {
                nextPageRequest = Object.assign({}, request);
                nextPageRequest[requestPageTokenFieldName] = pageToken;
            }
            callback(err, resources, nextPageRequest, response);
        };
    }
    /**
     * Adds a special ability to understand pagination-specific fields to the existing gRPC call.
     * The original gRPC call just calls callback(err, result).
     * The wrapped one will call callback(err, resources, nextPageRequest, rawResponse) instead.
     *
     * @param func gRPC call (normally, a service stub call). The gRPC call is expected to accept four parameters:
     * request, metadata, call options, and callback.
     */ wrap(func) {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const self = this;
        return function wrappedCall(argument, metadata, options, callback) {
            return func(argument, metadata, options, self.generateParseResponseCallback(argument, callback));
        };
    }
    /**
     * Makes it possible to use both callback-based and promise-based calls.
     * Returns an OngoingCall or OngoingCallPromise object.
     * Regardless of which one is returned, it always has a `.callback` to call.
     *
     * @param settings Call settings. Can only be used to replace Promise with another promise implementation.
     * @param [callback] Callback to be called, if any.
     */ init(callback) {
        if (callback) {
            return new call_1.OngoingCall(callback);
        }
        return new call_1.OngoingCallPromise();
    }
    /**
     * Implements auto-pagination logic.
     *
     * @param apiCall A function that performs gRPC request and calls its callback with a response or an error.
     * It's supposed to be a gRPC service stub function wrapped into several layers of wrappers that make it
     * accept just two parameters: (request, callback).
     * @param request A request object that came from the user.
     * @param settings Call settings. We are interested in `maxResults` and `autoPaginate` (they are optional).
     * @param ongoingCall An instance of OngoingCall or OngoingCallPromise that can be used for call cancellation,
     * and is used to return results to the user.
     */ call(apiCall, request, settings, ongoingCall) {
        request = Object.assign({}, request);
        if (!settings.autoPaginate) {
            // they don't want auto-pagination this time - okay, just call once
            ongoingCall.call(apiCall, request);
            return;
        }
        if (request.pageSize && settings.autoPaginate) {
            (0, warnings_1.warn)('autoPaginate true', 'Providing a pageSize without setting autoPaginate to false will still return all results. See https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#auto-pagination for more information on how to configure manual paging', 'AutopaginateTrueWarning');
        }
        const maxResults = settings.maxResults || -1;
        const resourceCollector = new resourceCollector_1.ResourceCollector(apiCall, maxResults);
        resourceCollector.processAllPages(request).then((resources)=>ongoingCall.callback(null, resources), (err)=>ongoingCall.callback(err));
    }
    fail(ongoingCall, err) {
        ongoingCall.callback(err);
    }
    result(ongoingCall) {
        return ongoingCall.promise;
    }
}
exports.PagedApiCaller = PagedApiCaller; //# sourceMappingURL=pagedApiCaller.js.map
}}),
"[project]/node_modules/google-gax/build/src/paginationCalls/pageDescriptor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PageDescriptor = void 0;
const stream_1 = __turbopack_context__.r("[externals]/stream [external] (stream, cjs)");
const normalApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/normalCalls/normalApiCaller.js [app-rsc] (ecmascript)");
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
const pagedApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/paginationCalls/pagedApiCaller.js [app-rsc] (ecmascript)");
const maxAttemptsEmptyResponse = 10;
/**
 * A descriptor for methods that support pagination.
 */ class PageDescriptor {
    constructor(requestPageTokenField, responsePageTokenField, resourceField){
        this.requestPageTokenField = requestPageTokenField;
        this.responsePageTokenField = responsePageTokenField;
        this.resourceField = resourceField;
    }
    /**
     * Creates a new object Stream which emits the resource on 'data' event.
     */ createStream(apiCall, request, options) {
        if (options === null || options === void 0 ? void 0 : options.autoPaginate) {
            (0, warnings_1.warn)('autoPaginate true', 'Autopaginate will always be set to false in stream paging methods. See more info at https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#auto-pagination for more information on how to configure paging calls', 'AutopaginateTrueWarning');
        }
        const stream = new stream_1.PassThrough({
            objectMode: true
        });
        options = Object.assign({}, options, {
            autoPaginate: false
        });
        const maxResults = 'maxResults' in options ? options.maxResults : -1;
        let pushCount = 0;
        let started = false;
        function callback(err, resources, next, apiResp) {
            if (err) {
                stream.emit('error', err);
                return;
            }
            // emit full api response with every page.
            stream.emit('response', apiResp);
            for(let i = 0; i < resources.length; ++i){
                // TODO: rewrite without accessing stream internals
                if (stream._readableState.ended) {
                    return;
                }
                if (resources[i] === null) {
                    continue;
                }
                stream.push(resources[i]);
                pushCount++;
                if (pushCount === maxResults) {
                    stream.end();
                }
            }
            // TODO: rewrite without accessing stream internals
            if (stream._readableState.ended) {
                return;
            }
            if (!next) {
                stream.end();
                return;
            }
            // When pageToken is specified in the original options, it will overwrite
            // the page token field in the next request. Therefore it must be cleared.
            if ('pageToken' in options) {
                delete options.pageToken;
            }
            if (stream.isPaused()) {
                request = next;
                started = false;
            } else {
                setImmediate(apiCall, next, options, callback);
            }
        }
        stream.on('resume', ()=>{
            if (!started) {
                started = true;
                apiCall(request, options, callback);
            }
        });
        return stream;
    }
    /**
     * Create an async iterable which can be recursively called for data on-demand.
     */ asyncIterate(apiCall, request, options) {
        if (options === null || options === void 0 ? void 0 : options.autoPaginate) {
            (0, warnings_1.warn)('autoPaginate true', 'Autopaginate will always be set to false in Async paging methods. See more info at https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#auto-pagination for more information on how to configure paging calls', 'AutopaginateTrueWarning');
        }
        options = Object.assign({}, options, {
            autoPaginate: false
        });
        const iterable = this.createIterator(apiCall, request, options);
        return iterable;
    }
    createIterator(apiCall, request, options) {
        const asyncIterable = {
            [Symbol.asyncIterator] () {
                let nextPageRequest = request;
                const cache = [];
                return {
                    async next () {
                        if (cache.length > 0) {
                            return Promise.resolve({
                                done: false,
                                value: cache.shift()
                            });
                        }
                        let attempts = 0;
                        while(cache.length === 0 && nextPageRequest){
                            let result;
                            [result, nextPageRequest] = await apiCall(nextPageRequest, options);
                            // For pagination response with protobuf map type, use tuple as representation.
                            if (result && !Array.isArray(result)) {
                                for (const [key, value] of Object.entries(result)){
                                    cache.push([
                                        key,
                                        value
                                    ]);
                                }
                            } else {
                                cache.push(...result);
                            }
                            if (cache.length === 0) {
                                ++attempts;
                                if (attempts > maxAttemptsEmptyResponse) {
                                    break;
                                }
                            }
                        }
                        if (cache.length === 0) {
                            return Promise.resolve({
                                done: true,
                                value: undefined
                            });
                        }
                        return Promise.resolve({
                            done: false,
                            value: cache.shift()
                        });
                    }
                };
            }
        };
        return asyncIterable;
    }
    getApiCaller(settings) {
        if (!settings.autoPaginate) {
            return new normalApiCaller_1.NormalApiCaller();
        }
        return new pagedApiCaller_1.PagedApiCaller(this);
    }
}
exports.PageDescriptor = PageDescriptor; //# sourceMappingURL=pageDescriptor.js.map
}}),
"[project]/node_modules/google-gax/build/src/streamingCalls/streamingApiCaller.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StreamingApiCaller = void 0;
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
const streaming_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streaming.js [app-rsc] (ecmascript)");
class StreamingApiCaller {
    /**
     * An API caller for methods of gRPC streaming.
     * @private
     * @constructor
     * @param {StreamDescriptor} descriptor - the descriptor of the method structure.
     */ constructor(descriptor){
        this.descriptor = descriptor;
    }
    init(callback) {
        return new streaming_1.StreamProxy(this.descriptor.type, callback, this.descriptor.rest, this.descriptor.gaxStreamingRetries);
    }
    wrap(func) {
        switch(this.descriptor.type){
            case streaming_1.StreamType.SERVER_STREAMING:
                return (argument, metadata, options)=>{
                    return func(argument, metadata, options);
                };
            case streaming_1.StreamType.CLIENT_STREAMING:
                return (argument, metadata, options, callback)=>{
                    return func(metadata, options, callback);
                };
            case streaming_1.StreamType.BIDI_STREAMING:
                return (argument, metadata, options)=>{
                    return func(metadata, options);
                };
            default:
                (0, warnings_1.warn)('streaming_wrap_unknown_stream_type', `Unknown stream type: ${this.descriptor.type}`);
        }
        return func;
    }
    call(apiCall, argument, settings, stream) {
        stream.setStream(apiCall, argument, settings.retryRequestOptions, settings.retry);
    }
    fail(stream, err) {
        stream.emit('error', err);
    }
    result(stream) {
        return stream;
    }
}
exports.StreamingApiCaller = StreamingApiCaller; //# sourceMappingURL=streamingApiCaller.js.map
}}),
"[project]/node_modules/google-gax/build/src/streamingCalls/streamDescriptor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StreamDescriptor = void 0;
const streamingApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streamingApiCaller.js [app-rsc] (ecmascript)");
/**
 * A descriptor for streaming calls.
 */ class StreamDescriptor {
    constructor(streamType, rest, gaxStreamingRetries){
        this.type = streamType;
        this.streaming = true;
        this.rest = rest;
        this.gaxStreamingRetries = gaxStreamingRetries;
    }
    getApiCaller() {
        // Right now retrying does not work with gRPC-streaming, because retryable
        // assumes an API call returns an event emitter while gRPC-streaming methods
        // return Stream.
        return new streamingApiCaller_1.StreamingApiCaller(this);
    }
}
exports.StreamDescriptor = StreamDescriptor; //# sourceMappingURL=streamDescriptor.js.map
}}),
"[project]/node_modules/google-gax/build/src/bundlingCalls/bundleApiCaller.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundleApiCaller = void 0;
const call_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/call.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
/**
 * An implementation of APICaller for bundled calls.
 * Uses BundleExecutor to do bundling.
 */ class BundleApiCaller {
    constructor(bundler){
        this.bundler = bundler;
    }
    init(callback) {
        if (callback) {
            return new call_1.OngoingCall(callback);
        }
        return new call_1.OngoingCallPromise();
    }
    wrap(func) {
        return func;
    }
    call(apiCall, argument, settings, status) {
        if (!settings.isBundling) {
            throw new googleError_1.GoogleError('Bundling enabled with no isBundling!');
        }
        status.call((argument, callback)=>{
            this.bundler.schedule(apiCall, argument, callback);
            return status;
        }, argument);
    }
    fail(canceller, err) {
        canceller.callback(err);
    }
    result(canceller) {
        return canceller.promise;
    }
}
exports.BundleApiCaller = BundleApiCaller; //# sourceMappingURL=bundleApiCaller.js.map
}}),
"[project]/node_modules/google-gax/build/src/bundlingCalls/bundlingUtils.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.computeBundleId = computeBundleId;
/**
 * Compute the identifier of the `obj`. The objects of the same ID
 * will be bundled together.
 *
 * @param {RequestType} obj - The request object.
 * @param {String[]} discriminatorFields - The array of field names.
 *   A field name may include '.' as a separator, which is used to
 *   indicate object traversal.
 * @return {String|undefined} - the identifier string, or undefined if any
 *   discriminator fields do not exist.
 */ function computeBundleId(obj, discriminatorFields) {
    const ids = [];
    let hasIds = false;
    for (const field of discriminatorFields){
        const id = at(obj, field);
        if (id === undefined) {
            ids.push(null);
        } else {
            hasIds = true;
            ids.push(id);
        }
    }
    if (!hasIds) {
        return undefined;
    }
    return JSON.stringify(ids);
}
/**
 * Given an object field path that may contain dots, dig into the obj and find
 * the value at the given path.
 * @example
 * const obj = {
 *   a: {
 *     b: 5
 *   }
 * }
 * const id = at(obj, 'a.b');
 * // id = 5
 * @param field Path to the property with `.` notation
 * @param obj The object to traverse
 * @returns the value at the given path
 */ function at(obj, field) {
    const pathParts = field.split('.');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let currentObj = obj;
    for (const pathPart of pathParts){
        currentObj = currentObj === null || currentObj === void 0 ? void 0 : currentObj[pathPart];
    }
    return currentObj;
} //# sourceMappingURL=bundlingUtils.js.map
}}),
"[project]/node_modules/google-gax/build/src/bundlingCalls/task.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Task = void 0;
exports.deepCopyForResponse = deepCopyForResponse;
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
/**
 * Creates a deep copy of the object with the consideration of subresponse
 * fields for bundling.
 *
 * @param {Object} obj - The source object.
 * @param {Object?} subresponseInfo - The information to copy the subset of
 *   the field for the response. Do nothing if it's null.
 * @param {String} subresponseInfo.field - The field name.
 * @param {number} subresponseInfo.start - The offset where the copying
 *   element should starts with.
 * @param {number} subresponseInfo.end - The ending index where the copying
 *   region of the elements ends.
 * @return {Object} The copied object.
 * @private
 */ function deepCopyForResponse(// eslint-disable-next-line @typescript-eslint/no-explicit-any
obj, subresponseInfo) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let result;
    if (obj === null) {
        return null;
    }
    if (obj === undefined) {
        return undefined;
    }
    if (Array.isArray(obj)) {
        result = [];
        obj.forEach((element)=>{
            result.push(deepCopyForResponse(element, null));
        });
        return result;
    }
    // Some objects (such as ByteBuffer) have copy method.
    if (obj.copy !== undefined) {
        return obj.copy();
    }
    // ArrayBuffer should be copied through slice().
    if (obj instanceof ArrayBuffer) {
        return obj.slice(0);
    }
    if (typeof obj === 'object') {
        result = {};
        Object.keys(obj).forEach((key)=>{
            if (subresponseInfo && key === subresponseInfo.field && Array.isArray(obj[key])) {
                // Note that subresponses are not deep-copied. This is safe because
                // those subresponses are not shared among callbacks.
                result[key] = obj[key].slice(subresponseInfo.start, subresponseInfo.end);
            } else {
                result[key] = deepCopyForResponse(obj[key], null);
            }
        });
        return result;
    }
    return obj;
}
class Task {
    /**
     * A task coordinates the execution of a single bundle.
     *
     * @param {function} apiCall - The function to conduct calling API.
     * @param {Object} bundlingRequest - The base request object to be used
     *   for the actual API call.
     * @param {string} bundledField - The name of the field in bundlingRequest
     *   to be bundled.
     * @param {string=} subresponseField - The name of the field in the response
     *   to be passed to the callback.
     * @constructor
     * @private
     */ constructor(apiCall, bundlingRequest, bundledField, subresponseField){
        this._apiCall = apiCall;
        this._request = bundlingRequest;
        this._bundledField = bundledField;
        this._subresponseField = subresponseField;
        this._data = [];
    }
    /**
     * Returns the number of elements in a task.
     * @return {number} The number of elements.
     */ getElementCount() {
        let count = 0;
        for(let i = 0; i < this._data.length; ++i){
            count += this._data[i].elements.length;
        }
        return count;
    }
    /**
     * Returns the total byte size of the elements in a task.
     * @return {number} The byte size.
     */ getRequestByteSize() {
        let size = 0;
        for(let i = 0; i < this._data.length; ++i){
            size += this._data[i].bytes;
        }
        return size;
    }
    /**
     * Invokes the actual API call with current elements.
     * @return {string[]} - the list of ids for invocations to be run.
     */ run() {
        if (this._data.length === 0) {
            return [];
        }
        const request = this._request;
        const elements = [];
        const ids = [];
        for(let i = 0; i < this._data.length; ++i){
            elements.push(...this._data[i].elements);
            ids.push(this._data[i].callback.id);
        }
        request[this._bundledField] = elements;
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const self = this;
        this.callCanceller = this._apiCall(request, (err, response)=>{
            const responses = [];
            if (err) {
                self._data.forEach(()=>{
                    responses.push(undefined);
                });
            } else {
                let subresponseInfo = null;
                if (self._subresponseField) {
                    subresponseInfo = {
                        field: self._subresponseField,
                        start: 0
                    };
                }
                self._data.forEach((data)=>{
                    if (subresponseInfo) {
                        subresponseInfo.end = subresponseInfo.start + data.elements.length;
                    }
                    responses.push(deepCopyForResponse(response, subresponseInfo));
                    if (subresponseInfo) {
                        subresponseInfo.start = subresponseInfo.end;
                    }
                });
            }
            for(let i = 0; i < self._data.length; ++i){
                if (self._data[i].cancelled) {
                    const error = new googleError_1.GoogleError('cancelled');
                    error.code = status_1.Status.CANCELLED;
                    self._data[i].callback(error);
                } else {
                    self._data[i].callback(err, responses[i]);
                }
            }
        });
        return ids;
    }
    /**
     * Appends the list of elements into the task.
     * @param {Object[]} elements - the new list of elements.
     * @param {number} bytes - the byte size required to encode elements in the API.
     * @param {APICallback} callback - the callback of the method call.
     */ extend(elements, bytes, callback) {
        this._data.push({
            elements,
            bytes,
            callback
        });
    }
    /**
     * Cancels a part of elements.
     * @param {string} id - The identifier of the part of elements.
     * @return {boolean} Whether the entire task will be canceled or not.
     */ cancel(id) {
        if (this.callCanceller) {
            let allCancelled = true;
            this._data.forEach((d)=>{
                if (d.callback.id === id) {
                    d.cancelled = true;
                }
                if (!d.cancelled) {
                    allCancelled = false;
                }
            });
            if (allCancelled) {
                this.callCanceller.cancel();
            }
            return allCancelled;
        }
        for(let i = 0; i < this._data.length; ++i){
            if (this._data[i].callback.id === id) {
                const error = new googleError_1.GoogleError('cancelled');
                error.code = status_1.Status.CANCELLED;
                this._data[i].callback(error);
                this._data.splice(i, 1);
                break;
            }
        }
        return this._data.length === 0;
    }
}
exports.Task = Task; //# sourceMappingURL=task.js.map
}}),
"[project]/node_modules/google-gax/build/src/bundlingCalls/bundleExecutor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundleExecutor = void 0;
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
const bundlingUtils_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/bundlingCalls/bundlingUtils.js [app-rsc] (ecmascript)");
const task_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/bundlingCalls/task.js [app-rsc] (ecmascript)");
function noop() {}
/**
 * BundleExecutor stores several timers for each bundle (calls are bundled based
 * on the options passed, each bundle has unique ID that is calculated based on
 * field values). Each timer fires and sends a call after certain amount of
 * time, and if a new request comes to the same bundle, the timer can be
 * restarted.
 */ class BundleExecutor {
    /**
     * Organizes requests for an api service that requires to bundle them.
     *
     * @param {BundleOptions} bundleOptions - configures strategy this instance
     *   uses when executing bundled functions.
     * @param {BundleDescriptor} bundleDescriptor - the description of the bundling.
     * @constructor
     */ constructor(bundleOptions, bundleDescriptor){
        this._options = bundleOptions;
        this._descriptor = bundleDescriptor;
        this._tasks = {};
        this._timers = {};
        this._invocations = {};
        this._invocationId = 0;
    }
    /**
     * Schedule a method call.
     *
     * @param {function} apiCall - the function for an API call.
     * @param {Object} request - the request object to be bundled with others.
     * @param {APICallback} callback - the callback to be called when the method finished.
     * @return {function()} - the function to cancel the scheduled invocation.
     */ schedule(apiCall, request, callback) {
        const bundleId = (0, bundlingUtils_1.computeBundleId)(request, this._descriptor.requestDiscriminatorFields);
        callback = callback || noop;
        if (bundleId === undefined) {
            (0, warnings_1.warn)('bundling_schedule_bundleid_undefined', 'The request does not have enough information for request bundling. ' + `Invoking immediately. Request: ${JSON.stringify(request)} ` + `discriminator fields: ${this._descriptor.requestDiscriminatorFields}`);
            return apiCall(request, callback);
        }
        if (request[this._descriptor.bundledField] === undefined) {
            (0, warnings_1.warn)('bundling_no_bundled_field', `Request does not contain field ${this._descriptor.bundledField} that must present for bundling. ` + `Invoking immediately. Request: ${JSON.stringify(request)}`);
            return apiCall(request, callback);
        }
        if (!(bundleId in this._tasks)) {
            this._tasks[bundleId] = new task_1.Task(apiCall, request, this._descriptor.bundledField, this._descriptor.subresponseField);
        }
        let task = this._tasks[bundleId];
        callback.id = String(this._invocationId++);
        this._invocations[callback.id] = bundleId;
        const bundledField = request[this._descriptor.bundledField];
        const elementCount = bundledField.length;
        let requestBytes = 0;
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const self = this;
        bundledField.forEach((obj)=>{
            requestBytes += this._descriptor.byteLengthFunction(obj);
        });
        const countLimit = this._options.elementCountLimit || 0;
        const byteLimit = this._options.requestByteLimit || 0;
        if (countLimit > 0 && elementCount > countLimit || byteLimit > 0 && requestBytes >= byteLimit) {
            let message;
            if (countLimit > 0 && elementCount > countLimit) {
                message = 'The number of elements ' + elementCount + ' exceeds the limit ' + this._options.elementCountLimit;
            } else {
                message = 'The required bytes ' + requestBytes + ' exceeds the limit ' + this._options.requestByteLimit;
            }
            const error = new googleError_1.GoogleError(message);
            error.code = status_1.Status.INVALID_ARGUMENT;
            callback(error);
            return {
                cancel: noop
            };
        }
        const existingCount = task.getElementCount();
        const existingBytes = task.getRequestByteSize();
        if (countLimit > 0 && elementCount + existingCount >= countLimit || byteLimit > 0 && requestBytes + existingBytes >= byteLimit) {
            this._runNow(bundleId);
            this._tasks[bundleId] = new task_1.Task(apiCall, request, this._descriptor.bundledField, this._descriptor.subresponseField);
            task = this._tasks[bundleId];
        }
        task.extend(bundledField, requestBytes, callback);
        const ret = {
            cancel () {
                self._cancel(callback.id);
            }
        };
        const countThreshold = this._options.elementCountThreshold || 0;
        const sizeThreshold = this._options.requestByteThreshold || 0;
        if (countThreshold > 0 && task.getElementCount() >= countThreshold || sizeThreshold > 0 && task.getRequestByteSize() >= sizeThreshold) {
            this._runNow(bundleId);
            return ret;
        }
        if (!(bundleId in this._timers) && this._options.delayThreshold > 0) {
            this._timers[bundleId] = setTimeout(()=>{
                delete this._timers[bundleId];
                this._runNow(bundleId);
            }, this._options.delayThreshold);
        }
        return ret;
    }
    /**
     * Clears scheduled timeout if it exists.
     *
     * @param {String} bundleId - the id for the task whose timeout needs to be
     *   cleared.
     * @private
     */ _maybeClearTimeout(bundleId) {
        if (bundleId in this._timers) {
            const timerId = this._timers[bundleId];
            delete this._timers[bundleId];
            clearTimeout(timerId);
        }
    }
    /**
     * Cancels an event.
     *
     * @param {String} id - The id for the event in the task.
     * @private
     */ _cancel(id) {
        if (!(id in this._invocations)) {
            return;
        }
        const bundleId = this._invocations[id];
        if (!(bundleId in this._tasks)) {
            return;
        }
        const task = this._tasks[bundleId];
        delete this._invocations[id];
        if (task.cancel(id)) {
            this._maybeClearTimeout(bundleId);
            delete this._tasks[bundleId];
        }
    }
    /**
     * Invokes a task.
     *
     * @param {String} bundleId - The id for the task.
     * @private
     */ _runNow(bundleId) {
        if (!(bundleId in this._tasks)) {
            (0, warnings_1.warn)('bundle_runnow_bundleid_unknown', `No such bundleid: ${bundleId}`);
            return;
        }
        this._maybeClearTimeout(bundleId);
        const task = this._tasks[bundleId];
        delete this._tasks[bundleId];
        task.run().forEach((id)=>{
            delete this._invocations[id];
        });
    }
}
exports.BundleExecutor = BundleExecutor; //# sourceMappingURL=bundleExecutor.js.map
}}),
"[project]/node_modules/google-gax/build/src/bundlingCalls/bundleDescriptor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundleDescriptor = void 0;
const normalApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/normalCalls/normalApiCaller.js [app-rsc] (ecmascript)");
const bundleApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/bundlingCalls/bundleApiCaller.js [app-rsc] (ecmascript)");
const bundleExecutor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/bundlingCalls/bundleExecutor.js [app-rsc] (ecmascript)");
const util_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)");
/**
 * A descriptor for calls that can be bundled into one call.
 */ class BundleDescriptor {
    /**
     * Describes the structure of bundled call.
     *
     * requestDiscriminatorFields may include '.' as a separator, which is used to
     * indicate object traversal. This allows fields in nested objects to be used
     * to determine what request to bundle.
     *
     * @property {String} bundledField
     * @property {String} requestDiscriminatorFields
     * @property {String} subresponseField
     * @property {Function} byteLengthFunction
     *
     * @param {String} bundledField - the repeated field in the request message
     *   that will have its elements aggregated by bundling.
     * @param {String} requestDiscriminatorFields - a list of fields in the
     *   target request message class that are used to detemrine which request
     *   messages should be bundled together.
     * @param {String} subresponseField - an optional field, when present it
     *   indicates the field in the response message that should be used to
     *   demultiplex the response into multiple response messages.
     * @param {Function} byteLengthFunction - a function to obtain the byte
     *   length to be consumed for the bundled field messages. Because Node.JS
     *   protobuf.js/gRPC uses builtin Objects for the user-visible data and
     *   internally they are encoded/decoded in protobuf manner, this function
     *   is actually necessary to calculate the byte length.
     * @constructor
     */ constructor(bundledField, requestDiscriminatorFields, subresponseField, byteLengthFunction){
        if (!byteLengthFunction && typeof subresponseField === 'function') {
            byteLengthFunction = subresponseField;
            subresponseField = null;
        }
        this.bundledField = bundledField;
        this.requestDiscriminatorFields = requestDiscriminatorFields.map(util_1.toCamelCase);
        this.subresponseField = subresponseField;
        this.byteLengthFunction = byteLengthFunction;
    }
    getApiCaller(settings) {
        if (settings.isBundling === false) {
            return new normalApiCaller_1.NormalApiCaller();
        }
        return new bundleApiCaller_1.BundleApiCaller(new bundleExecutor_1.BundleExecutor(settings.bundleOptions, this));
    }
}
exports.BundleDescriptor = BundleDescriptor; //# sourceMappingURL=bundleDescriptor.js.map
}}),
"[project]/node_modules/google-gax/build/src/descriptor.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BundleDescriptor = exports.StreamDescriptor = exports.PageDescriptor = exports.LongrunningDescriptor = void 0;
var longRunningDescriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/longRunningCalls/longRunningDescriptor.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "LongrunningDescriptor", {
    enumerable: true,
    get: function() {
        return longRunningDescriptor_1.LongRunningDescriptor;
    }
});
var pageDescriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/paginationCalls/pageDescriptor.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "PageDescriptor", {
    enumerable: true,
    get: function() {
        return pageDescriptor_1.PageDescriptor;
    }
});
var streamDescriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streamDescriptor.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "StreamDescriptor", {
    enumerable: true,
    get: function() {
        return streamDescriptor_1.StreamDescriptor;
    }
});
var bundleDescriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/bundlingCalls/bundleDescriptor.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "BundleDescriptor", {
    enumerable: true,
    get: function() {
        return bundleDescriptor_1.BundleDescriptor;
    }
}); //# sourceMappingURL=descriptor.js.map
}}),
"[project]/node_modules/google-gax/build/src/iam_policy_service_client_config.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"interfaces\":{\"google.iam.v1.IAMPolicy\":{\"retry_codes\":{\"non_idempotent\":[],\"idempotent\":[\"DEADLINE_EXCEEDED\",\"UNAVAILABLE\"]},\"retry_params\":{\"default\":{\"initial_retry_delay_millis\":100,\"retry_delay_multiplier\":1.3,\"max_retry_delay_millis\":60000,\"initial_rpc_timeout_millis\":20000,\"rpc_timeout_multiplier\":1,\"max_rpc_timeout_millis\":20000,\"total_timeout_millis\":600000}},\"methods\":{\"GetIamPolicy\":{\"retry_codes_name\":\"non_idempotent\",\"retry_params_name\":\"default\"},\"SetIamPolicy\":{\"retry_codes_name\":\"non_idempotent\",\"retry_params_name\":\"default\"},\"TestIamPermissions\":{\"retry_codes_name\":\"non_idempotent\",\"retry_params_name\":\"default\"}}}}}"));}}),
"[project]/node_modules/google-gax/build/protos/iam_service.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"nested\":{\"google\":{\"nested\":{\"iam\":{\"nested\":{\"v1\":{\"options\":{\"cc_enable_arenas\":true,\"csharp_namespace\":\"Google.Cloud.Iam.V1\",\"go_package\":\"google.golang.org/genproto/googleapis/iam/v1;iam\",\"java_multiple_files\":true,\"java_outer_classname\":\"PolicyProto\",\"java_package\":\"com.google.iam.v1\",\"php_namespace\":\"Google\\\\Cloud\\\\Iam\\\\V1\"},\"nested\":{\"IAMPolicy\":{\"options\":{\"(google.api.default_host)\":\"iam-meta-api.googleapis.com\"},\"methods\":{\"SetIamPolicy\":{\"requestType\":\"SetIamPolicyRequest\",\"responseType\":\"Policy\",\"options\":{\"(google.api.http).post\":\"/v1/{resource=**}:setIamPolicy\",\"(google.api.http).body\":\"*\"},\"parsedOptions\":[{\"(google.api.http)\":{\"post\":\"/v1/{resource=**}:setIamPolicy\",\"body\":\"*\"}}]},\"GetIamPolicy\":{\"requestType\":\"GetIamPolicyRequest\",\"responseType\":\"Policy\",\"options\":{\"(google.api.http).post\":\"/v1/{resource=**}:getIamPolicy\",\"(google.api.http).body\":\"*\"},\"parsedOptions\":[{\"(google.api.http)\":{\"post\":\"/v1/{resource=**}:getIamPolicy\",\"body\":\"*\"}}]},\"TestIamPermissions\":{\"requestType\":\"TestIamPermissionsRequest\",\"responseType\":\"TestIamPermissionsResponse\",\"options\":{\"(google.api.http).post\":\"/v1/{resource=**}:testIamPermissions\",\"(google.api.http).body\":\"*\"},\"parsedOptions\":[{\"(google.api.http)\":{\"post\":\"/v1/{resource=**}:testIamPermissions\",\"body\":\"*\"}}]}}},\"SetIamPolicyRequest\":{\"fields\":{\"resource\":{\"type\":\"string\",\"id\":1,\"options\":{\"(google.api.field_behavior)\":\"REQUIRED\",\"(google.api.resource_reference).type\":\"*\"}},\"policy\":{\"type\":\"Policy\",\"id\":2,\"options\":{\"(google.api.field_behavior)\":\"REQUIRED\"}}}},\"GetIamPolicyRequest\":{\"fields\":{\"resource\":{\"type\":\"string\",\"id\":1,\"options\":{\"(google.api.field_behavior)\":\"REQUIRED\",\"(google.api.resource_reference).type\":\"*\"}},\"options\":{\"type\":\"GetPolicyOptions\",\"id\":2}}},\"TestIamPermissionsRequest\":{\"fields\":{\"resource\":{\"type\":\"string\",\"id\":1,\"options\":{\"(google.api.field_behavior)\":\"REQUIRED\",\"(google.api.resource_reference).type\":\"*\"}},\"permissions\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":2,\"options\":{\"(google.api.field_behavior)\":\"REQUIRED\"}}}},\"TestIamPermissionsResponse\":{\"fields\":{\"permissions\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":1}}},\"GetPolicyOptions\":{\"fields\":{\"requestedPolicyVersion\":{\"type\":\"int32\",\"id\":1}}},\"Policy\":{\"fields\":{\"version\":{\"type\":\"int32\",\"id\":1},\"bindings\":{\"rule\":\"repeated\",\"type\":\"Binding\",\"id\":4},\"etag\":{\"type\":\"bytes\",\"id\":3}}},\"Binding\":{\"fields\":{\"role\":{\"type\":\"string\",\"id\":1},\"members\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":2},\"condition\":{\"type\":\"google.type.Expr\",\"id\":3}}},\"PolicyDelta\":{\"fields\":{\"bindingDeltas\":{\"rule\":\"repeated\",\"type\":\"BindingDelta\",\"id\":1},\"auditConfigDeltas\":{\"rule\":\"repeated\",\"type\":\"AuditConfigDelta\",\"id\":2}}},\"BindingDelta\":{\"fields\":{\"action\":{\"type\":\"Action\",\"id\":1},\"role\":{\"type\":\"string\",\"id\":2},\"member\":{\"type\":\"string\",\"id\":3},\"condition\":{\"type\":\"google.type.Expr\",\"id\":4}},\"nested\":{\"Action\":{\"values\":{\"ACTION_UNSPECIFIED\":0,\"ADD\":1,\"REMOVE\":2}}}},\"AuditConfigDelta\":{\"fields\":{\"action\":{\"type\":\"Action\",\"id\":1},\"service\":{\"type\":\"string\",\"id\":2},\"exemptedMember\":{\"type\":\"string\",\"id\":3},\"logType\":{\"type\":\"string\",\"id\":4}},\"nested\":{\"Action\":{\"values\":{\"ACTION_UNSPECIFIED\":0,\"ADD\":1,\"REMOVE\":2}}}},\"logging\":{\"options\":{\"csharp_namespace\":\"Google.Cloud.Iam.V1.Logging\",\"go_package\":\"google.golang.org/genproto/googleapis/iam/v1/logging;logging\",\"java_multiple_files\":true,\"java_outer_classname\":\"AuditDataProto\",\"java_package\":\"com.google.iam.v1.logging\"},\"nested\":{\"AuditData\":{\"fields\":{\"policyDelta\":{\"type\":\"google.iam.v1.PolicyDelta\",\"id\":2}}}}}}}}},\"api\":{\"options\":{\"go_package\":\"google.golang.org/genproto/googleapis/api/annotations;annotations\",\"java_multiple_files\":true,\"java_outer_classname\":\"ResourceProto\",\"java_package\":\"com.google.api\",\"objc_class_prefix\":\"GAPI\",\"cc_enable_arenas\":true},\"nested\":{\"http\":{\"type\":\"HttpRule\",\"id\":72295728,\"extend\":\"google.protobuf.MethodOptions\"},\"Http\":{\"fields\":{\"rules\":{\"rule\":\"repeated\",\"type\":\"HttpRule\",\"id\":1},\"fullyDecodeReservedExpansion\":{\"type\":\"bool\",\"id\":2}}},\"HttpRule\":{\"oneofs\":{\"pattern\":{\"oneof\":[\"get\",\"put\",\"post\",\"delete\",\"patch\",\"custom\"]}},\"fields\":{\"selector\":{\"type\":\"string\",\"id\":1},\"get\":{\"type\":\"string\",\"id\":2},\"put\":{\"type\":\"string\",\"id\":3},\"post\":{\"type\":\"string\",\"id\":4},\"delete\":{\"type\":\"string\",\"id\":5},\"patch\":{\"type\":\"string\",\"id\":6},\"custom\":{\"type\":\"CustomHttpPattern\",\"id\":8},\"body\":{\"type\":\"string\",\"id\":7},\"responseBody\":{\"type\":\"string\",\"id\":12},\"additionalBindings\":{\"rule\":\"repeated\",\"type\":\"HttpRule\",\"id\":11}}},\"CustomHttpPattern\":{\"fields\":{\"kind\":{\"type\":\"string\",\"id\":1},\"path\":{\"type\":\"string\",\"id\":2}}},\"methodSignature\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":1051,\"extend\":\"google.protobuf.MethodOptions\"},\"defaultHost\":{\"type\":\"string\",\"id\":1049,\"extend\":\"google.protobuf.ServiceOptions\"},\"oauthScopes\":{\"type\":\"string\",\"id\":1050,\"extend\":\"google.protobuf.ServiceOptions\"},\"fieldBehavior\":{\"rule\":\"repeated\",\"type\":\"google.api.FieldBehavior\",\"id\":1052,\"extend\":\"google.protobuf.FieldOptions\"},\"FieldBehavior\":{\"values\":{\"FIELD_BEHAVIOR_UNSPECIFIED\":0,\"OPTIONAL\":1,\"REQUIRED\":2,\"OUTPUT_ONLY\":3,\"INPUT_ONLY\":4,\"IMMUTABLE\":5}},\"resourceReference\":{\"type\":\"google.api.ResourceReference\",\"id\":1055,\"extend\":\"google.protobuf.FieldOptions\"},\"resourceDefinition\":{\"rule\":\"repeated\",\"type\":\"google.api.ResourceDescriptor\",\"id\":1053,\"extend\":\"google.protobuf.FileOptions\"},\"resource\":{\"type\":\"google.api.ResourceDescriptor\",\"id\":1053,\"extend\":\"google.protobuf.MessageOptions\"},\"ResourceDescriptor\":{\"fields\":{\"type\":{\"type\":\"string\",\"id\":1},\"pattern\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":2},\"nameField\":{\"type\":\"string\",\"id\":3},\"history\":{\"type\":\"History\",\"id\":4},\"plural\":{\"type\":\"string\",\"id\":5},\"singular\":{\"type\":\"string\",\"id\":6}},\"nested\":{\"History\":{\"values\":{\"HISTORY_UNSPECIFIED\":0,\"ORIGINALLY_SINGLE_PATTERN\":1,\"FUTURE_MULTI_PATTERN\":2}}}},\"ResourceReference\":{\"fields\":{\"type\":{\"type\":\"string\",\"id\":1},\"childType\":{\"type\":\"string\",\"id\":2}}}}},\"protobuf\":{\"options\":{\"go_package\":\"github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor\",\"java_package\":\"com.google.protobuf\",\"java_outer_classname\":\"DescriptorProtos\",\"csharp_namespace\":\"Google.Protobuf.Reflection\",\"objc_class_prefix\":\"GPB\",\"cc_enable_arenas\":true,\"optimize_for\":\"SPEED\"},\"nested\":{\"FileDescriptorSet\":{\"fields\":{\"file\":{\"rule\":\"repeated\",\"type\":\"FileDescriptorProto\",\"id\":1}}},\"FileDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"package\":{\"type\":\"string\",\"id\":2},\"dependency\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":3},\"publicDependency\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":10,\"options\":{\"packed\":false}},\"weakDependency\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":11,\"options\":{\"packed\":false}},\"messageType\":{\"rule\":\"repeated\",\"type\":\"DescriptorProto\",\"id\":4},\"enumType\":{\"rule\":\"repeated\",\"type\":\"EnumDescriptorProto\",\"id\":5},\"service\":{\"rule\":\"repeated\",\"type\":\"ServiceDescriptorProto\",\"id\":6},\"extension\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":7},\"options\":{\"type\":\"FileOptions\",\"id\":8},\"sourceCodeInfo\":{\"type\":\"SourceCodeInfo\",\"id\":9},\"syntax\":{\"type\":\"string\",\"id\":12}}},\"DescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"field\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":2},\"extension\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":6},\"nestedType\":{\"rule\":\"repeated\",\"type\":\"DescriptorProto\",\"id\":3},\"enumType\":{\"rule\":\"repeated\",\"type\":\"EnumDescriptorProto\",\"id\":4},\"extensionRange\":{\"rule\":\"repeated\",\"type\":\"ExtensionRange\",\"id\":5},\"oneofDecl\":{\"rule\":\"repeated\",\"type\":\"OneofDescriptorProto\",\"id\":8},\"options\":{\"type\":\"MessageOptions\",\"id\":7},\"reservedRange\":{\"rule\":\"repeated\",\"type\":\"ReservedRange\",\"id\":9},\"reservedName\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":10}},\"nested\":{\"ExtensionRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2},\"options\":{\"type\":\"ExtensionRangeOptions\",\"id\":3}}},\"ReservedRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2}}}}},\"ExtensionRangeOptions\":{\"fields\":{\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"FieldDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"number\":{\"type\":\"int32\",\"id\":3},\"label\":{\"type\":\"Label\",\"id\":4},\"type\":{\"type\":\"Type\",\"id\":5},\"typeName\":{\"type\":\"string\",\"id\":6},\"extendee\":{\"type\":\"string\",\"id\":2},\"defaultValue\":{\"type\":\"string\",\"id\":7},\"oneofIndex\":{\"type\":\"int32\",\"id\":9},\"jsonName\":{\"type\":\"string\",\"id\":10},\"options\":{\"type\":\"FieldOptions\",\"id\":8},\"proto3Optional\":{\"type\":\"bool\",\"id\":17}},\"nested\":{\"Type\":{\"values\":{\"TYPE_DOUBLE\":1,\"TYPE_FLOAT\":2,\"TYPE_INT64\":3,\"TYPE_UINT64\":4,\"TYPE_INT32\":5,\"TYPE_FIXED64\":6,\"TYPE_FIXED32\":7,\"TYPE_BOOL\":8,\"TYPE_STRING\":9,\"TYPE_GROUP\":10,\"TYPE_MESSAGE\":11,\"TYPE_BYTES\":12,\"TYPE_UINT32\":13,\"TYPE_ENUM\":14,\"TYPE_SFIXED32\":15,\"TYPE_SFIXED64\":16,\"TYPE_SINT32\":17,\"TYPE_SINT64\":18}},\"Label\":{\"values\":{\"LABEL_OPTIONAL\":1,\"LABEL_REQUIRED\":2,\"LABEL_REPEATED\":3}}}},\"OneofDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"options\":{\"type\":\"OneofOptions\",\"id\":2}}},\"EnumDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"value\":{\"rule\":\"repeated\",\"type\":\"EnumValueDescriptorProto\",\"id\":2},\"options\":{\"type\":\"EnumOptions\",\"id\":3},\"reservedRange\":{\"rule\":\"repeated\",\"type\":\"EnumReservedRange\",\"id\":4},\"reservedName\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":5}},\"nested\":{\"EnumReservedRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2}}}}},\"EnumValueDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"number\":{\"type\":\"int32\",\"id\":2},\"options\":{\"type\":\"EnumValueOptions\",\"id\":3}}},\"ServiceDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"method\":{\"rule\":\"repeated\",\"type\":\"MethodDescriptorProto\",\"id\":2},\"options\":{\"type\":\"ServiceOptions\",\"id\":3}}},\"MethodDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"inputType\":{\"type\":\"string\",\"id\":2},\"outputType\":{\"type\":\"string\",\"id\":3},\"options\":{\"type\":\"MethodOptions\",\"id\":4},\"clientStreaming\":{\"type\":\"bool\",\"id\":5,\"options\":{\"default\":false}},\"serverStreaming\":{\"type\":\"bool\",\"id\":6,\"options\":{\"default\":false}}}},\"FileOptions\":{\"fields\":{\"javaPackage\":{\"type\":\"string\",\"id\":1},\"javaOuterClassname\":{\"type\":\"string\",\"id\":8},\"javaMultipleFiles\":{\"type\":\"bool\",\"id\":10,\"options\":{\"default\":false}},\"javaGenerateEqualsAndHash\":{\"type\":\"bool\",\"id\":20,\"options\":{\"deprecated\":true}},\"javaStringCheckUtf8\":{\"type\":\"bool\",\"id\":27,\"options\":{\"default\":false}},\"optimizeFor\":{\"type\":\"OptimizeMode\",\"id\":9,\"options\":{\"default\":\"SPEED\"}},\"goPackage\":{\"type\":\"string\",\"id\":11},\"ccGenericServices\":{\"type\":\"bool\",\"id\":16,\"options\":{\"default\":false}},\"javaGenericServices\":{\"type\":\"bool\",\"id\":17,\"options\":{\"default\":false}},\"pyGenericServices\":{\"type\":\"bool\",\"id\":18,\"options\":{\"default\":false}},\"phpGenericServices\":{\"type\":\"bool\",\"id\":42,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":23,\"options\":{\"default\":false}},\"ccEnableArenas\":{\"type\":\"bool\",\"id\":31,\"options\":{\"default\":true}},\"objcClassPrefix\":{\"type\":\"string\",\"id\":36},\"csharpNamespace\":{\"type\":\"string\",\"id\":37},\"swiftPrefix\":{\"type\":\"string\",\"id\":39},\"phpClassPrefix\":{\"type\":\"string\",\"id\":40},\"phpNamespace\":{\"type\":\"string\",\"id\":41},\"phpMetadataNamespace\":{\"type\":\"string\",\"id\":44},\"rubyPackage\":{\"type\":\"string\",\"id\":45},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[38,38]],\"nested\":{\"OptimizeMode\":{\"values\":{\"SPEED\":1,\"CODE_SIZE\":2,\"LITE_RUNTIME\":3}}}},\"MessageOptions\":{\"fields\":{\"messageSetWireFormat\":{\"type\":\"bool\",\"id\":1,\"options\":{\"default\":false}},\"noStandardDescriptorAccessor\":{\"type\":\"bool\",\"id\":2,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"mapEntry\":{\"type\":\"bool\",\"id\":7},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[8,8],[9,9]]},\"FieldOptions\":{\"fields\":{\"ctype\":{\"type\":\"CType\",\"id\":1,\"options\":{\"default\":\"STRING\"}},\"packed\":{\"type\":\"bool\",\"id\":2},\"jstype\":{\"type\":\"JSType\",\"id\":6,\"options\":{\"default\":\"JS_NORMAL\"}},\"lazy\":{\"type\":\"bool\",\"id\":5,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"weak\":{\"type\":\"bool\",\"id\":10,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[4,4]],\"nested\":{\"CType\":{\"values\":{\"STRING\":0,\"CORD\":1,\"STRING_PIECE\":2}},\"JSType\":{\"values\":{\"JS_NORMAL\":0,\"JS_STRING\":1,\"JS_NUMBER\":2}}}},\"OneofOptions\":{\"fields\":{\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"EnumOptions\":{\"fields\":{\"allowAlias\":{\"type\":\"bool\",\"id\":2},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[5,5]]},\"EnumValueOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":1,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"ServiceOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":33,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"MethodOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":33,\"options\":{\"default\":false}},\"idempotencyLevel\":{\"type\":\"IdempotencyLevel\",\"id\":34,\"options\":{\"default\":\"IDEMPOTENCY_UNKNOWN\"}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"nested\":{\"IdempotencyLevel\":{\"values\":{\"IDEMPOTENCY_UNKNOWN\":0,\"NO_SIDE_EFFECTS\":1,\"IDEMPOTENT\":2}}}},\"UninterpretedOption\":{\"fields\":{\"name\":{\"rule\":\"repeated\",\"type\":\"NamePart\",\"id\":2},\"identifierValue\":{\"type\":\"string\",\"id\":3},\"positiveIntValue\":{\"type\":\"uint64\",\"id\":4},\"negativeIntValue\":{\"type\":\"int64\",\"id\":5},\"doubleValue\":{\"type\":\"double\",\"id\":6},\"stringValue\":{\"type\":\"bytes\",\"id\":7},\"aggregateValue\":{\"type\":\"string\",\"id\":8}},\"nested\":{\"NamePart\":{\"fields\":{\"namePart\":{\"rule\":\"required\",\"type\":\"string\",\"id\":1},\"isExtension\":{\"rule\":\"required\",\"type\":\"bool\",\"id\":2}}}}},\"SourceCodeInfo\":{\"fields\":{\"location\":{\"rule\":\"repeated\",\"type\":\"Location\",\"id\":1}},\"nested\":{\"Location\":{\"fields\":{\"path\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":1},\"span\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":2},\"leadingComments\":{\"type\":\"string\",\"id\":3},\"trailingComments\":{\"type\":\"string\",\"id\":4},\"leadingDetachedComments\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":6}}}}},\"GeneratedCodeInfo\":{\"fields\":{\"annotation\":{\"rule\":\"repeated\",\"type\":\"Annotation\",\"id\":1}},\"nested\":{\"Annotation\":{\"fields\":{\"path\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":1},\"sourceFile\":{\"type\":\"string\",\"id\":2},\"begin\":{\"type\":\"int32\",\"id\":3},\"end\":{\"type\":\"int32\",\"id\":4}}}}}}},\"type\":{\"options\":{\"go_package\":\"google.golang.org/genproto/googleapis/type/expr;expr\",\"java_multiple_files\":true,\"java_outer_classname\":\"ExprProto\",\"java_package\":\"com.google.type\",\"objc_class_prefix\":\"GTP\"},\"nested\":{\"Expr\":{\"fields\":{\"expression\":{\"type\":\"string\",\"id\":1},\"title\":{\"type\":\"string\",\"id\":2},\"description\":{\"type\":\"string\",\"id\":3},\"location\":{\"type\":\"string\",\"id\":4}}}}}}}}}"));}}),
"[project]/node_modules/google-gax/build/src/iamService.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IamClient = void 0;
const createApiCall_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/createApiCall.js [app-rsc] (ecmascript)");
const routingHeader = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/routingHeader.js [app-rsc] (ecmascript)");
const gapicConfig = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/iam_policy_service_client_config.json (json)");
const fallback = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallback.js [app-rsc] (ecmascript)");
let version = __turbopack_context__.r("[project]/node_modules/google-gax/package.json (json)").version;
const jsonProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/iam_service.json (json)");
/**
 *  Google Cloud IAM Client.
 *  This is manually written for providing methods [setIamPolicy, getIamPolicy, testIamPerssion] to the generated client.
 */ class IamClient {
    constructor(gaxGrpc, // eslint-disable-next-line @typescript-eslint/no-explicit-any
    options){
        this._terminated = false;
        this.descriptors = {
            page: {},
            stream: {},
            longrunning: {}
        };
        this.innerApiCalls = {};
        this.gaxGrpc = gaxGrpc;
        // Ensure that options include the service address and port.
        const opts = Object.assign({
            servicePath: options.servicePath,
            port: options.port,
            clientConfig: options.clientConfig,
            apiEndpoint: options.apiEndpoint,
            fallback: options.fallback
        }, options);
        version = opts.fallback ? fallback.version : version;
        opts.scopes = this.constructor.scopes;
        // Save options to use in initialize() method.
        this._opts = opts;
        // Save the auth object to the client, for use by other methods.
        this.auth = gaxGrpc.auth;
        // Determine the client header string.
        const clientHeader = [
            `gax/${version}`,
            `gapic/${version}`
        ];
        if (typeof process !== 'undefined' && 'versions' in process) {
            clientHeader.push(`gl-node/${process.versions.node}`);
        } else {
            clientHeader.push(`gl-web/${version}`);
        }
        if (!opts.fallback) {
            clientHeader.push(`grpc/${gaxGrpc.grpcVersion}`);
        }
        if (opts.libName && opts.libVersion) {
            clientHeader.push(`${opts.libName}/${opts.libVersion}`);
        }
        // Load the applicable protos.
        this._protos = this.gaxGrpc.loadProtoJSON(jsonProtos);
        // Put together the default options sent with requests.
        this._defaults = gaxGrpc.constructSettings('google.iam.v1.IAMPolicy', gapicConfig, opts.clientConfig || {}, {
            'x-goog-api-client': clientHeader.join(' ')
        });
        this.innerApiCalls = {};
    }
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */ initialize() {
        // If the client stub promise is already initialized, return immediately.
        if (this.iamPolicyStub) {
            return this.iamPolicyStub;
        }
        // Put together the "service stub" for
        // google.iam.v1.IAMPolicy.
        this.iamPolicyStub = this.gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.iam.v1.IAMPolicy') : this._protos.google.iam.v1.IAMPolicy, this._opts);
        // Iterate over each of the methods that the service provides
        // and create an API call method for each.
        const iamPolicyStubMethods = [
            'getIamPolicy',
            'setIamPolicy',
            'testIamPermissions'
        ];
        for (const methodName of iamPolicyStubMethods){
            const innerCallPromise = this.iamPolicyStub.then((stub)=>(...args)=>{
                    if (this._terminated) {
                        return Promise.reject('The client has already been closed.');
                    }
                    const func = stub[methodName];
                    return func.apply(stub, args);
                }, (err)=>()=>{
                    throw err;
                });
            this.innerApiCalls[methodName] = (0, createApiCall_1.createApiCall)(innerCallPromise, this._defaults[methodName], this.descriptors.page[methodName]);
        }
        return this.iamPolicyStub;
    }
    /**
     * The DNS address for this API service.
     */ static get servicePath() {
        return 'cloudkms.googleapis.com';
    }
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     */ static get apiEndpoint() {
        return 'cloudkms.googleapis.com';
    }
    /**
     * The port for this API service.
     */ static get port() {
        return 443;
    }
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     */ static get scopes() {
        return [
            'https://www.googleapis.com/auth/cloud-platform',
            'https://www.googleapis.com/auth/cloudkms'
        ];
    }
    getProjectId(callback) {
        if (this.auth && 'getProjectId' in this.auth) {
            return this.auth.getProjectId(callback);
        }
        if (callback) {
            callback(new Error('Cannot determine project ID.'));
        } else {
            return Promise.reject('Cannot determine project ID.');
        }
    }
    getIamPolicy(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({
            resource: request.resource
        });
        this.initialize();
        return this.innerApiCalls.getIamPolicy(request, options, callback);
    }
    setIamPolicy(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({
            resource: request.resource
        });
        this.initialize();
        return this.innerApiCalls.setIamPolicy(request, options, callback);
    }
    testIamPermissions(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({
            resource: request.resource
        });
        this.initialize();
        return this.innerApiCalls.testIamPermissions(request, options, callback);
    }
    /**
     * Terminate the GRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     */ close() {
        this.initialize();
        if (!this._terminated) {
            return this.iamPolicyStub.then((stub)=>{
                this._terminated = true;
                stub.close();
            });
        }
        return Promise.resolve();
    }
}
exports.IamClient = IamClient; //# sourceMappingURL=iamService.js.map
}}),
"[project]/node_modules/google-gax/build/protos/locations.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"nested\":{\"google\":{\"nested\":{\"cloud\":{\"nested\":{\"location\":{\"options\":{\"cc_enable_arenas\":true,\"go_package\":\"google.golang.org/genproto/googleapis/cloud/location;location\",\"java_multiple_files\":true,\"java_outer_classname\":\"LocationsProto\",\"java_package\":\"com.google.cloud.location\"},\"nested\":{\"Locations\":{\"options\":{\"(google.api.default_host)\":\"cloud.googleapis.com\",\"(google.api.oauth_scopes)\":\"https://www.googleapis.com/auth/cloud-platform\"},\"methods\":{\"ListLocations\":{\"requestType\":\"ListLocationsRequest\",\"responseType\":\"ListLocationsResponse\",\"options\":{\"(google.api.http).get\":\"/v1/{name=locations}\",\"(google.api.http).additional_bindings.get\":\"/v1/{name=projects/*}/locations\"},\"parsedOptions\":[{\"(google.api.http)\":{\"get\":\"/v1/{name=locations}\",\"additional_bindings\":{\"get\":\"/v1/{name=projects/*}/locations\"}}}]},\"GetLocation\":{\"requestType\":\"GetLocationRequest\",\"responseType\":\"Location\",\"options\":{\"(google.api.http).get\":\"/v1/{name=locations/*}\",\"(google.api.http).additional_bindings.get\":\"/v1/{name=projects/*/locations/*}\"},\"parsedOptions\":[{\"(google.api.http)\":{\"get\":\"/v1/{name=locations/*}\",\"additional_bindings\":{\"get\":\"/v1/{name=projects/*/locations/*}\"}}}]}}},\"ListLocationsRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"filter\":{\"type\":\"string\",\"id\":2},\"pageSize\":{\"type\":\"int32\",\"id\":3},\"pageToken\":{\"type\":\"string\",\"id\":4}}},\"ListLocationsResponse\":{\"fields\":{\"locations\":{\"rule\":\"repeated\",\"type\":\"Location\",\"id\":1},\"nextPageToken\":{\"type\":\"string\",\"id\":2}}},\"GetLocationRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1}}},\"Location\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"locationId\":{\"type\":\"string\",\"id\":4},\"displayName\":{\"type\":\"string\",\"id\":5},\"labels\":{\"keyType\":\"string\",\"type\":\"string\",\"id\":2},\"metadata\":{\"type\":\"google.protobuf.Any\",\"id\":3}}}}}}},\"api\":{\"options\":{\"go_package\":\"google.golang.org/genproto/googleapis/api/annotations;annotations\",\"java_multiple_files\":true,\"java_outer_classname\":\"ClientProto\",\"java_package\":\"com.google.api\",\"objc_class_prefix\":\"GAPI\",\"cc_enable_arenas\":true},\"nested\":{\"http\":{\"type\":\"HttpRule\",\"id\":72295728,\"extend\":\"google.protobuf.MethodOptions\"},\"Http\":{\"fields\":{\"rules\":{\"rule\":\"repeated\",\"type\":\"HttpRule\",\"id\":1},\"fullyDecodeReservedExpansion\":{\"type\":\"bool\",\"id\":2}}},\"HttpRule\":{\"oneofs\":{\"pattern\":{\"oneof\":[\"get\",\"put\",\"post\",\"delete\",\"patch\",\"custom\"]}},\"fields\":{\"selector\":{\"type\":\"string\",\"id\":1},\"get\":{\"type\":\"string\",\"id\":2},\"put\":{\"type\":\"string\",\"id\":3},\"post\":{\"type\":\"string\",\"id\":4},\"delete\":{\"type\":\"string\",\"id\":5},\"patch\":{\"type\":\"string\",\"id\":6},\"custom\":{\"type\":\"CustomHttpPattern\",\"id\":8},\"body\":{\"type\":\"string\",\"id\":7},\"responseBody\":{\"type\":\"string\",\"id\":12},\"additionalBindings\":{\"rule\":\"repeated\",\"type\":\"HttpRule\",\"id\":11}}},\"CustomHttpPattern\":{\"fields\":{\"kind\":{\"type\":\"string\",\"id\":1},\"path\":{\"type\":\"string\",\"id\":2}}},\"methodSignature\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":1051,\"extend\":\"google.protobuf.MethodOptions\"},\"defaultHost\":{\"type\":\"string\",\"id\":1049,\"extend\":\"google.protobuf.ServiceOptions\"},\"oauthScopes\":{\"type\":\"string\",\"id\":1050,\"extend\":\"google.protobuf.ServiceOptions\"}}},\"protobuf\":{\"options\":{\"go_package\":\"google.golang.org/protobuf/types/descriptorpb\",\"java_package\":\"com.google.protobuf\",\"java_outer_classname\":\"DescriptorProtos\",\"csharp_namespace\":\"Google.Protobuf.Reflection\",\"objc_class_prefix\":\"GPB\",\"cc_enable_arenas\":true,\"optimize_for\":\"SPEED\"},\"nested\":{\"FileDescriptorSet\":{\"fields\":{\"file\":{\"rule\":\"repeated\",\"type\":\"FileDescriptorProto\",\"id\":1}}},\"FileDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"package\":{\"type\":\"string\",\"id\":2},\"dependency\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":3},\"publicDependency\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":10,\"options\":{\"packed\":false}},\"weakDependency\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":11,\"options\":{\"packed\":false}},\"messageType\":{\"rule\":\"repeated\",\"type\":\"DescriptorProto\",\"id\":4},\"enumType\":{\"rule\":\"repeated\",\"type\":\"EnumDescriptorProto\",\"id\":5},\"service\":{\"rule\":\"repeated\",\"type\":\"ServiceDescriptorProto\",\"id\":6},\"extension\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":7},\"options\":{\"type\":\"FileOptions\",\"id\":8},\"sourceCodeInfo\":{\"type\":\"SourceCodeInfo\",\"id\":9},\"syntax\":{\"type\":\"string\",\"id\":12}}},\"DescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"field\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":2},\"extension\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":6},\"nestedType\":{\"rule\":\"repeated\",\"type\":\"DescriptorProto\",\"id\":3},\"enumType\":{\"rule\":\"repeated\",\"type\":\"EnumDescriptorProto\",\"id\":4},\"extensionRange\":{\"rule\":\"repeated\",\"type\":\"ExtensionRange\",\"id\":5},\"oneofDecl\":{\"rule\":\"repeated\",\"type\":\"OneofDescriptorProto\",\"id\":8},\"options\":{\"type\":\"MessageOptions\",\"id\":7},\"reservedRange\":{\"rule\":\"repeated\",\"type\":\"ReservedRange\",\"id\":9},\"reservedName\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":10}},\"nested\":{\"ExtensionRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2},\"options\":{\"type\":\"ExtensionRangeOptions\",\"id\":3}}},\"ReservedRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2}}}}},\"ExtensionRangeOptions\":{\"fields\":{\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"FieldDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"number\":{\"type\":\"int32\",\"id\":3},\"label\":{\"type\":\"Label\",\"id\":4},\"type\":{\"type\":\"Type\",\"id\":5},\"typeName\":{\"type\":\"string\",\"id\":6},\"extendee\":{\"type\":\"string\",\"id\":2},\"defaultValue\":{\"type\":\"string\",\"id\":7},\"oneofIndex\":{\"type\":\"int32\",\"id\":9},\"jsonName\":{\"type\":\"string\",\"id\":10},\"options\":{\"type\":\"FieldOptions\",\"id\":8},\"proto3Optional\":{\"type\":\"bool\",\"id\":17}},\"nested\":{\"Type\":{\"values\":{\"TYPE_DOUBLE\":1,\"TYPE_FLOAT\":2,\"TYPE_INT64\":3,\"TYPE_UINT64\":4,\"TYPE_INT32\":5,\"TYPE_FIXED64\":6,\"TYPE_FIXED32\":7,\"TYPE_BOOL\":8,\"TYPE_STRING\":9,\"TYPE_GROUP\":10,\"TYPE_MESSAGE\":11,\"TYPE_BYTES\":12,\"TYPE_UINT32\":13,\"TYPE_ENUM\":14,\"TYPE_SFIXED32\":15,\"TYPE_SFIXED64\":16,\"TYPE_SINT32\":17,\"TYPE_SINT64\":18}},\"Label\":{\"values\":{\"LABEL_OPTIONAL\":1,\"LABEL_REQUIRED\":2,\"LABEL_REPEATED\":3}}}},\"OneofDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"options\":{\"type\":\"OneofOptions\",\"id\":2}}},\"EnumDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"value\":{\"rule\":\"repeated\",\"type\":\"EnumValueDescriptorProto\",\"id\":2},\"options\":{\"type\":\"EnumOptions\",\"id\":3},\"reservedRange\":{\"rule\":\"repeated\",\"type\":\"EnumReservedRange\",\"id\":4},\"reservedName\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":5}},\"nested\":{\"EnumReservedRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2}}}}},\"EnumValueDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"number\":{\"type\":\"int32\",\"id\":2},\"options\":{\"type\":\"EnumValueOptions\",\"id\":3}}},\"ServiceDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"method\":{\"rule\":\"repeated\",\"type\":\"MethodDescriptorProto\",\"id\":2},\"options\":{\"type\":\"ServiceOptions\",\"id\":3}}},\"MethodDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"inputType\":{\"type\":\"string\",\"id\":2},\"outputType\":{\"type\":\"string\",\"id\":3},\"options\":{\"type\":\"MethodOptions\",\"id\":4},\"clientStreaming\":{\"type\":\"bool\",\"id\":5,\"options\":{\"default\":false}},\"serverStreaming\":{\"type\":\"bool\",\"id\":6,\"options\":{\"default\":false}}}},\"FileOptions\":{\"fields\":{\"javaPackage\":{\"type\":\"string\",\"id\":1},\"javaOuterClassname\":{\"type\":\"string\",\"id\":8},\"javaMultipleFiles\":{\"type\":\"bool\",\"id\":10,\"options\":{\"default\":false}},\"javaGenerateEqualsAndHash\":{\"type\":\"bool\",\"id\":20,\"options\":{\"deprecated\":true}},\"javaStringCheckUtf8\":{\"type\":\"bool\",\"id\":27,\"options\":{\"default\":false}},\"optimizeFor\":{\"type\":\"OptimizeMode\",\"id\":9,\"options\":{\"default\":\"SPEED\"}},\"goPackage\":{\"type\":\"string\",\"id\":11},\"ccGenericServices\":{\"type\":\"bool\",\"id\":16,\"options\":{\"default\":false}},\"javaGenericServices\":{\"type\":\"bool\",\"id\":17,\"options\":{\"default\":false}},\"pyGenericServices\":{\"type\":\"bool\",\"id\":18,\"options\":{\"default\":false}},\"phpGenericServices\":{\"type\":\"bool\",\"id\":42,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":23,\"options\":{\"default\":false}},\"ccEnableArenas\":{\"type\":\"bool\",\"id\":31,\"options\":{\"default\":true}},\"objcClassPrefix\":{\"type\":\"string\",\"id\":36},\"csharpNamespace\":{\"type\":\"string\",\"id\":37},\"swiftPrefix\":{\"type\":\"string\",\"id\":39},\"phpClassPrefix\":{\"type\":\"string\",\"id\":40},\"phpNamespace\":{\"type\":\"string\",\"id\":41},\"phpMetadataNamespace\":{\"type\":\"string\",\"id\":44},\"rubyPackage\":{\"type\":\"string\",\"id\":45},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[38,38]],\"nested\":{\"OptimizeMode\":{\"values\":{\"SPEED\":1,\"CODE_SIZE\":2,\"LITE_RUNTIME\":3}}}},\"MessageOptions\":{\"fields\":{\"messageSetWireFormat\":{\"type\":\"bool\",\"id\":1,\"options\":{\"default\":false}},\"noStandardDescriptorAccessor\":{\"type\":\"bool\",\"id\":2,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"mapEntry\":{\"type\":\"bool\",\"id\":7},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[8,8],[9,9]]},\"FieldOptions\":{\"fields\":{\"ctype\":{\"type\":\"CType\",\"id\":1,\"options\":{\"default\":\"STRING\"}},\"packed\":{\"type\":\"bool\",\"id\":2},\"jstype\":{\"type\":\"JSType\",\"id\":6,\"options\":{\"default\":\"JS_NORMAL\"}},\"lazy\":{\"type\":\"bool\",\"id\":5,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"weak\":{\"type\":\"bool\",\"id\":10,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[4,4]],\"nested\":{\"CType\":{\"values\":{\"STRING\":0,\"CORD\":1,\"STRING_PIECE\":2}},\"JSType\":{\"values\":{\"JS_NORMAL\":0,\"JS_STRING\":1,\"JS_NUMBER\":2}}}},\"OneofOptions\":{\"fields\":{\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"EnumOptions\":{\"fields\":{\"allowAlias\":{\"type\":\"bool\",\"id\":2},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[5,5]]},\"EnumValueOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":1,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"ServiceOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":33,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"MethodOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":33,\"options\":{\"default\":false}},\"idempotencyLevel\":{\"type\":\"IdempotencyLevel\",\"id\":34,\"options\":{\"default\":\"IDEMPOTENCY_UNKNOWN\"}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"nested\":{\"IdempotencyLevel\":{\"values\":{\"IDEMPOTENCY_UNKNOWN\":0,\"NO_SIDE_EFFECTS\":1,\"IDEMPOTENT\":2}}}},\"UninterpretedOption\":{\"fields\":{\"name\":{\"rule\":\"repeated\",\"type\":\"NamePart\",\"id\":2},\"identifierValue\":{\"type\":\"string\",\"id\":3},\"positiveIntValue\":{\"type\":\"uint64\",\"id\":4},\"negativeIntValue\":{\"type\":\"int64\",\"id\":5},\"doubleValue\":{\"type\":\"double\",\"id\":6},\"stringValue\":{\"type\":\"bytes\",\"id\":7},\"aggregateValue\":{\"type\":\"string\",\"id\":8}},\"nested\":{\"NamePart\":{\"fields\":{\"namePart\":{\"rule\":\"required\",\"type\":\"string\",\"id\":1},\"isExtension\":{\"rule\":\"required\",\"type\":\"bool\",\"id\":2}}}}},\"SourceCodeInfo\":{\"fields\":{\"location\":{\"rule\":\"repeated\",\"type\":\"Location\",\"id\":1}},\"nested\":{\"Location\":{\"fields\":{\"path\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":1},\"span\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":2},\"leadingComments\":{\"type\":\"string\",\"id\":3},\"trailingComments\":{\"type\":\"string\",\"id\":4},\"leadingDetachedComments\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":6}}}}},\"GeneratedCodeInfo\":{\"fields\":{\"annotation\":{\"rule\":\"repeated\",\"type\":\"Annotation\",\"id\":1}},\"nested\":{\"Annotation\":{\"fields\":{\"path\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":1},\"sourceFile\":{\"type\":\"string\",\"id\":2},\"begin\":{\"type\":\"int32\",\"id\":3},\"end\":{\"type\":\"int32\",\"id\":4}}}}},\"Any\":{\"fields\":{\"type_url\":{\"type\":\"string\",\"id\":1},\"value\":{\"type\":\"bytes\",\"id\":2}}}}}}}}}"));}}),
"[project]/node_modules/google-gax/build/src/locations_client_config.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"interfaces\":{\"google.cloud.location.Locations\":{\"retry_codes\":{\"non_idempotent\":[],\"idempotent\":[\"DEADLINE_EXCEEDED\",\"UNAVAILABLE\"]},\"retry_params\":{\"default\":{\"initial_retry_delay_millis\":100,\"retry_delay_multiplier\":1.3,\"max_retry_delay_millis\":60000,\"initial_rpc_timeout_millis\":60000,\"rpc_timeout_multiplier\":1,\"max_rpc_timeout_millis\":60000,\"total_timeout_millis\":600000}},\"methods\":{\"ListLocations\":{\"retry_codes_name\":\"non_idempotent\",\"retry_params_name\":\"default\"},\"GetLocation\":{\"retry_codes_name\":\"non_idempotent\",\"retry_params_name\":\"default\"}}}}}"));}}),
"[project]/node_modules/google-gax/build/src/locationService.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LocationsClient = void 0;
/* global window */ const gax = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
const createApiCall_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/createApiCall.js [app-rsc] (ecmascript)");
const routingHeader = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/routingHeader.js [app-rsc] (ecmascript)");
const pageDescriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/paginationCalls/pageDescriptor.js [app-rsc] (ecmascript)");
const jsonProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/locations.json (json)");
/**
 * This file defines retry strategy and timeouts for all API methods in this library.
 */ const gapicConfig = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/locations_client_config.json (json)");
const version = __turbopack_context__.r("[project]/node_modules/google-gax/package.json (json)").version;
/**
 *  Google Cloud Locations Client.
 *  This is manually written for providing methods [listLocations, getLocations] to the generated client.
 */ class LocationsClient {
    /**
     * Construct an instance of LocationsClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP fallback mode.
     *     In fallback mode, a special browser-compatible transport implementation is used
     *     instead of gRPC transport. In browser context (if the `window` object is defined)
     *     the fallback mode is enabled automatically; set `options.fallback` to `false`
     *     if you need to override this behavior.
     */ constructor(gaxGrpc, // eslint-disable-next-line @typescript-eslint/no-explicit-any
    opts){
        var _a, _b;
        this._terminated = false;
        this.descriptors = {
            page: {},
            stream: {},
            longrunning: {},
            batching: {}
        };
        // Ensure that options include all the required fields.
        this.gaxGrpc = gaxGrpc;
        const staticMembers = this.constructor;
        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || staticMembers.servicePath;
        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));
        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;
        const clientConfig = (_a = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _a !== void 0 ? _a : {};
        const fallback = (_b = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _b !== void 0 ? _b : "undefined" !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';
        opts = Object.assign({
            servicePath,
            port,
            clientConfig,
            fallback
        }, opts);
        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
        if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
            opts['scopes'] = staticMembers.scopes;
        }
        // Save options to use in initialize() method.
        this._opts = opts;
        // Save the auth object to the client, for use by other methods.
        this.auth = gaxGrpc.auth;
        // Set the default scopes in auth client if needed.
        if (servicePath === staticMembers.servicePath) {
            this.auth.defaultScopes = staticMembers.scopes;
        }
        // Determine the client header string.
        const clientHeader = [
            `gax/${version}`,
            `gapic/${version}`
        ];
        if (typeof process !== 'undefined' && 'versions' in process) {
            clientHeader.push(`gl-node/${process.versions.node}`);
        } else {
            clientHeader.push(`gl-web/${version}`);
        }
        if (!opts.fallback) {
            clientHeader.push(`grpc/${gaxGrpc.grpcVersion}`);
        } else if (opts.fallback === 'rest') {
            clientHeader.push(`rest/${gaxGrpc.grpcVersion}`);
        }
        if (opts.libName && opts.libVersion) {
            clientHeader.push(`${opts.libName}/${opts.libVersion}`);
        }
        // Load the applicable protos.
        this._protos = gaxGrpc.loadProtoJSON(jsonProtos);
        // Some of the methods on this service return "paged" results,
        // (e.g. 50 results at a time, with tokens to get subsequent
        // pages). Denote the keys used for pagination and results.
        this.descriptors.page = {
            listLocations: new pageDescriptor_1.PageDescriptor('pageToken', 'nextPageToken', 'locations')
        };
        // Put together the default options sent with requests.
        this._defaults = gaxGrpc.constructSettings('google.cloud.location.Locations', gapicConfig, opts.clientConfig || {}, {
            'x-goog-api-client': clientHeader.join(' ')
        });
        // Set up a dictionary of "inner API calls"; the core implementation
        // of calling the API is handled in `google-gax`, with this code
        // merely providing the destination and request information.
        this.innerApiCalls = {};
        // Add a warn function to the client constructor so it can be easily tested.
        this.warn = warnings_1.warn;
    }
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */ initialize() {
        // If the client stub promise is already initialized, return immediately.
        if (this.locationsStub) {
            return this.locationsStub;
        }
        // Put together the "service stub" for
        // google.cloud.location.Locations.
        this.locationsStub = this.gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.location.Locations') : this._protos.google.cloud.location.Locations, this._opts, this._providedCustomServicePath);
        // Iterate over each of the methods that the service provides
        // and create an API call method for each.
        const locationsStubMethods = [
            'listLocations',
            'getLocation'
        ];
        for (const methodName of locationsStubMethods){
            const callPromise = this.locationsStub.then((stub)=>(...args)=>{
                    if (this._terminated) {
                        return Promise.reject('The client has already been closed.');
                    }
                    const func = stub[methodName];
                    return func.apply(stub, args);
                }, (err)=>()=>{
                    throw err;
                });
            const descriptor = this.descriptors.page[methodName] || undefined;
            const apiCall = (0, createApiCall_1.createApiCall)(callPromise, this._defaults[methodName], descriptor);
            this.innerApiCalls[methodName] = apiCall;
        }
        return this.locationsStub;
    }
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */ static get servicePath() {
        return 'cloud.googleapis.com';
    }
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */ static get apiEndpoint() {
        return 'cloud.googleapis.com';
    }
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */ static get port() {
        return 443;
    }
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */ static get scopes() {
        return [
            'https://www.googleapis.com/auth/cloud-platform'
        ];
    }
    getProjectId(callback) {
        if (callback) {
            this.auth.getProjectId(callback);
            return;
        }
        return this.auth.getProjectId();
    }
    /**
     * Gets information about a location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Resource name for the location.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing [Location]{@link google.cloud.location.Location}.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#regular-methods)
     *   for more details and examples.
     * @example
     * const [response] = await client.getLocation(request);
     */ getLocation(request, optionsOrCallback, callback) {
        request = request || {};
        let options;
        if (typeof optionsOrCallback === 'function' && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({
            name: request.name || ''
        });
        this.initialize();
        return this.innerApiCalls.getLocation(request, options, callback);
    }
    /**
     * Lists information about the supported locations for this service.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   The resource that owns the locations collection, if applicable.
     * @param {string} request.filter
     *   The standard list filter.
     * @param {number} request.pageSize
     *   The standard list page size.
     * @param {string} request.pageToken
     *   The standard list page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of [Location]{@link google.cloud.location.Location}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listLocationsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */ listLocations(request, optionsOrCallback, callback) {
        request = request || {};
        let options;
        if (typeof optionsOrCallback === 'function' && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({
            name: request.name || ''
        });
        this.initialize();
        return this.innerApiCalls.listLocations(request, options, callback);
    }
    /**
     * Equivalent to `listLocations`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   The resource that owns the locations collection, if applicable.
     * @param {string} request.filter
     *   The standard list filter.
     * @param {number} request.pageSize
     *   The standard list page size.
     * @param {string} request.pageToken
     *   The standard list page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [Location]{@link google.cloud.location.Location}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listLocationsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */ listLocationsAsync(request, options) {
        request = request || {};
        options = options || {};
        options.otherArgs = options.otherArgs || {};
        options.otherArgs.headers = options.otherArgs.headers || {};
        options.otherArgs.headers['x-goog-request-params'] = routingHeader.fromParams({
            name: request.name || ''
        });
        options = options || {};
        const callSettings = new gax.CallSettings(options);
        this.initialize();
        return this.descriptors.page.listLocations.asyncIterate(this.innerApiCalls['listLocations'], request, callSettings);
    }
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */ close() {
        this.initialize();
        if (!this._terminated) {
            return this.locationsStub.then((stub)=>{
                this._terminated = true;
                stub.close();
            });
        }
        return Promise.resolve();
    }
}
exports.LocationsClient = LocationsClient; //# sourceMappingURL=locationService.js.map
}}),
"[project]/node_modules/google-gax/build/src/fallback.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fallback = exports.GoogleError = exports.operation = exports.Operation = exports.warn = exports.protobufMinimal = exports.protobuf = exports.LocationProtos = exports.IamProtos = exports.operationsProtos = exports.GrpcClient = exports.defaultToObjectOptions = exports.makeUUID = exports.LocationsClient = exports.IamClient = exports.OperationsClient = exports.StreamType = exports.StreamDescriptor = exports.PageDescriptor = exports.LongrunningDescriptor = exports.BundleDescriptor = exports.version = exports.createDefaultBackoffSettings = exports.RetryOptions = exports.constructSettings = exports.CallSettings = exports.routingHeader = exports.PathTemplate = void 0;
exports.lro = lro;
exports.createApiCall = createApiCall;
const objectHash = __turbopack_context__.r("[project]/node_modules/object-hash/index.js [app-rsc] (ecmascript)");
const protobuf = __turbopack_context__.r("[project]/node_modules/protobufjs/index.js [app-rsc] (ecmascript)");
exports.protobuf = protobuf;
const gax = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const routingHeader = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/routingHeader.js [app-rsc] (ecmascript)");
exports.routingHeader = routingHeader;
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const google_auth_library_1 = __turbopack_context__.r("[project]/node_modules/google-auth-library/build/src/index.js [app-rsc] (ecmascript)");
const operationsClient_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/operationsClient.js [app-rsc] (ecmascript)");
const createApiCall_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/createApiCall.js [app-rsc] (ecmascript)");
const fallbackRest = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallbackRest.js [app-rsc] (ecmascript)");
const featureDetection_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/featureDetection.js [app-rsc] (ecmascript)");
const fallbackServiceStub_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallbackServiceStub.js [app-rsc] (ecmascript)");
const streaming_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streaming.js [app-rsc] (ecmascript)");
const util_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)");
const IamProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/iam_service.js [app-rsc] (ecmascript)");
exports.IamProtos = IamProtos;
const LocationProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/locations.js [app-rsc] (ecmascript)");
exports.LocationProtos = LocationProtos;
const operationsProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/operations.js [app-rsc] (ecmascript)");
exports.operationsProtos = operationsProtos;
var pathTemplate_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/pathTemplate.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "PathTemplate", {
    enumerable: true,
    get: function() {
        return pathTemplate_1.PathTemplate;
    }
});
var gax_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "CallSettings", {
    enumerable: true,
    get: function() {
        return gax_1.CallSettings;
    }
});
Object.defineProperty(exports, "constructSettings", {
    enumerable: true,
    get: function() {
        return gax_1.constructSettings;
    }
});
Object.defineProperty(exports, "RetryOptions", {
    enumerable: true,
    get: function() {
        return gax_1.RetryOptions;
    }
});
Object.defineProperty(exports, "createDefaultBackoffSettings", {
    enumerable: true,
    get: function() {
        return gax_1.createDefaultBackoffSettings;
    }
});
exports.version = __turbopack_context__.r("[project]/node_modules/google-gax/package.json (json)").version + '-fallback';
var descriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/descriptor.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "BundleDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.BundleDescriptor;
    }
});
Object.defineProperty(exports, "LongrunningDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.LongrunningDescriptor;
    }
});
Object.defineProperty(exports, "PageDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.PageDescriptor;
    }
});
Object.defineProperty(exports, "StreamDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.StreamDescriptor;
    }
});
var streaming_2 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streaming.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "StreamType", {
    enumerable: true,
    get: function() {
        return streaming_2.StreamType;
    }
});
var operationsClient_2 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/operationsClient.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "OperationsClient", {
    enumerable: true,
    get: function() {
        return operationsClient_2.OperationsClient;
    }
});
var iamService_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/iamService.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "IamClient", {
    enumerable: true,
    get: function() {
        return iamService_1.IamClient;
    }
});
var locationService_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/locationService.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "LocationsClient", {
    enumerable: true,
    get: function() {
        return locationService_1.LocationsClient;
    }
});
var util_2 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "makeUUID", {
    enumerable: true,
    get: function() {
        return util_2.makeUUID;
    }
});
exports.defaultToObjectOptions = {
    keepCase: false,
    longs: String,
    enums: String,
    defaults: true,
    oneofs: true
};
const CLIENT_VERSION_HEADER = 'x-goog-api-client';
class GrpcClient {
    /**
     * In rare cases users might need to deallocate all memory consumed by loaded protos.
     * This method will delete the proto cache content.
     */ static clearProtoCache() {
        GrpcClient.protoCache.clear();
    }
    /**
     * gRPC-fallback version of GrpcClient
     * Implements GrpcClient API for a browser using grpc-fallback protocol (sends serialized protobuf to HTTP/1 $rpc endpoint).
     *
     * @param {Object=} options.auth - An instance of OAuth2Client to use in browser, or an instance of GoogleAuth from google-auth-library
     *  to use in Node.js. Required for browser, optional for Node.js.
     * @constructor
     */ constructor(options = {}){
        var _a;
        if (!(0, featureDetection_1.isNodeJS)()) {
            if (!options.auth) {
                throw new Error(JSON.stringify(options) + 'You need to pass auth instance to use gRPC-fallback client in browser or other non-Node.js environments. Use OAuth2Client from google-auth-library.');
            }
            this.auth = options.auth;
        } else {
            this.auth = options.auth || new google_auth_library_1.GoogleAuth(options);
        }
        this.fallback = options.fallback ? true : false;
        this.grpcVersion = __turbopack_context__.r("[project]/node_modules/google-gax/package.json (json)").version;
        this.httpRules = options.httpRules;
        this.numericEnums = (_a = options.numericEnums) !== null && _a !== void 0 ? _a : false;
    }
    /**
     * gRPC-fallback version of loadProto
     * Loads the protobuf root object from a JSON object created from a proto file
     * @param {Object} jsonObject - A JSON version of a protofile created usin protobuf.js
     * @returns {Object} Root namespace of proto JSON
     */ loadProto(jsonObject) {
        const rootObject = protobuf.Root.fromJSON(jsonObject);
        return rootObject;
    }
    loadProtoJSON(json, ignoreCache = false) {
        const hash = objectHash(JSON.stringify(json)).toString();
        const cached = GrpcClient.protoCache.get(hash);
        if (cached && !ignoreCache) {
            return cached;
        }
        const root = protobuf.Root.fromJSON(json);
        GrpcClient.protoCache.set(hash, root);
        return root;
    }
    static getServiceMethods(service) {
        const methods = {};
        for (const [methodName, methodObject] of Object.entries(service.methods)){
            const methodNameLowerCamelCase = (0, util_1.toLowerCamelCase)(methodName);
            methods[methodNameLowerCamelCase] = methodObject;
        }
        return methods;
    }
    /**
     * gRPC-fallback version of constructSettings
     * A wrapper of {@link constructSettings} function under the gRPC context.
     *
     * Most of parameters are common among constructSettings, please take a look.
     * @param {string} serviceName - The fullly-qualified name of the service.
     * @param {Object} clientConfig - A dictionary of the client config.
     * @param {Object} configOverrides - A dictionary of overriding configs.
     * @param {Object} headers - A dictionary of additional HTTP header name to
     *   its value.
     * @return {Object} A mapping of method names to CallSettings.
     */ constructSettings(serviceName, clientConfig, configOverrides, headers) {
        function buildMetadata(abTests, moreHeaders) {
            const metadata = {};
            if (!headers) {
                headers = {};
            }
            // Since gRPC expects each header to be an array,
            // we are doing the same for fallback here.
            for(const key in headers){
                metadata[key] = Array.isArray(headers[key]) ? headers[key] : [
                    headers[key]
                ];
            }
            // gRPC-fallback request must have 'grpc-web/' in 'x-goog-api-client'
            const clientVersions = [];
            if (metadata[CLIENT_VERSION_HEADER] && metadata[CLIENT_VERSION_HEADER][0]) {
                clientVersions.push(...metadata[CLIENT_VERSION_HEADER][0].split(' '));
            }
            clientVersions.push(`grpc-web/${exports.version}`);
            metadata[CLIENT_VERSION_HEADER] = [
                clientVersions.join(' ')
            ];
            if (!moreHeaders) {
                return metadata;
            }
            for(const key in moreHeaders){
                if (key.toLowerCase() !== CLIENT_VERSION_HEADER) {
                    const value = moreHeaders[key];
                    if (Array.isArray(value)) {
                        if (metadata[key] === undefined) {
                            metadata[key] = value;
                        } else {
                            if (Array.isArray(metadata[key])) {
                                metadata[key].push(...value);
                            } else {
                                throw new Error(`Can not add value ${value} to the call metadata.`);
                            }
                        }
                    } else {
                        metadata[key] = [
                            value
                        ];
                    }
                }
            }
            return metadata;
        }
        return gax.constructSettings(serviceName, clientConfig, configOverrides, status_1.Status, {
            metadataBuilder: buildMetadata
        });
    }
    /**
     * gRPC-fallback version of createStub
     * Creates a gRPC-fallback stub with authentication headers built from supplied OAuth2Client instance
     *
     * @param {function} CreateStub - The constructor function of the stub.
     * @param {Object} service - A protobufjs Service object (as returned by lookupService)
     * @param {Object} opts - Connection options, as described below.
     * @param {string} opts.servicePath - The hostname of the API endpoint service.
     * @param {number} opts.port - The port of the service.
     * @return {Promise} A promise which resolves to a gRPC-fallback service stub, which is a protobuf.js service stub instance modified to match the gRPC stub API
     */ async createStub(service, opts, // For consistency with createStub in grpc.ts, customServicePath is defined:
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    customServicePath) {
        if (!this.authClient) {
            if (this.auth && 'getClient' in this.auth) {
                this.authClient = await this.auth.getClient();
            } else if (this.auth && 'getRequestHeaders' in this.auth) {
                this.authClient = this.auth;
            }
        }
        if (!this.authClient) {
            throw new Error('No authentication was provided');
        }
        if (!opts.universeDomain) {
            opts.universeDomain = 'googleapis.com';
        }
        if (opts.universeDomain) {
            const universeFromAuth = this.authClient.universeDomain;
            if (universeFromAuth && opts.universeDomain !== universeFromAuth) {
                throw new Error(`The configured universe domain (${opts.universeDomain}) does not match the universe domain found in the credentials (${universeFromAuth}). ` + "If you haven't configured the universe domain explicitly, googleapis.com is the default.");
            }
        }
        service.resolveAll();
        const methods = GrpcClient.getServiceMethods(service);
        const protocol = opts.protocol || 'https';
        let servicePath = opts.servicePath;
        if (!servicePath && service.options && service.options['(google.api.default_host)']) {
            servicePath = service.options['(google.api.default_host)'];
        }
        if (!servicePath) {
            throw new Error(`Cannot determine service API path for service ${service.name}.`);
        }
        let servicePort;
        const match = servicePath.match(/^(.*):(\d+)$/);
        if (match) {
            servicePath = match[1];
            servicePort = parseInt(match[2]);
        }
        if (opts.port) {
            servicePort = opts.port;
        } else if (!servicePort) {
            servicePort = 443;
        }
        const encoder = fallbackRest.encodeRequest;
        const decoder = fallbackRest.decodeResponse;
        const serviceStub = (0, fallbackServiceStub_1.generateServiceStub)(methods, protocol, servicePath, servicePort, this.authClient, encoder, decoder, this.numericEnums);
        return serviceStub;
    }
    /**
     * Creates a 'bytelength' function for a given proto message class.
     *
     * See {@link BundleDescriptor} about the meaning of the return value.
     *
     * @param {function} message - a constructor function that is generated by
     *   protobuf.js. Assumes 'encoder' field in the message.
     * @return {function(Object):number} - a function to compute the byte length
     *   for an object.
     */ static createByteLengthFunction(message) {
        return gax.createByteLengthFunction(message);
    }
}
exports.GrpcClient = GrpcClient;
GrpcClient.protoCache = new Map();
/**
 * gRPC-fallback version of lro
 *
 * @param {Object=} options.auth - An instance of google-auth-library.
 * @return {Object} A OperationsClientBuilder that will return a OperationsClient
 */ function lro(options) {
    options = Object.assign({
        scopes: []
    }, options);
    if (options.protoJson) {
        options = Object.assign(options, {
            fallback: true
        });
    }
    const gaxGrpc = new GrpcClient(options);
    return new operationsClient_1.OperationsClientBuilder(gaxGrpc, options.protoJson);
}
/**
 * gRPC-fallback version of createApiCall
 *
 * Converts an rpc call into an API call governed by the settings.
 *
 * In typical usage, `func` will be a promise to a callable used to make an rpc
 * request. This will mostly likely be a bound method from a request stub used
 * to make an rpc call. It is not a direct function but a Promise instance,
 * because of its asynchronism (typically, obtaining the auth information).
 *
 * The result is a function which manages the API call with the given settings
 * and the options on the invocation.
 *
 * Throws exception on unsupported streaming calls
 *
 * @param {Promise<GRPCCall>|GRPCCall} func - is either a promise to be used to make
 *   a bare RPC call, or just a bare RPC call.
 * @param {CallSettings} settings - provides the settings for this call
 * @param {Descriptor} descriptor - optionally specify the descriptor for
 *   the method call.
 * @return {GaxCall} func - a bound method on a request stub used
 *   to make an rpc call.
 */ function createApiCall(func, settings, descriptor, // eslint-disable-next-line @typescript-eslint/no-unused-vars
_fallback // unused; for compatibility only
) {
    if (descriptor && 'streaming' in descriptor && descriptor.type !== streaming_1.StreamType.SERVER_STREAMING) {
        return ()=>{
            throw new Error('The REST transport currently does not support client-streaming or bidi-stream calls.');
        };
    }
    if (descriptor && 'streaming' in descriptor && !(0, featureDetection_1.isNodeJS)()) {
        return ()=>{
            throw new Error('Server streaming over the REST transport is only supported in Node.js.');
        };
    }
    return (0, createApiCall_1.createApiCall)(func, settings, descriptor);
}
exports.protobufMinimal = __turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)");
var warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "warn", {
    enumerable: true,
    get: function() {
        return warnings_1.warn;
    }
});
var longrunning_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/longRunningCalls/longrunning.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "Operation", {
    enumerable: true,
    get: function() {
        return longrunning_1.Operation;
    }
});
Object.defineProperty(exports, "operation", {
    enumerable: true,
    get: function() {
        return longrunning_1.operation;
    }
});
var googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "GoogleError", {
    enumerable: true,
    get: function() {
        return googleError_1.GoogleError;
    }
});
// Different environments or bundlers may or may not respect "browser" field
// in package.json (e.g. Electron does not respect it, but if you run the code
// through webpack first, it will follow the "browser" field).
// To make it safer and more compatible, let's make sure that if you do
// const gax = require("google-gax");
// you can always ask for gax.fallback, regardless of "browser" field being
// understood or not.
const fallback = module.exports;
exports.fallback = fallback; //# sourceMappingURL=fallback.js.map
}}),
"[project]/node_modules/google-gax/build/protos/status.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"nested\":{\"google\":{\"nested\":{\"protobuf\":{\"nested\":{\"Any\":{\"fields\":{\"type_url\":{\"type\":\"string\",\"id\":1},\"value\":{\"type\":\"bytes\",\"id\":2}}},\"Duration\":{\"fields\":{\"seconds\":{\"type\":\"int64\",\"id\":1},\"nanos\":{\"type\":\"int32\",\"id\":2}}}}},\"rpc\":{\"options\":{\"cc_enable_arenas\":true,\"go_package\":\"google.golang.org/genproto/googleapis/rpc/errdetails;errdetails\",\"java_multiple_files\":true,\"java_outer_classname\":\"ErrorDetailsProto\",\"java_package\":\"com.google.rpc\",\"objc_class_prefix\":\"RPC\"},\"nested\":{\"Status\":{\"fields\":{\"code\":{\"type\":\"int32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2},\"details\":{\"rule\":\"repeated\",\"type\":\"google.protobuf.Any\",\"id\":3}}},\"RetryInfo\":{\"fields\":{\"retryDelay\":{\"type\":\"google.protobuf.Duration\",\"id\":1}}},\"DebugInfo\":{\"fields\":{\"stackEntries\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":1},\"detail\":{\"type\":\"string\",\"id\":2}}},\"QuotaFailure\":{\"fields\":{\"violations\":{\"rule\":\"repeated\",\"type\":\"Violation\",\"id\":1}},\"nested\":{\"Violation\":{\"fields\":{\"subject\":{\"type\":\"string\",\"id\":1},\"description\":{\"type\":\"string\",\"id\":2}}}}},\"ErrorInfo\":{\"fields\":{\"reason\":{\"type\":\"string\",\"id\":1},\"domain\":{\"type\":\"string\",\"id\":2},\"metadata\":{\"keyType\":\"string\",\"type\":\"string\",\"id\":3}}},\"PreconditionFailure\":{\"fields\":{\"violations\":{\"rule\":\"repeated\",\"type\":\"Violation\",\"id\":1}},\"nested\":{\"Violation\":{\"fields\":{\"type\":{\"type\":\"string\",\"id\":1},\"subject\":{\"type\":\"string\",\"id\":2},\"description\":{\"type\":\"string\",\"id\":3}}}}},\"BadRequest\":{\"fields\":{\"fieldViolations\":{\"rule\":\"repeated\",\"type\":\"FieldViolation\",\"id\":1}},\"nested\":{\"FieldViolation\":{\"fields\":{\"field\":{\"type\":\"string\",\"id\":1},\"description\":{\"type\":\"string\",\"id\":2}}}}},\"RequestInfo\":{\"fields\":{\"requestId\":{\"type\":\"string\",\"id\":1},\"servingData\":{\"type\":\"string\",\"id\":2}}},\"ResourceInfo\":{\"fields\":{\"resourceType\":{\"type\":\"string\",\"id\":1},\"resourceName\":{\"type\":\"string\",\"id\":2},\"owner\":{\"type\":\"string\",\"id\":3},\"description\":{\"type\":\"string\",\"id\":4}}},\"Help\":{\"fields\":{\"links\":{\"rule\":\"repeated\",\"type\":\"Link\",\"id\":1}},\"nested\":{\"Link\":{\"fields\":{\"description\":{\"type\":\"string\",\"id\":1},\"url\":{\"type\":\"string\",\"id\":2}}}}},\"LocalizedMessage\":{\"fields\":{\"locale\":{\"type\":\"string\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}}}}}}}}"));}}),
"[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GoogleErrorDecoder = exports.GoogleError = void 0;
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const protobuf = __turbopack_context__.r("[project]/node_modules/protobufjs/index.js [app-rsc] (ecmascript)");
const serializer = __turbopack_context__.r("[project]/node_modules/proto3-json-serializer/build/src/index.js [app-rsc] (ecmascript)");
const fallback_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallback.js [app-rsc] (ecmascript)");
class GoogleError extends Error {
    // Parse details field in google.rpc.status wire over gRPC medatadata.
    // Promote google.rpc.ErrorInfo if exist.
    static parseGRPCStatusDetails(err) {
        const decoder = new GoogleErrorDecoder();
        try {
            if (err.metadata && err.metadata.get('grpc-status-details-bin')) {
                const statusDetailsObj = decoder.decodeGRPCStatusDetails(err.metadata.get('grpc-status-details-bin'));
                if (statusDetailsObj && statusDetailsObj.details && statusDetailsObj.details.length > 0) {
                    err.statusDetails = statusDetailsObj.details;
                }
                if (statusDetailsObj && statusDetailsObj.errorInfo) {
                    err.reason = statusDetailsObj.errorInfo.reason;
                    err.domain = statusDetailsObj.errorInfo.domain;
                    err.errorInfoMetadata = statusDetailsObj.errorInfo.metadata;
                }
            }
        } catch (decodeErr) {
        // ignoring the error
        }
        return err;
    }
    // Parse http JSON error and promote google.rpc.ErrorInfo if exist.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static parseHttpError(json) {
        if (Array.isArray(json)) {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            json = json.find((obj)=>{
                return 'error' in obj;
            });
        }
        // fallback logic.
        // related issue: https://github.com/googleapis/gax-nodejs/issues/1303
        // google error mapping: https://cloud.google.com/apis/design/errors
        // if input json doesn't have 'error' fields, wrap the whole object with 'error' field
        if (!json['error']) {
            json['error'] = {};
            Object.keys(json).filter((key)=>key !== 'error').forEach((key)=>{
                json['error'][key] = json[key];
                delete json[key];
            });
        }
        const decoder = new GoogleErrorDecoder();
        const proto3Error = decoder.decodeHTTPError(json['error']);
        const error = Object.assign(new GoogleError(json['error']['message']), proto3Error);
        // Map Http Status Code to gRPC Status Code
        if (json['error']['code']) {
            error.code = (0, status_1.rpcCodeFromHttpStatusCode)(json['error']['code']);
        } else {
            // If error code is absent, proto3 message default value is 0. We should
            // keep error code as undefined.
            delete error.code;
        }
        // Keep consistency with gRPC statusDetails fields. gRPC details has been occupied before.
        // Rename "details" to "statusDetails".
        if (error.details) {
            try {
                const statusDetailsObj = decoder.decodeHttpStatusDetails(error.details);
                if (statusDetailsObj && statusDetailsObj.details && statusDetailsObj.details.length > 0) {
                    error.statusDetails = statusDetailsObj.details;
                }
                if (statusDetailsObj && statusDetailsObj.errorInfo) {
                    error.reason = statusDetailsObj.errorInfo.reason;
                    error.domain = statusDetailsObj.errorInfo.domain;
                    // error.metadata has been occupied for gRPC metadata, so we use
                    // errorInfoMetadata to represent ErrorInfo' metadata field. Keep
                    // consistency with gRPC ErrorInfo metadata field name.
                    error.errorInfoMetadata = statusDetailsObj.errorInfo.metadata;
                }
            } catch (decodeErr) {
            // ignoring the error
            }
        }
        return error;
    }
}
exports.GoogleError = GoogleError;
class GoogleErrorDecoder {
    constructor(){
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        const errorProtoJson = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/status.json (json)");
        this.root = protobuf.Root.fromJSON(errorProtoJson);
        this.anyType = this.root.lookupType('google.protobuf.Any');
        this.statusType = this.root.lookupType('google.rpc.Status');
    }
    decodeProtobufAny(anyValue) {
        const match = anyValue.type_url.match(/^type.googleapis.com\/(.*)/);
        if (!match) {
            throw new Error(`Unknown type encoded in google.protobuf.any: ${anyValue.type_url}`);
        }
        const typeName = match[1];
        const type = this.root.lookupType(typeName);
        if (!type) {
            throw new Error(`Cannot lookup type ${typeName}`);
        }
        return type.decode(anyValue.value);
    }
    // Decodes gRPC-fallback error which is an instance of google.rpc.Status.
    decodeRpcStatus(buffer) {
        const uint8array = new Uint8Array(buffer);
        const status = this.statusType.decode(uint8array);
        // google.rpc.Status contains an array of google.protobuf.Any
        // which need a special treatment
        const details = [];
        let errorInfo;
        for (const detail of status.details){
            try {
                const decodedDetail = this.decodeProtobufAny(detail);
                details.push(decodedDetail);
                if (detail.type_url === 'type.googleapis.com/google.rpc.ErrorInfo') {
                    errorInfo = decodedDetail;
                }
            } catch (err) {
            // cannot decode detail, likely because of the unknown type - just skip it
            }
        }
        const result = {
            code: status.code,
            message: status.message,
            statusDetails: details,
            reason: errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.reason,
            domain: errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.domain,
            errorInfoMetadata: errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.metadata
        };
        return result;
    }
    // Construct an Error from a StatusObject.
    // Adapted from https://github.com/grpc/grpc-node/blob/main/packages/grpc-js/src/call.ts#L79
    callErrorFromStatus(status) {
        status.message = `${status.code} ${status_1.Status[status.code]}: ${status.message}`;
        return Object.assign(new GoogleError(status.message), status);
    }
    // Decodes gRPC-fallback error which is an instance of google.rpc.Status,
    // and puts it into the object similar to gRPC ServiceError object.
    decodeErrorFromBuffer(buffer) {
        return this.callErrorFromStatus(this.decodeRpcStatus(buffer));
    }
    // Decodes gRPC metadata error details which is an instance of google.rpc.Status.
    decodeGRPCStatusDetails(bufferArr) {
        const details = [];
        let errorInfo;
        bufferArr.forEach((buffer)=>{
            const uint8array = new Uint8Array(buffer);
            const rpcStatus = this.statusType.decode(uint8array);
            for (const detail of rpcStatus.details){
                try {
                    const decodedDetail = this.decodeProtobufAny(detail);
                    details.push(decodedDetail);
                    if (detail.type_url === 'type.googleapis.com/google.rpc.ErrorInfo') {
                        errorInfo = decodedDetail;
                    }
                } catch (err) {
                // cannot decode detail, likely because of the unknown type - just skip it
                }
            }
        });
        const result = {
            details,
            errorInfo
        };
        return result;
    }
    // Decodes http error which is an instance of google.rpc.Status.
    decodeHTTPError(json) {
        const errorMessage = serializer.fromProto3JSON(this.statusType, json);
        if (!errorMessage) {
            throw new Error(`Received error message ${json}, but failed to serialize as proto3 message`);
        }
        return this.statusType.toObject(errorMessage, fallback_1.defaultToObjectOptions);
    }
    // Decodes http error details which is an instance of Array<google.protobuf.Any>.
    decodeHttpStatusDetails(rawDetails) {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const details = [];
        let errorInfo;
        for (const detail of rawDetails){
            try {
                const decodedDetail = this.decodeProtobufAny(detail);
                details.push(decodedDetail);
                if (detail.type_url === 'type.googleapis.com/google.rpc.ErrorInfo') {
                    errorInfo = decodedDetail;
                }
            } catch (err) {
            // cannot decode detail, likely because of the unknown type - just skip it
            }
        }
        return {
            details,
            errorInfo
        };
    }
}
exports.GoogleErrorDecoder = GoogleErrorDecoder; //# sourceMappingURL=googleError.js.map
}}),
"[project]/node_modules/google-gax/build/src/call.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OngoingCallPromise = exports.OngoingCall = void 0;
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
class OngoingCall {
    /**
     * OngoingCall manages callback, API calls, and cancellation
     * of the API calls.
     * @param {APICallback=} callback
     *   The callback to be called asynchronously when the API call
     *   finishes.
     * @constructor
     * @property {APICallback} callback
     *   The callback function to be called.
     * @private
     */ constructor(callback){
        this.callback = callback;
        this.completed = false;
    }
    /**
     * Cancels the ongoing promise.
     */ cancel() {
        if (this.completed) {
            return;
        }
        this.completed = true;
        if (this.cancelFunc) {
            this.cancelFunc();
        } else {
            const error = new googleError_1.GoogleError('cancelled');
            error.code = status_1.Status.CANCELLED;
            this.callback(error);
        }
    }
    /**
     * Call calls the specified function. Result will be used to fulfill
     * the promise.
     *
     * @param {SimpleCallbackFunction} func
     *   A function for an API call.
     * @param {Object} argument
     *   A request object.
     */ call(func, argument) {
        if (this.completed) {
            return;
        }
        const canceller = func(argument, (err, response, next, rawResponse)=>{
            this.completed = true;
            setImmediate(this.callback, err, response, next, rawResponse);
        });
        if (canceller instanceof Promise) {
            canceller.catch((err)=>{
                setImmediate(this.callback, new googleError_1.GoogleError(err), null, null, null);
            });
        }
        this.cancelFunc = ()=>canceller.cancel();
    }
}
exports.OngoingCall = OngoingCall;
class OngoingCallPromise extends OngoingCall {
    /**
     * GaxPromise is GRPCCallbackWrapper, but it holds a promise when
     * the API call finishes.
     * @constructor
     * @private
     */ constructor(){
        let resolveCallback;
        let rejectCallback;
        const callback = (err, response, next, rawResponse)=>{
            if (err) {
                // If gRPC metadata exist, parsed google.rpc.status details.
                if (err.metadata) {
                    rejectCallback(googleError_1.GoogleError.parseGRPCStatusDetails(err));
                } else {
                    rejectCallback(err);
                }
            } else if (response !== undefined) {
                resolveCallback([
                    response,
                    next || null,
                    rawResponse || null
                ]);
            } else {
                throw new googleError_1.GoogleError('Neither error nor response are defined');
            }
        };
        const promise = new Promise((resolve, reject)=>{
            resolveCallback = resolve;
            rejectCallback = reject;
        });
        super(callback);
        this.promise = promise;
        this.promise.cancel = ()=>{
            this.cancel();
        };
    }
}
exports.OngoingCallPromise = OngoingCallPromise; //# sourceMappingURL=call.js.map
}}),
"[project]/node_modules/google-gax/build/src/normalCalls/normalApiCaller.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NormalApiCaller = void 0;
const call_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/call.js [app-rsc] (ecmascript)");
/**
 * Creates an API caller for regular unary methods.
 */ class NormalApiCaller {
    init(callback) {
        if (callback) {
            return new call_1.OngoingCall(callback);
        }
        return new call_1.OngoingCallPromise();
    }
    wrap(func) {
        return func;
    }
    call(apiCall, argument, settings, canceller) {
        canceller.call(apiCall, argument);
    }
    fail(canceller, err) {
        canceller.callback(err);
    }
    result(canceller) {
        return canceller.promise;
    }
}
exports.NormalApiCaller = NormalApiCaller; //# sourceMappingURL=normalApiCaller.js.map
}}),
"[project]/node_modules/google-gax/build/src/apiCaller.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createAPICaller = createAPICaller;
const normalApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/normalCalls/normalApiCaller.js [app-rsc] (ecmascript)");
function createAPICaller(settings, descriptor) {
    if (!descriptor) {
        return new normalApiCaller_1.NormalApiCaller();
    }
    return descriptor.getApiCaller(settings);
} //# sourceMappingURL=apiCaller.js.map
}}),
"[project]/node_modules/google-gax/build/src/normalCalls/timeout.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.addTimeoutArg = addTimeoutArg;
/**
 * Updates func so that it gets called with the timeout as its final arg.
 *
 * This converts a function, func, into another function with updated deadline.
 *
 * @private
 *
 * @param {GRPCCall} func - a function to be updated.
 * @param {number} timeout - to be added to the original function as it final
 *   positional arg.
 * @param {Object} otherArgs - the additional arguments to be passed to func.
 * @param {Object=} abTests - the A/B testing key/value pairs.
 * @return {function(Object, APICallback)}
 *  the function with other arguments and the timeout.
 */ function addTimeoutArg(func, timeout, otherArgs, abTests) {
    // TODO: this assumes the other arguments consist of metadata and options,
    // which is specific to gRPC calls. Remove the hidden dependency on gRPC.
    return (argument, callback)=>{
        const now = new Date();
        const options = otherArgs.options || {};
        options.deadline = new Date(now.getTime() + timeout);
        const metadata = otherArgs.metadataBuilder ? otherArgs.metadataBuilder(abTests, otherArgs.headers || {}) : null;
        return func(argument, metadata, options, callback);
    };
} //# sourceMappingURL=timeout.js.map
}}),
"[project]/node_modules/google-gax/build/src/normalCalls/retries.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.retryable = retryable;
const status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
const googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
const timeout_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/normalCalls/timeout.js [app-rsc] (ecmascript)");
/**
 * Creates a function equivalent to func, but that retries on certain
 * exceptions.
 *
 * @private
 *
 * @param {GRPCCall} func - A function.
 * @param {RetryOptions} retry - Configures the exceptions upon which the
 *   function eshould retry, and the parameters to the exponential backoff retry
 *   algorithm.
 * @param {GRPCCallOtherArgs} otherArgs - the additional arguments to be passed to func.
 * @return {SimpleCallbackFunction} A function that will retry.
 */ function retryable(func, retry, otherArgs, apiName) {
    const delayMult = retry.backoffSettings.retryDelayMultiplier;
    const maxDelay = retry.backoffSettings.maxRetryDelayMillis;
    const timeoutMult = retry.backoffSettings.rpcTimeoutMultiplier;
    const maxTimeout = retry.backoffSettings.maxRpcTimeoutMillis;
    let delay = retry.backoffSettings.initialRetryDelayMillis;
    let timeout = retry.backoffSettings.initialRpcTimeoutMillis;
    /**
     * Equivalent to ``func``, but retries upon transient failure.
     *
     * Retrying is done through an exponential backoff algorithm configured
     * by the options in ``retry``.
     * @param {RequestType} argument The request object.
     * @param {APICallback} callback The callback.
     * @return {GRPCCall}
     */ return (argument, callback)=>{
        let canceller;
        let timeoutId;
        let now = new Date();
        let deadline;
        if (retry.backoffSettings.totalTimeoutMillis) {
            deadline = now.getTime() + retry.backoffSettings.totalTimeoutMillis;
        }
        let retries = 0;
        const maxRetries = retry.backoffSettings.maxRetries;
        // TODO: define A/B testing values for retry behaviors.
        /** Repeat the API call as long as necessary. */ function repeat(err) {
            timeoutId = null;
            if (deadline && now.getTime() >= deadline) {
                const error = new googleError_1.GoogleError(`Total timeout of API ${apiName} exceeded ${retry.backoffSettings.totalTimeoutMillis} milliseconds ${err ? `retrying error ${err} ` : ''} before any response was received.`);
                error.code = status_1.Status.DEADLINE_EXCEEDED;
                callback(error);
                return;
            }
            if (retries && retries >= maxRetries) {
                const error = new googleError_1.GoogleError('Exceeded maximum number of retries ' + (err ? `retrying error ${err} ` : '') + 'before any response was received');
                error.code = status_1.Status.DEADLINE_EXCEEDED;
                callback(error);
                return;
            }
            retries++;
            let lastError = err;
            const toCall = (0, timeout_1.addTimeoutArg)(func, timeout, otherArgs);
            canceller = toCall(argument, (err, response, next, rawResponse)=>{
                // Save only the error before deadline exceeded
                if (err && err.code !== 4) {
                    lastError = err;
                }
                if (!err) {
                    callback(null, response, next, rawResponse);
                    return;
                }
                canceller = null;
                if (retry.retryCodes.length > 0 && retry.retryCodes.indexOf(err.code) < 0) {
                    err.note = 'Exception occurred in retry method that was ' + 'not classified as transient';
                    callback(err);
                } else {
                    const toSleep = Math.random() * delay;
                    timeoutId = setTimeout(()=>{
                        now = new Date();
                        delay = Math.min(delay * delayMult, maxDelay);
                        const timeoutCal = timeout && timeoutMult ? timeout * timeoutMult : 0;
                        const rpcTimeout = maxTimeout ? maxTimeout : 0;
                        const newDeadline = deadline ? deadline - now.getTime() : 0;
                        timeout = Math.min(timeoutCal, rpcTimeout, newDeadline);
                        repeat(lastError);
                    }, toSleep);
                }
            });
            if (canceller instanceof Promise) {
                canceller.catch((err)=>{
                    callback(new googleError_1.GoogleError(err));
                });
            }
        }
        if (maxRetries && deadline) {
            const error = new googleError_1.GoogleError('Cannot set both totalTimeoutMillis and maxRetries ' + 'in backoffSettings.');
            error.code = status_1.Status.INVALID_ARGUMENT;
            callback(error);
        } else {
            repeat();
        }
        return {
            cancel () {
                if (timeoutId) {
                    clearTimeout(timeoutId);
                }
                if (canceller) {
                    canceller.cancel();
                } else {
                    const error = new googleError_1.GoogleError('cancelled');
                    error.code = status_1.Status.CANCELLED;
                    callback(error);
                }
            }
        };
    };
} //# sourceMappingURL=retries.js.map
}}),
"[project]/node_modules/google-gax/build/src/createApiCall.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createApiCall = createApiCall;
/**
 * Provides function wrappers that implement page streaming and retrying.
 */ const apiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/apiCaller.js [app-rsc] (ecmascript)");
const gax_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const retries_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/normalCalls/retries.js [app-rsc] (ecmascript)");
const timeout_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/normalCalls/timeout.js [app-rsc] (ecmascript)");
const streamingApiCaller_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streamingApiCaller.js [app-rsc] (ecmascript)");
const warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
/**
 * Converts an rpc call into an API call governed by the settings.
 *
 * In typical usage, `func` will be a promise to a callable used to make an rpc
 * request. This will mostly likely be a bound method from a request stub used
 * to make an rpc call. It is not a direct function but a Promise instance,
 * because of its asynchronism (typically, obtaining the auth information).
 *
 * The result is a function which manages the API call with the given settings
 * and the options on the invocation.
 *
 * @param {Promise<GRPCCall>|GRPCCall} func - is either a promise to be used to make
 *   a bare RPC call, or just a bare RPC call.
 * @param {CallSettings} settings - provides the settings for this call
 * @param {Descriptor} descriptor - optionally specify the descriptor for
 *   the method call.
 * @return {GaxCall} func - a bound method on a request stub used
 *   to make an rpc call.
 */ function createApiCall(func, settings, descriptor, // eslint-disable-next-line @typescript-eslint/no-unused-vars
_fallback // unused here, used in fallback.ts implementation
) {
    // we want to be able to accept both promise resolving to a function and a
    // function. Currently client librares are only calling this method with a
    // promise, but it will change.
    const funcPromise = typeof func === 'function' ? Promise.resolve(func) : func;
    // the following apiCaller will be used for all calls of this function...
    const apiCaller = (0, apiCaller_1.createAPICaller)(settings, descriptor);
    return (request, callOptions, callback)=>{
        var _a, _b;
        let currentApiCaller = apiCaller;
        let thisSettings;
        if (currentApiCaller instanceof streamingApiCaller_1.StreamingApiCaller) {
            const gaxStreamingRetries = (_b = (_a = currentApiCaller.descriptor) === null || _a === void 0 ? void 0 : _a.gaxStreamingRetries) !== null && _b !== void 0 ? _b : false;
            // If Gax streaming retries are enabled, check settings passed at call time and convert parameters if needed
            const convertedRetryOptions = (0, gax_1.convertRetryOptions)(callOptions, gaxStreamingRetries);
            thisSettings = settings.merge(convertedRetryOptions);
        } else {
            thisSettings = settings.merge(callOptions);
        }
        // special case: if bundling is disabled for this one call,
        // use default API caller instead
        if (settings.isBundling && !thisSettings.isBundling) {
            currentApiCaller = (0, apiCaller_1.createAPICaller)(settings, undefined);
        }
        const ongoingCall = currentApiCaller.init(callback);
        funcPromise.then((func)=>{
            var _a, _b;
            var _c;
            // Initially, the function is just what gRPC server stub contains.
            func = currentApiCaller.wrap(func);
            const streaming = (_a = currentApiCaller.descriptor) === null || _a === void 0 ? void 0 : _a.streaming;
            const retry = thisSettings.retry;
            if (streaming && retry) {
                if (retry.retryCodes.length > 0 && retry.shouldRetryFn) {
                    (0, warnings_1.warn)('either_retrycodes_or_shouldretryfn', 'Only one of retryCodes or shouldRetryFn may be defined. Ignoring retryCodes.');
                    retry.retryCodes = [];
                }
                if (!currentApiCaller.descriptor.gaxStreamingRetries && retry.getResumptionRequestFn) {
                    throw new Error('getResumptionRequestFn can only be used when gaxStreamingRetries is set to true.');
                }
            }
            if (!streaming && retry) {
                if (retry.shouldRetryFn) {
                    throw new Error('Using a function to determine retry eligibility is only supported with server streaming calls');
                }
                if (retry.getResumptionRequestFn) {
                    throw new Error('Resumption strategy can only be used with server streaming retries');
                }
                if (retry.retryCodes && retry.retryCodes.length > 0) {
                    (_b = (_c = retry.backoffSettings).initialRpcTimeoutMillis) !== null && _b !== void 0 ? _b : _c.initialRpcTimeoutMillis = thisSettings.timeout;
                    return (0, retries_1.retryable)(func, thisSettings.retry, thisSettings.otherArgs, thisSettings.apiName);
                }
            }
            return (0, timeout_1.addTimeoutArg)(func, thisSettings.timeout, thisSettings.otherArgs);
        }).then((apiCall)=>{
            // After adding retries / timeouts, the call function becomes simpler:
            // it only accepts request and callback.
            currentApiCaller.call(apiCall, request, thisSettings, ongoingCall);
        }).catch((err)=>{
            currentApiCaller.fail(ongoingCall, err);
        });
        // Calls normally return a "cancellable promise" that can be used to `await` for the actual result,
        // or to cancel the ongoing call.
        return currentApiCaller.result(ongoingCall);
    };
} //# sourceMappingURL=createApiCall.js.map
}}),
"[project]/node_modules/google-gax/build/src/operations_client_config.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"interfaces\":{\"google.longrunning.Operations\":{\"retry_codes\":{\"idempotent\":[\"DEADLINE_EXCEEDED\",\"UNAVAILABLE\"],\"non_idempotent\":[]},\"retry_params\":{\"default\":{\"initial_retry_delay_millis\":100,\"retry_delay_multiplier\":1.3,\"max_retry_delay_millis\":60000,\"initial_rpc_timeout_millis\":90000,\"rpc_timeout_multiplier\":1.0,\"max_rpc_timeout_millis\":90000,\"total_timeout_millis\":600000}},\"methods\":{\"GetOperation\":{\"timeout_millis\":60000,\"retry_codes_name\":\"idempotent\",\"retry_params_name\":\"default\"},\"ListOperations\":{\"timeout_millis\":60000,\"retry_codes_name\":\"idempotent\",\"retry_params_name\":\"default\"},\"CancelOperation\":{\"timeout_millis\":60000,\"retry_codes_name\":\"idempotent\",\"retry_params_name\":\"default\"},\"DeleteOperation\":{\"timeout_millis\":60000,\"retry_codes_name\":\"idempotent\",\"retry_params_name\":\"default\"}}}}}"));}}),
"[project]/node_modules/google-gax/build/protos/operations.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"nested\":{\"google\":{\"nested\":{\"longrunning\":{\"options\":{\"cc_enable_arenas\":true,\"csharp_namespace\":\"Google.LongRunning\",\"go_package\":\"google.golang.org/genproto/googleapis/longrunning;longrunning\",\"java_multiple_files\":true,\"java_outer_classname\":\"OperationsProto\",\"java_package\":\"com.google.longrunning\",\"php_namespace\":\"Google\\\\LongRunning\"},\"nested\":{\"operationInfo\":{\"type\":\"google.longrunning.OperationInfo\",\"id\":1049,\"extend\":\"google.protobuf.MethodOptions\"},\"Operations\":{\"options\":{\"(google.api.default_host)\":\"longrunning.googleapis.com\"},\"methods\":{\"ListOperations\":{\"requestType\":\"ListOperationsRequest\",\"responseType\":\"ListOperationsResponse\",\"options\":{\"(google.api.http).get\":\"/v1/{name=operations}\",\"(google.api.method_signature)\":\"name,filter\"},\"parsedOptions\":[{\"(google.api.http)\":{\"get\":\"/v1/{name=operations}\"}},{\"(google.api.method_signature)\":\"name,filter\"}]},\"GetOperation\":{\"requestType\":\"GetOperationRequest\",\"responseType\":\"Operation\",\"options\":{\"(google.api.http).get\":\"/v1/operations/{name}\",\"(google.api.method_signature)\":\"name\"},\"parsedOptions\":[{\"(google.api.http)\":{\"get\":\"/v1/operations/{name}\"}},{\"(google.api.method_signature)\":\"name\"}]},\"DeleteOperation\":{\"requestType\":\"DeleteOperationRequest\",\"responseType\":\"google.protobuf.Empty\",\"options\":{\"(google.api.http).delete\":\"/v1/{name=operations/**}\",\"(google.api.method_signature)\":\"name\"},\"parsedOptions\":[{\"(google.api.http)\":{\"delete\":\"/v1/{name=operations/**}\"}},{\"(google.api.method_signature)\":\"name\"}]},\"CancelOperation\":{\"requestType\":\"CancelOperationRequest\",\"responseType\":\"google.protobuf.Empty\",\"options\":{\"(google.api.http).post\":\"/v1/{name=operations/**}:cancel\",\"(google.api.http).body\":\"*\",\"(google.api.method_signature)\":\"name\"},\"parsedOptions\":[{\"(google.api.http)\":{\"post\":\"/v1/{name=operations/**}:cancel\",\"body\":\"*\"}},{\"(google.api.method_signature)\":\"name\"}]},\"WaitOperation\":{\"requestType\":\"WaitOperationRequest\",\"responseType\":\"Operation\"}}},\"Operation\":{\"oneofs\":{\"result\":{\"oneof\":[\"error\",\"response\"]}},\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"metadata\":{\"type\":\"google.protobuf.Any\",\"id\":2},\"done\":{\"type\":\"bool\",\"id\":3},\"error\":{\"type\":\"google.rpc.Status\",\"id\":4},\"response\":{\"type\":\"google.protobuf.Any\",\"id\":5}}},\"GetOperationRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1}}},\"ListOperationsRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":4},\"filter\":{\"type\":\"string\",\"id\":1},\"pageSize\":{\"type\":\"int32\",\"id\":2},\"pageToken\":{\"type\":\"string\",\"id\":3}}},\"ListOperationsResponse\":{\"fields\":{\"operations\":{\"rule\":\"repeated\",\"type\":\"Operation\",\"id\":1},\"nextPageToken\":{\"type\":\"string\",\"id\":2}}},\"CancelOperationRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1}}},\"DeleteOperationRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1}}},\"WaitOperationRequest\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"timeout\":{\"type\":\"google.protobuf.Duration\",\"id\":2}}},\"OperationInfo\":{\"fields\":{\"responseType\":{\"type\":\"string\",\"id\":1},\"metadataType\":{\"type\":\"string\",\"id\":2}}}}},\"api\":{\"options\":{\"go_package\":\"google.golang.org/genproto/googleapis/api/annotations;annotations\",\"java_multiple_files\":true,\"java_outer_classname\":\"ClientProto\",\"java_package\":\"com.google.api\",\"objc_class_prefix\":\"GAPI\",\"cc_enable_arenas\":true},\"nested\":{\"http\":{\"type\":\"HttpRule\",\"id\":72295728,\"extend\":\"google.protobuf.MethodOptions\"},\"Http\":{\"fields\":{\"rules\":{\"rule\":\"repeated\",\"type\":\"HttpRule\",\"id\":1},\"fullyDecodeReservedExpansion\":{\"type\":\"bool\",\"id\":2}}},\"HttpRule\":{\"oneofs\":{\"pattern\":{\"oneof\":[\"get\",\"put\",\"post\",\"delete\",\"patch\",\"custom\"]}},\"fields\":{\"selector\":{\"type\":\"string\",\"id\":1},\"get\":{\"type\":\"string\",\"id\":2},\"put\":{\"type\":\"string\",\"id\":3},\"post\":{\"type\":\"string\",\"id\":4},\"delete\":{\"type\":\"string\",\"id\":5},\"patch\":{\"type\":\"string\",\"id\":6},\"custom\":{\"type\":\"CustomHttpPattern\",\"id\":8},\"body\":{\"type\":\"string\",\"id\":7},\"responseBody\":{\"type\":\"string\",\"id\":12},\"additionalBindings\":{\"rule\":\"repeated\",\"type\":\"HttpRule\",\"id\":11}}},\"CustomHttpPattern\":{\"fields\":{\"kind\":{\"type\":\"string\",\"id\":1},\"path\":{\"type\":\"string\",\"id\":2}}},\"methodSignature\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":1051,\"extend\":\"google.protobuf.MethodOptions\"},\"defaultHost\":{\"type\":\"string\",\"id\":1049,\"extend\":\"google.protobuf.ServiceOptions\"},\"oauthScopes\":{\"type\":\"string\",\"id\":1050,\"extend\":\"google.protobuf.ServiceOptions\"}}},\"protobuf\":{\"options\":{\"go_package\":\"github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor\",\"java_package\":\"com.google.protobuf\",\"java_outer_classname\":\"DescriptorProtos\",\"csharp_namespace\":\"Google.Protobuf.Reflection\",\"objc_class_prefix\":\"GPB\",\"cc_enable_arenas\":true,\"optimize_for\":\"SPEED\"},\"nested\":{\"FileDescriptorSet\":{\"fields\":{\"file\":{\"rule\":\"repeated\",\"type\":\"FileDescriptorProto\",\"id\":1}}},\"FileDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"package\":{\"type\":\"string\",\"id\":2},\"dependency\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":3},\"publicDependency\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":10,\"options\":{\"packed\":false}},\"weakDependency\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":11,\"options\":{\"packed\":false}},\"messageType\":{\"rule\":\"repeated\",\"type\":\"DescriptorProto\",\"id\":4},\"enumType\":{\"rule\":\"repeated\",\"type\":\"EnumDescriptorProto\",\"id\":5},\"service\":{\"rule\":\"repeated\",\"type\":\"ServiceDescriptorProto\",\"id\":6},\"extension\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":7},\"options\":{\"type\":\"FileOptions\",\"id\":8},\"sourceCodeInfo\":{\"type\":\"SourceCodeInfo\",\"id\":9},\"syntax\":{\"type\":\"string\",\"id\":12}}},\"DescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"field\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":2},\"extension\":{\"rule\":\"repeated\",\"type\":\"FieldDescriptorProto\",\"id\":6},\"nestedType\":{\"rule\":\"repeated\",\"type\":\"DescriptorProto\",\"id\":3},\"enumType\":{\"rule\":\"repeated\",\"type\":\"EnumDescriptorProto\",\"id\":4},\"extensionRange\":{\"rule\":\"repeated\",\"type\":\"ExtensionRange\",\"id\":5},\"oneofDecl\":{\"rule\":\"repeated\",\"type\":\"OneofDescriptorProto\",\"id\":8},\"options\":{\"type\":\"MessageOptions\",\"id\":7},\"reservedRange\":{\"rule\":\"repeated\",\"type\":\"ReservedRange\",\"id\":9},\"reservedName\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":10}},\"nested\":{\"ExtensionRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2},\"options\":{\"type\":\"ExtensionRangeOptions\",\"id\":3}}},\"ReservedRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2}}}}},\"ExtensionRangeOptions\":{\"fields\":{\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"FieldDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"number\":{\"type\":\"int32\",\"id\":3},\"label\":{\"type\":\"Label\",\"id\":4},\"type\":{\"type\":\"Type\",\"id\":5},\"typeName\":{\"type\":\"string\",\"id\":6},\"extendee\":{\"type\":\"string\",\"id\":2},\"defaultValue\":{\"type\":\"string\",\"id\":7},\"oneofIndex\":{\"type\":\"int32\",\"id\":9},\"jsonName\":{\"type\":\"string\",\"id\":10},\"options\":{\"type\":\"FieldOptions\",\"id\":8},\"proto3Optional\":{\"type\":\"bool\",\"id\":17}},\"nested\":{\"Type\":{\"values\":{\"TYPE_DOUBLE\":1,\"TYPE_FLOAT\":2,\"TYPE_INT64\":3,\"TYPE_UINT64\":4,\"TYPE_INT32\":5,\"TYPE_FIXED64\":6,\"TYPE_FIXED32\":7,\"TYPE_BOOL\":8,\"TYPE_STRING\":9,\"TYPE_GROUP\":10,\"TYPE_MESSAGE\":11,\"TYPE_BYTES\":12,\"TYPE_UINT32\":13,\"TYPE_ENUM\":14,\"TYPE_SFIXED32\":15,\"TYPE_SFIXED64\":16,\"TYPE_SINT32\":17,\"TYPE_SINT64\":18}},\"Label\":{\"values\":{\"LABEL_OPTIONAL\":1,\"LABEL_REQUIRED\":2,\"LABEL_REPEATED\":3}}}},\"OneofDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"options\":{\"type\":\"OneofOptions\",\"id\":2}}},\"EnumDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"value\":{\"rule\":\"repeated\",\"type\":\"EnumValueDescriptorProto\",\"id\":2},\"options\":{\"type\":\"EnumOptions\",\"id\":3},\"reservedRange\":{\"rule\":\"repeated\",\"type\":\"EnumReservedRange\",\"id\":4},\"reservedName\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":5}},\"nested\":{\"EnumReservedRange\":{\"fields\":{\"start\":{\"type\":\"int32\",\"id\":1},\"end\":{\"type\":\"int32\",\"id\":2}}}}},\"EnumValueDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"number\":{\"type\":\"int32\",\"id\":2},\"options\":{\"type\":\"EnumValueOptions\",\"id\":3}}},\"ServiceDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"method\":{\"rule\":\"repeated\",\"type\":\"MethodDescriptorProto\",\"id\":2},\"options\":{\"type\":\"ServiceOptions\",\"id\":3}}},\"MethodDescriptorProto\":{\"fields\":{\"name\":{\"type\":\"string\",\"id\":1},\"inputType\":{\"type\":\"string\",\"id\":2},\"outputType\":{\"type\":\"string\",\"id\":3},\"options\":{\"type\":\"MethodOptions\",\"id\":4},\"clientStreaming\":{\"type\":\"bool\",\"id\":5,\"options\":{\"default\":false}},\"serverStreaming\":{\"type\":\"bool\",\"id\":6,\"options\":{\"default\":false}}}},\"FileOptions\":{\"fields\":{\"javaPackage\":{\"type\":\"string\",\"id\":1},\"javaOuterClassname\":{\"type\":\"string\",\"id\":8},\"javaMultipleFiles\":{\"type\":\"bool\",\"id\":10,\"options\":{\"default\":false}},\"javaGenerateEqualsAndHash\":{\"type\":\"bool\",\"id\":20,\"options\":{\"deprecated\":true}},\"javaStringCheckUtf8\":{\"type\":\"bool\",\"id\":27,\"options\":{\"default\":false}},\"optimizeFor\":{\"type\":\"OptimizeMode\",\"id\":9,\"options\":{\"default\":\"SPEED\"}},\"goPackage\":{\"type\":\"string\",\"id\":11},\"ccGenericServices\":{\"type\":\"bool\",\"id\":16,\"options\":{\"default\":false}},\"javaGenericServices\":{\"type\":\"bool\",\"id\":17,\"options\":{\"default\":false}},\"pyGenericServices\":{\"type\":\"bool\",\"id\":18,\"options\":{\"default\":false}},\"phpGenericServices\":{\"type\":\"bool\",\"id\":42,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":23,\"options\":{\"default\":false}},\"ccEnableArenas\":{\"type\":\"bool\",\"id\":31,\"options\":{\"default\":true}},\"objcClassPrefix\":{\"type\":\"string\",\"id\":36},\"csharpNamespace\":{\"type\":\"string\",\"id\":37},\"swiftPrefix\":{\"type\":\"string\",\"id\":39},\"phpClassPrefix\":{\"type\":\"string\",\"id\":40},\"phpNamespace\":{\"type\":\"string\",\"id\":41},\"phpMetadataNamespace\":{\"type\":\"string\",\"id\":44},\"rubyPackage\":{\"type\":\"string\",\"id\":45},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[38,38]],\"nested\":{\"OptimizeMode\":{\"values\":{\"SPEED\":1,\"CODE_SIZE\":2,\"LITE_RUNTIME\":3}}}},\"MessageOptions\":{\"fields\":{\"messageSetWireFormat\":{\"type\":\"bool\",\"id\":1,\"options\":{\"default\":false}},\"noStandardDescriptorAccessor\":{\"type\":\"bool\",\"id\":2,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"mapEntry\":{\"type\":\"bool\",\"id\":7},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[8,8],[9,9]]},\"FieldOptions\":{\"fields\":{\"ctype\":{\"type\":\"CType\",\"id\":1,\"options\":{\"default\":\"STRING\"}},\"packed\":{\"type\":\"bool\",\"id\":2},\"jstype\":{\"type\":\"JSType\",\"id\":6,\"options\":{\"default\":\"JS_NORMAL\"}},\"lazy\":{\"type\":\"bool\",\"id\":5,\"options\":{\"default\":false}},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"weak\":{\"type\":\"bool\",\"id\":10,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[4,4]],\"nested\":{\"CType\":{\"values\":{\"STRING\":0,\"CORD\":1,\"STRING_PIECE\":2}},\"JSType\":{\"values\":{\"JS_NORMAL\":0,\"JS_STRING\":1,\"JS_NUMBER\":2}}}},\"OneofOptions\":{\"fields\":{\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"EnumOptions\":{\"fields\":{\"allowAlias\":{\"type\":\"bool\",\"id\":2},\"deprecated\":{\"type\":\"bool\",\"id\":3,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"reserved\":[[5,5]]},\"EnumValueOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":1,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"ServiceOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":33,\"options\":{\"default\":false}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]]},\"MethodOptions\":{\"fields\":{\"deprecated\":{\"type\":\"bool\",\"id\":33,\"options\":{\"default\":false}},\"idempotencyLevel\":{\"type\":\"IdempotencyLevel\",\"id\":34,\"options\":{\"default\":\"IDEMPOTENCY_UNKNOWN\"}},\"uninterpretedOption\":{\"rule\":\"repeated\",\"type\":\"UninterpretedOption\",\"id\":999}},\"extensions\":[[1000.0,536870911]],\"nested\":{\"IdempotencyLevel\":{\"values\":{\"IDEMPOTENCY_UNKNOWN\":0,\"NO_SIDE_EFFECTS\":1,\"IDEMPOTENT\":2}}}},\"UninterpretedOption\":{\"fields\":{\"name\":{\"rule\":\"repeated\",\"type\":\"NamePart\",\"id\":2},\"identifierValue\":{\"type\":\"string\",\"id\":3},\"positiveIntValue\":{\"type\":\"uint64\",\"id\":4},\"negativeIntValue\":{\"type\":\"int64\",\"id\":5},\"doubleValue\":{\"type\":\"double\",\"id\":6},\"stringValue\":{\"type\":\"bytes\",\"id\":7},\"aggregateValue\":{\"type\":\"string\",\"id\":8}},\"nested\":{\"NamePart\":{\"fields\":{\"namePart\":{\"rule\":\"required\",\"type\":\"string\",\"id\":1},\"isExtension\":{\"rule\":\"required\",\"type\":\"bool\",\"id\":2}}}}},\"SourceCodeInfo\":{\"fields\":{\"location\":{\"rule\":\"repeated\",\"type\":\"Location\",\"id\":1}},\"nested\":{\"Location\":{\"fields\":{\"path\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":1},\"span\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":2},\"leadingComments\":{\"type\":\"string\",\"id\":3},\"trailingComments\":{\"type\":\"string\",\"id\":4},\"leadingDetachedComments\":{\"rule\":\"repeated\",\"type\":\"string\",\"id\":6}}}}},\"GeneratedCodeInfo\":{\"fields\":{\"annotation\":{\"rule\":\"repeated\",\"type\":\"Annotation\",\"id\":1}},\"nested\":{\"Annotation\":{\"fields\":{\"path\":{\"rule\":\"repeated\",\"type\":\"int32\",\"id\":1},\"sourceFile\":{\"type\":\"string\",\"id\":2},\"begin\":{\"type\":\"int32\",\"id\":3},\"end\":{\"type\":\"int32\",\"id\":4}}}}},\"Any\":{\"fields\":{\"type_url\":{\"type\":\"string\",\"id\":1},\"value\":{\"type\":\"bytes\",\"id\":2}}},\"Duration\":{\"fields\":{\"seconds\":{\"type\":\"int64\",\"id\":1},\"nanos\":{\"type\":\"int32\",\"id\":2}}},\"Empty\":{\"fields\":{}}}},\"rpc\":{\"options\":{\"cc_enable_arenas\":true,\"go_package\":\"google.golang.org/genproto/googleapis/rpc/status;status\",\"java_multiple_files\":true,\"java_outer_classname\":\"StatusProto\",\"java_package\":\"com.google.rpc\",\"objc_class_prefix\":\"RPC\"},\"nested\":{\"Status\":{\"fields\":{\"code\":{\"type\":\"int32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2},\"details\":{\"rule\":\"repeated\",\"type\":\"google.protobuf.Any\",\"id\":3}}}}}}}}}"));}}),
"[project]/node_modules/google-gax/build/src/operationsClient.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OperationsClientBuilder = exports.OperationsClient = exports.ALL_SCOPES = exports.SERVICE_ADDRESS = void 0;
const createApiCall_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/createApiCall.js [app-rsc] (ecmascript)");
const descriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/descriptor.js [app-rsc] (ecmascript)");
const gax = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const configData = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/operations_client_config.json (json)");
const operationProtoJson = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/operations.json (json)");
const transcoding_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/transcoding.js [app-rsc] (ecmascript)");
exports.SERVICE_ADDRESS = 'longrunning.googleapis.com';
const version = __turbopack_context__.r("[project]/node_modules/google-gax/package.json (json)").version;
const DEFAULT_SERVICE_PORT = 443;
const CODE_GEN_NAME_VERSION = 'gapic/0.7.1';
/**
 * The scopes needed to make gRPC calls to all of the methods defined in
 * this service.
 */ exports.ALL_SCOPES = [];
/**
 * Manages long-running operations with an API service.
 *
 * When an API method normally takes long time to complete, it can be designed
 * to return {@link Operation} to the client, and the client can use this
 * interface to receive the real response asynchronously by polling the
 * operation resource, or pass the operation resource to another API (such as
 * Google Cloud Pub/Sub API) to receive the response.  Any API service that
 * returns long-running operations should implement the `Operations` interface
 * so developers can have a consistent client experience.
 *
 * This will be created through a builder function which can be obtained by the
 * module. See the following example of how to initialize the module and how to
 * access to the builder.
 * @see {@link operationsClient}
 *
 * @class
 */ class OperationsClient {
    constructor(gaxGrpc, // eslint-disable-next-line @typescript-eslint/no-explicit-any
    operationsProtos, options){
        const opts = Object.assign({
            servicePath: exports.SERVICE_ADDRESS,
            port: DEFAULT_SERVICE_PORT,
            clientConfig: {}
        }, options);
        const googleApiClient = [
            'gl-node/' + process.versions.node
        ];
        if (opts.libName && opts.libVersion) {
            googleApiClient.push(opts.libName + '/' + opts.libVersion);
        }
        googleApiClient.push(CODE_GEN_NAME_VERSION, 'gax/' + version);
        if (opts.fallback) {
            googleApiClient.push('gl-web/' + version);
        } else {
            googleApiClient.push('grpc/' + gaxGrpc.grpcVersion);
        }
        const defaults = gaxGrpc.constructSettings('google.longrunning.Operations', configData, opts.clientConfig || {}, {
            'x-goog-api-client': googleApiClient.join(' ')
        });
        this.auth = gaxGrpc.auth;
        // Set up a dictionary of "inner API calls"; the core implementation
        // of calling the API is handled in `google-gax`, with this code
        // merely providing the destination and request information.
        this.innerApiCalls = {};
        this.descriptor = {
            listOperations: new descriptor_1.PageDescriptor('pageToken', 'nextPageToken', 'operations')
        };
        // Put together the "service stub" for
        // google.longrunning.Operations.
        this.operationsStub = gaxGrpc.createStub(opts.fallback ? operationsProtos.lookupService('google.longrunning.Operations') : operationsProtos.google.longrunning.Operations, opts);
        const operationsStubMethods = [
            'getOperation',
            'listOperations',
            'cancelOperation',
            'deleteOperation'
        ];
        for (const methodName of operationsStubMethods){
            const innerCallPromise = this.operationsStub.then((stub)=>(...args)=>{
                    const func = stub[methodName];
                    return func.apply(stub, args);
                }, (err)=>()=>{
                    throw err;
                });
            this.innerApiCalls[methodName] = (0, createApiCall_1.createApiCall)(innerCallPromise, defaults[methodName], this.descriptor[methodName]);
        }
    }
    /** Closes this operations client. */ close() {
        this.operationsStub.then((stub)=>stub.close());
    }
    getProjectId(callback) {
        if (this.auth && 'getProjectId' in this.auth) {
            return this.auth.getProjectId(callback);
        }
        if (callback) {
            callback(new Error('Cannot determine project ID.'));
        } else {
            return Promise.reject('Cannot determine project ID.');
        }
    }
    // Service calls
    getOperationInternal(request, options, callback) {
        request = request || {};
        options = options || {};
        return this.innerApiCalls.getOperation(request, options, callback);
    }
    /**
     * Gets the latest state of a long-running operation.  Clients can use this
     * method to poll the operation result at intervals as recommended by the API
     * service.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
     *   details.
     * @param {function(?Error, ?Object)=} callback
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing
     * [google.longrunning.Operation]{@link
     * external:"google.longrunning.Operation"}.
     * @return {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     * [google.longrunning.Operation]{@link
     * external:"google.longrunning.Operation"}. The promise has a method named
     * "cancel" which cancels the ongoing API call.
     *
     * @example
     *
     * const client = longrunning.operationsClient();
     * const name = '';
     * const [response] = await client.getOperation({name});
     * // doThingsWith(response)
     */ getOperation(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        return this.innerApiCalls.getOperation(request, options, callback);
    }
    /**
     * Lists operations that match the specified filter in the request. If the
     * server doesn't support this method, it returns `UNIMPLEMENTED`.
     *
     * NOTE: the `name` binding below allows API services to override the binding
     * to use different resource name schemes.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
     * details.
     * @param {function(?Error, ?Array, ?Object, ?Object)=} callback
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is Array of
     * [google.longrunning.Operation]{@link
     * external:"google.longrunning.Operation"}.
     *
     *   When autoPaginate: false is specified through options, it contains the
     * result in a single response. If the response indicates the next page
     * exists, the third parameter is set to be used for the next request object.
     * The fourth parameter keeps the raw response object of an object
     * representing [google.longrunning.ListOperationsResponse]{@link
     * external:"google.longrunning.ListOperationsResponse"}.
     * @return {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of
     * [google.longrunning.Operation]{@link
     * external:"google.longrunning.Operation"}.
     *
     *   When autoPaginate: false is specified through options, the array has
     * three elements. The first element is Array of
     * [google.longrunning.Operation]{@link
     * external:"google.longrunning.Operation"} in a single response. The second
     * element is the next request object if the response indicates the next page
     * exists, or null. The third element is an object representing
     * [google.longrunning.ListOperationsResponse]{@link
     * external:"google.longrunning.ListOperationsResponse"}.
     *
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     *
     * const client = longrunning.operationsClient();
     * const request = {
     *     name: '',
     *     filter: ''
     * };
     * // Iterate over all elements.
     * const [resources] = await client.listOperations(request);
     * for (const resource of resources) {
     *   console.log(resources);
     * }
     *
     * // Or obtain the paged response.
     * const options = {autoPaginate: false};
     * let nextRequest = request;
     * while(nextRequest) {
     *   const response = await client.listOperations(nextRequest, options);
     *   const resources = response[0];
     *   nextRequest = response[1];
     *   const rawResponse = response[2];
     *   for (const resource of resources) {
     *     // doThingsWith(resource);
     *   }
     * };
     */ listOperations(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        return this.innerApiCalls.listOperations(request, options, callback);
    }
    /**
     * Equivalent to {@link listOperations}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listOperations} continuously
     * and invokes the callback registered for 'data' event for each element in
     * the responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize -
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
     *   details.
     * @return {Stream} - An object stream which emits an object representing [google.longrunning.Operation]{@link external:"google.longrunning.Operation"} on 'data' event.
     *
     * @example
     *
     * const client = longrunning.operationsClient();
     * const request = {
     *   name: '',
     *   filter: ''
     * };
     * client.listOperationsStream(request)
     *   .on('data', element => {
     *     // doThingsWith(element)
     *   })
     *   .on('error', err => {
     *     console.error(err);
     *   });
     */ listOperationsStream(request, options) {
        const callSettings = new gax.CallSettings(options);
        return this.descriptor.listOperations.createStream(this.innerApiCalls.listOperations, request, callSettings);
    }
    /**
     * Equivalent to {@link listOperations}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize -
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
     *   details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */ listOperationsAsync(request, options) {
        request = request || {};
        options = options || {};
        const callSettings = new gax.CallSettings(options);
        return this.descriptor.listOperations.asyncIterate(this.innerApiCalls.listOperations, request, callSettings);
    }
    /**
     * Starts asynchronous cancellation on a long-running operation.  The server
     * makes a best effort to cancel the operation, but success is not
     * guaranteed.  If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
     * {@link Operations.GetOperation} or
     * other methods to check whether the cancellation succeeded or whether the
     * operation completed despite cancellation. On successful cancellation,
     * the operation is not deleted; instead, it becomes an operation with
     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
     * 1, corresponding to `Code.CANCELLED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be cancelled.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
     * details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     *
     * const client = longrunning.operationsClient();
     * await client.cancelOperation({name: ''});
     */ cancelOperation(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        return this.innerApiCalls.cancelOperation(request, options, callback);
    }
    /**
     * Deletes a long-running operation. This method indicates that the client is
     * no longer interested in the operation result. It does not cancel the
     * operation. If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be deleted.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
     * details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     *
     * const client = longrunning.operationsClient();
     * await client.deleteOperation({name: ''});
     */ deleteOperation(request, optionsOrCallback, callback) {
        let options;
        if (optionsOrCallback instanceof Function && callback === undefined) {
            callback = optionsOrCallback;
            options = {};
        } else {
            options = optionsOrCallback;
        }
        request = request || {};
        options = options || {};
        return this.innerApiCalls.deleteOperation(request, options, callback);
    }
}
exports.OperationsClient = OperationsClient;
class OperationsClientBuilder {
    /**
     * Builds a new Operations Client
     * @param gaxGrpc {GrpcClient}
     */ constructor(gaxGrpc, protoJson){
        if (protoJson && gaxGrpc.httpRules) {
            // overwrite the http rules if provide in service yaml.
            (0, transcoding_1.overrideHttpRules)(gaxGrpc.httpRules, protoJson);
        }
        const operationsProtos = protoJson !== null && protoJson !== void 0 ? protoJson : gaxGrpc.loadProtoJSON(operationProtoJson);
        /**
         * Build a new instance of {@link OperationsClient}.
         *
         * @param {Object=} opts - The optional parameters.
         * @param {String=} opts.servicePath - Domain name of the API remote host.
         * @param {number=} opts.port - The port on which to connect to the remote host.
         * @param {grpc.ClientCredentials=} opts.sslCreds - A ClientCredentials for use with an SSL-enabled channel.
         * @param {Object=} opts.clientConfig - The customized config to build the call settings. See {@link gax.constructSettings} for the format.
         */ this.operationsClient = (opts)=>{
            if (gaxGrpc.fallback) {
                opts.fallback = gaxGrpc.fallback;
            }
            return new OperationsClient(gaxGrpc, operationsProtos, opts);
        };
        Object.assign(this.operationsClient, OperationsClient);
    }
}
exports.OperationsClientBuilder = OperationsClientBuilder; //# sourceMappingURL=operationsClient.js.map
}}),
"[project]/node_modules/google-gax/build/src/protosList.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("[\"google/api/annotations.proto\",\"google/api/apikeys/v2/apikeys.proto\",\"google/api/apikeys/v2/resources.proto\",\"google/api/auth.proto\",\"google/api/backend.proto\",\"google/api/billing.proto\",\"google/api/client.proto\",\"google/api/cloudquotas/v1/cloudquotas.proto\",\"google/api/cloudquotas/v1/resources.proto\",\"google/api/config_change.proto\",\"google/api/consumer.proto\",\"google/api/context.proto\",\"google/api/control.proto\",\"google/api/distribution.proto\",\"google/api/documentation.proto\",\"google/api/endpoint.proto\",\"google/api/error_reason.proto\",\"google/api/expr/conformance/v1alpha1/conformance_service.proto\",\"google/api/expr/v1alpha1/checked.proto\",\"google/api/expr/v1alpha1/eval.proto\",\"google/api/expr/v1alpha1/explain.proto\",\"google/api/expr/v1alpha1/syntax.proto\",\"google/api/expr/v1alpha1/value.proto\",\"google/api/expr/v1beta1/decl.proto\",\"google/api/expr/v1beta1/eval.proto\",\"google/api/expr/v1beta1/expr.proto\",\"google/api/expr/v1beta1/source.proto\",\"google/api/expr/v1beta1/value.proto\",\"google/api/field_behavior.proto\",\"google/api/field_info.proto\",\"google/api/http.proto\",\"google/api/httpbody.proto\",\"google/api/label.proto\",\"google/api/launch_stage.proto\",\"google/api/log.proto\",\"google/api/logging.proto\",\"google/api/metric.proto\",\"google/api/monitored_resource.proto\",\"google/api/monitoring.proto\",\"google/api/policy.proto\",\"google/api/quota.proto\",\"google/api/resource.proto\",\"google/api/routing.proto\",\"google/api/service.proto\",\"google/api/servicecontrol/v1/check_error.proto\",\"google/api/servicecontrol/v1/distribution.proto\",\"google/api/servicecontrol/v1/http_request.proto\",\"google/api/servicecontrol/v1/log_entry.proto\",\"google/api/servicecontrol/v1/metric_value.proto\",\"google/api/servicecontrol/v1/operation.proto\",\"google/api/servicecontrol/v1/quota_controller.proto\",\"google/api/servicecontrol/v1/service_controller.proto\",\"google/api/servicecontrol/v2/service_controller.proto\",\"google/api/servicemanagement/v1/resources.proto\",\"google/api/servicemanagement/v1/servicemanager.proto\",\"google/api/serviceusage/v1/resources.proto\",\"google/api/serviceusage/v1/serviceusage.proto\",\"google/api/serviceusage/v1beta1/resources.proto\",\"google/api/serviceusage/v1beta1/serviceusage.proto\",\"google/api/source_info.proto\",\"google/api/system_parameter.proto\",\"google/api/usage.proto\",\"google/api/visibility.proto\",\"google/cloud/location/locations.proto\",\"google/iam/v1/iam_policy.proto\",\"google/iam/v1/logging/audit_data.proto\",\"google/iam/v1/options.proto\",\"google/iam/v1/policy.proto\",\"google/logging/type/http_request.proto\",\"google/logging/type/log_severity.proto\",\"google/longrunning/operations.proto\",\"google/monitoring/v3/alert.proto\",\"google/monitoring/v3/alert_service.proto\",\"google/monitoring/v3/common.proto\",\"google/monitoring/v3/dropped_labels.proto\",\"google/monitoring/v3/group.proto\",\"google/monitoring/v3/group_service.proto\",\"google/monitoring/v3/metric.proto\",\"google/monitoring/v3/metric_service.proto\",\"google/monitoring/v3/mutation_record.proto\",\"google/monitoring/v3/notification.proto\",\"google/monitoring/v3/notification_service.proto\",\"google/monitoring/v3/query_service.proto\",\"google/monitoring/v3/service.proto\",\"google/monitoring/v3/service_service.proto\",\"google/monitoring/v3/snooze.proto\",\"google/monitoring/v3/snooze_service.proto\",\"google/monitoring/v3/span_context.proto\",\"google/monitoring/v3/uptime.proto\",\"google/monitoring/v3/uptime_service.proto\",\"google/protobuf/any.proto\",\"google/protobuf/api.proto\",\"google/protobuf/bridge/message_set.proto\",\"google/protobuf/compiler/plugin.proto\",\"google/protobuf/compiler/ruby/ruby_generated_code.proto\",\"google/protobuf/compiler/ruby/ruby_generated_code_proto2.proto\",\"google/protobuf/compiler/ruby/ruby_generated_code_proto2_import.proto\",\"google/protobuf/compiler/ruby/ruby_generated_pkg_explicit.proto\",\"google/protobuf/compiler/ruby/ruby_generated_pkg_explicit_legacy.proto\",\"google/protobuf/compiler/ruby/ruby_generated_pkg_implicit.proto\",\"google/protobuf/cpp_features.proto\",\"google/protobuf/descriptor.proto\",\"google/protobuf/duration.proto\",\"google/protobuf/empty.proto\",\"google/protobuf/field_mask.proto\",\"google/protobuf/source_context.proto\",\"google/protobuf/struct.proto\",\"google/protobuf/timestamp.proto\",\"google/protobuf/type.proto\",\"google/protobuf/util/json_format.proto\",\"google/protobuf/util/json_format_proto3.proto\",\"google/protobuf/wrappers.proto\",\"google/rpc/code.proto\",\"google/rpc/context/attribute_context.proto\",\"google/rpc/context/audit_context.proto\",\"google/rpc/error_details.proto\",\"google/rpc/http.proto\",\"google/rpc/status.proto\",\"google/type/calendar_period.proto\",\"google/type/color.proto\",\"google/type/date.proto\",\"google/type/datetime.proto\",\"google/type/dayofweek.proto\",\"google/type/decimal.proto\",\"google/type/expr.proto\",\"google/type/fraction.proto\",\"google/type/interval.proto\",\"google/type/latlng.proto\",\"google/type/localized_text.proto\",\"google/type/money.proto\",\"google/type/month.proto\",\"google/type/phone_number.proto\",\"google/type/postal_address.proto\",\"google/type/quaternion.proto\",\"google/type/timeofday.proto\"]"));}}),
"[project]/node_modules/google-gax/build/src/grpc.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GoogleProtoFilesRoot = exports.GrpcClient = exports.ClientStub = void 0;
const grpcProtoLoader = __turbopack_context__.r("[project]/node_modules/@grpc/proto-loader/build/src/index.js [app-rsc] (ecmascript)");
const child_process_1 = __turbopack_context__.r("[externals]/child_process [external] (child_process, cjs)");
const fs = __turbopack_context__.r("[externals]/fs [external] (fs, cjs)");
const google_auth_library_1 = __turbopack_context__.r("[project]/node_modules/google-auth-library/build/src/index.js [app-rsc] (ecmascript)");
const grpc = __turbopack_context__.r("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-rsc] (ecmascript)");
const os = __turbopack_context__.r("[externals]/os [external] (os, cjs)");
const path_1 = __turbopack_context__.r("[externals]/path [external] (path, cjs)");
const path = __turbopack_context__.r("[externals]/path [external] (path, cjs)");
const protobuf = __turbopack_context__.r("[project]/node_modules/protobufjs/index.js [app-rsc] (ecmascript)");
const objectHash = __turbopack_context__.r("[project]/node_modules/object-hash/index.js [app-rsc] (ecmascript)");
const gax = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
const googleProtoFilesDir = path.join(__dirname, '..', '..', 'build', 'protos');
// INCLUDE_DIRS is passed to @grpc/proto-loader
const INCLUDE_DIRS = [];
INCLUDE_DIRS.push(googleProtoFilesDir);
// COMMON_PROTO_FILES logic is here for protobufjs loads (see
// GoogleProtoFilesRoot below)
const commonProtoFiles = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/protosList.json (json)");
// use the correct path separator for the OS we are running on
const COMMON_PROTO_FILES = commonProtoFiles.map((file)=>file.replace(/[/\\]/g, path.sep));
/*
 * Async version of readFile.
 *
 * @returns {Promise} Contents of file at path.
 */ async function readFileAsync(path) {
    return new Promise((resolve, reject)=>{
        fs.readFile(path, 'utf8', (err, content)=>{
            if (err) return reject(err);
            else resolve(content);
        });
    });
}
/*
 * Async version of execFile.
 *
 * @returns {Promise} stdout from command execution.
 */ async function execFileAsync(command, args) {
    return new Promise((resolve, reject)=>{
        (0, child_process_1.execFile)(command, args, (err, stdout)=>{
            if (err) return reject(err);
            else resolve(stdout);
        });
    });
}
class ClientStub extends grpc.Client {
}
exports.ClientStub = ClientStub;
class GrpcClient {
    /**
     * Key for proto cache map. We are doing our best to make sure we respect
     * the options, so if the same proto file is loaded with different set of
     * options, the cache won't be used.  Since some of the options are
     * Functions (e.g. `enums: String` - see below in `loadProto()`),
     * they will be omitted from the cache key.  If the cache breaks anything
     * for you, use the `ignoreCache` parameter of `loadProto()` to disable it.
     */ static protoCacheKey(filename, options) {
        if (!filename || Array.isArray(filename) && (filename.length === 0 || !filename[0])) {
            return undefined;
        }
        return JSON.stringify(filename) + ' ' + JSON.stringify(options);
    }
    /**
     * In rare cases users might need to deallocate all memory consumed by loaded protos.
     * This method will delete the proto cache content.
     */ static clearProtoCache() {
        GrpcClient.protoCache.clear();
    }
    /**
     * A class which keeps the context of gRPC and auth for the gRPC.
     *
     * @param {Object=} options - The optional parameters. It will be directly
     *   passed to google-auth-library library, so parameters like keyFile or
     *   credentials will be valid.
     * @param {Object=} options.auth - An instance of google-auth-library.
     *   When specified, this auth instance will be used instead of creating
     *   a new one.
     * @param {Object=} options.grpc - When specified, this will be used
     *   for the 'grpc' module in this context. By default, it will load the grpc
     *   module in the standard way.
     * @constructor
     */ constructor(options = {}){
        var _a;
        this.auth = options.auth || new google_auth_library_1.GoogleAuth(options);
        this.fallback = false;
        const minimumVersion = 10;
        const major = Number((_a = process.version.match(/^v(\d+)/)) === null || _a === void 0 ? void 0 : _a[1]);
        if (Number.isNaN(major) || major < minimumVersion) {
            const errorMessage = `Node.js v${minimumVersion}.0.0 is a minimum requirement. To learn about legacy version support visit: ` + 'https://github.com/googleapis/google-cloud-node#supported-nodejs-versions';
            throw new Error(errorMessage);
        }
        if ('grpc' in options) {
            this.grpc = options.grpc;
            this.grpcVersion = '';
        } else {
            this.grpc = grpc;
            this.grpcVersion = __turbopack_context__.r("[project]/node_modules/@grpc/grpc-js/package.json (json)").version;
        }
    }
    /**
     * Creates a gRPC credentials. It asks the auth data if necessary.
     * @private
     * @param {Object} opts - options values for configuring credentials.
     * @param {Object=} opts.sslCreds - when specified, this is used instead
     *   of default channel credentials.
     * @return {Promise} The promise which will be resolved to the gRPC credential.
     */ async _getCredentials(opts) {
        if (opts.sslCreds) {
            return opts.sslCreds;
        }
        const grpc = this.grpc;
        const sslCreds = opts.cert && opts.key ? grpc.credentials.createSsl(null, Buffer.from(opts.key), Buffer.from(opts.cert)) : grpc.credentials.createSsl();
        const client = await this.auth.getClient();
        const credentials = grpc.credentials.combineChannelCredentials(sslCreds, grpc.credentials.createFromGoogleCredential(client));
        return credentials;
    }
    static defaultOptions() {
        // This set of @grpc/proto-loader options
        // 'closely approximates the existing behavior of grpc.load'
        const includeDirs = INCLUDE_DIRS.slice();
        const options = {
            keepCase: false,
            longs: String,
            enums: String,
            defaults: true,
            oneofs: true,
            includeDirs
        };
        return options;
    }
    /**
     * Loads the gRPC service from the proto file(s) at the given path and with the
     * given options. Caches the loaded protos so the subsequent loads don't do
     * any disk reads.
     * @param filename The path to the proto file(s).
     * @param options Options for loading the proto file.
     * @param ignoreCache Defaults to `false`. Set it to `true` if the caching logic
     *   incorrectly decides that the options object is the same, or if you want to
     *   re-read the protos from disk for any other reason.
     */ loadFromProto(filename, options, ignoreCache = false) {
        const cacheKey = GrpcClient.protoCacheKey(filename, options);
        let grpcPackage = cacheKey ? GrpcClient.protoCache.get(cacheKey) : undefined;
        if (ignoreCache || !grpcPackage) {
            const packageDef = grpcProtoLoader.loadSync(filename, options);
            grpcPackage = this.grpc.loadPackageDefinition(packageDef);
            if (cacheKey) {
                GrpcClient.protoCache.set(cacheKey, grpcPackage);
            }
        }
        return grpcPackage;
    }
    /**
     * Load gRPC proto service from a filename looking in googleapis common protos
     * when necessary. Caches the loaded protos so the subsequent loads don't do
     * any disk reads.
     * @param {String} protoPath - The directory to search for the protofile.
     * @param {String|String[]} filename - The filename(s) of the proto(s) to be loaded.
     *   If omitted, protoPath will be treated as a file path to load.
     * @param ignoreCache Defaults to `false`. Set it to `true` if the caching logic
     *   incorrectly decides that the options object is the same, or if you want to
     *   re-read the protos from disk for any other reason.
     * @return {Object<string, *>} The gRPC loaded result (the toplevel namespace
     *   object).
     */ loadProto(protoPath, filename, ignoreCache = false) {
        if (!filename) {
            filename = path.basename(protoPath);
            protoPath = path.dirname(protoPath);
        }
        if (Array.isArray(filename) && filename.length === 0) {
            return {};
        }
        const options = GrpcClient.defaultOptions();
        options.includeDirs.unshift(protoPath);
        return this.loadFromProto(filename, options, ignoreCache);
    }
    static _resolveFile(protoPath, filename) {
        if (fs.existsSync(path.join(protoPath, filename))) {
            return path.join(protoPath, filename);
        } else if (COMMON_PROTO_FILES.indexOf(filename) > -1) {
            return path.join(googleProtoFilesDir, filename);
        }
        throw new Error(filename + ' could not be found in ' + protoPath);
    }
    loadProtoJSON(json, ignoreCache = false) {
        const hash = objectHash(JSON.stringify(json)).toString();
        const cached = GrpcClient.protoCache.get(hash);
        if (cached && !ignoreCache) {
            return cached;
        }
        const options = GrpcClient.defaultOptions();
        const packageDefinition = grpcProtoLoader.fromJSON(json, options);
        const grpcPackage = this.grpc.loadPackageDefinition(packageDefinition);
        GrpcClient.protoCache.set(hash, grpcPackage);
        return grpcPackage;
    }
    metadataBuilder(headers) {
        const Metadata = this.grpc.Metadata;
        const baseMetadata = new Metadata();
        for(const key in headers){
            const value = headers[key];
            if (Array.isArray(value)) {
                value.forEach((v)=>baseMetadata.add(key, v));
            } else {
                baseMetadata.set(key, `${value}`);
            }
        }
        return function buildMetadata(abTests, moreHeaders) {
            // TODO: bring the A/B testing info into the metadata.
            let copied = false;
            let metadata = baseMetadata;
            if (moreHeaders) {
                for(const key in moreHeaders){
                    if (key.toLowerCase() !== 'x-goog-api-client') {
                        if (!copied) {
                            copied = true;
                            metadata = metadata.clone();
                        }
                        const value = moreHeaders[key];
                        if (Array.isArray(value)) {
                            value.forEach((v)=>metadata.add(key, v));
                        } else {
                            metadata.set(key, `${value}`);
                        }
                    }
                }
            }
            return metadata;
        };
    }
    /**
     * A wrapper of {@link constructSettings} function under the gRPC context.
     *
     * Most of parameters are common among constructSettings, please take a look.
     * @param {string} serviceName - The fullly-qualified name of the service.
     * @param {Object} clientConfig - A dictionary of the client config.
     * @param {Object} configOverrides - A dictionary of overriding configs.
     * @param {Object} headers - A dictionary of additional HTTP header name to
     *   its value.
     * @return {Object} A mapping of method names to CallSettings.
     */ constructSettings(serviceName, clientConfig, configOverrides, headers) {
        return gax.constructSettings(serviceName, clientConfig, configOverrides, this.grpc.status, {
            metadataBuilder: this.metadataBuilder(headers)
        });
    }
    /**
     * Creates a gRPC stub with current gRPC and auth.
     * @param {function} CreateStub - The constructor function of the stub.
     * @param {Object} options - The optional arguments to customize
     *   gRPC connection. This options will be passed to the constructor of
     *   gRPC client too.
     * @param {string} options.servicePath - The name of the server of the service.
     * @param {number} options.port - The port of the service.
     * @param {grpcTypes.ClientCredentials=} options.sslCreds - The credentials to be used
     *   to set up gRPC connection.
     * @param {string} defaultServicePath - The default service path.
     * @return {Promise} A promise which resolves to a gRPC stub instance.
     */ async createStub(CreateStub, options, customServicePath) {
        // The following options are understood by grpc-gcp and need a special treatment
        // (should be passed without a `grpc.` prefix)
        const grpcGcpOptions = [
            'grpc.callInvocationTransformer',
            'grpc.channelFactoryOverride',
            'grpc.gcpApiConfig'
        ];
        const [cert, key] = await this._detectClientCertificate(options, options.universeDomain);
        const servicePath = this._mtlsServicePath(options.servicePath, customServicePath, cert && key);
        const opts = Object.assign({}, options, {
            cert,
            key,
            servicePath
        });
        const serviceAddress = servicePath + ':' + opts.port;
        if (!options.universeDomain) {
            options.universeDomain = 'googleapis.com';
        }
        if (options.universeDomain) {
            const universeFromAuth = await this.auth.getUniverseDomain();
            if (universeFromAuth && options.universeDomain !== universeFromAuth) {
                throw new Error(`The configured universe domain (${options.universeDomain}) does not match the universe domain found in the credentials (${universeFromAuth}). ` + "If you haven't configured the universe domain explicitly, googleapis.com is the default.");
            }
        }
        const creds = await this._getCredentials(opts);
        const grpcOptions = {};
        // @grpc/grpc-js limits max receive/send message length starting from v0.8.0
        // https://github.com/grpc/grpc-node/releases/tag/%40grpc%2Fgrpc-js%400.8.0
        // To keep the existing behavior and avoid libraries breakage, we pass -1 there as suggested.
        grpcOptions['grpc.max_receive_message_length'] = -1;
        grpcOptions['grpc.max_send_message_length'] = -1;
        grpcOptions['grpc.initial_reconnect_backoff_ms'] = 1000;
        Object.keys(opts).forEach((key)=>{
            const value = options[key];
            // the older versions had a bug which required users to call an option
            // grpc.grpc.* to make it actually pass to gRPC as grpc.*, let's handle
            // this here until the next major release
            if (key.startsWith('grpc.grpc.')) {
                key = key.replace(/^grpc\./, '');
            }
            if (key.startsWith('grpc.')) {
                if (grpcGcpOptions.includes(key)) {
                    key = key.replace(/^grpc\./, '');
                }
                grpcOptions[key] = value;
            }
            if (key.startsWith('grpc-node.')) {
                grpcOptions[key] = value;
            }
        });
        const stub = new CreateStub(serviceAddress, creds, grpcOptions);
        return stub;
    }
    /**
     * Detect mTLS client certificate based on logic described in
     * https://google.aip.dev/auth/4114.
     *
     * @param {object} [options] - The configuration object.
     * @returns {Promise} Resolves array of strings representing cert and key.
     */ async _detectClientCertificate(opts, universeDomain) {
        var _a;
        const certRegex = /(?<cert>-----BEGIN CERTIFICATE-----.*?-----END CERTIFICATE-----)/s;
        const keyRegex = /(?<key>-----BEGIN PRIVATE KEY-----.*?-----END PRIVATE KEY-----)/s;
        // If GOOGLE_API_USE_CLIENT_CERTIFICATE is true...:
        if (typeof process !== 'undefined' && ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.GOOGLE_API_USE_CLIENT_CERTIFICATE) === 'true') {
            if (universeDomain && universeDomain !== 'googleapis.com') {
                throw new Error('mTLS is not supported outside of googleapis.com universe domain.');
            }
            if ((opts === null || opts === void 0 ? void 0 : opts.cert) && (opts === null || opts === void 0 ? void 0 : opts.key)) {
                return [
                    opts.cert,
                    opts.key
                ];
            }
            // If context aware metadata exists, run the cert provider command,
            // parse the output to extract cert and key, and use this cert/key.
            const metadataPath = (0, path_1.join)(os.homedir(), '.secureConnect', 'context_aware_metadata.json');
            const metadata = JSON.parse(await readFileAsync(metadataPath));
            if (!metadata.cert_provider_command) {
                throw Error('no cert_provider_command found');
            }
            const stdout = await execFileAsync(metadata.cert_provider_command[0], metadata.cert_provider_command.slice(1));
            const matchCert = stdout.toString().match(certRegex);
            const matchKey = stdout.toString().match(keyRegex);
            if (!((matchCert === null || matchCert === void 0 ? void 0 : matchCert.groups) && (matchKey === null || matchKey === void 0 ? void 0 : matchKey.groups))) {
                throw Error('unable to parse certificate and key');
            } else {
                return [
                    matchCert.groups.cert,
                    matchKey.groups.key
                ];
            }
        }
        // If GOOGLE_API_USE_CLIENT_CERTIFICATE is not set or false,
        // use no cert or key:
        return [
            undefined,
            undefined
        ];
    }
    /**
     * Return service path, taking into account mTLS logic.
     * See: https://google.aip.dev/auth/4114
     *
     * @param {string|undefined} servicePath - The path of the service.
     * @param {string|undefined} customServicePath - Did the user provide a custom service URL.
     * @param {boolean} hasCertificate - Was a certificate found.
     * @returns {string} The DNS address for this service.
     */ _mtlsServicePath(servicePath, customServicePath, hasCertificate) {
        var _a, _b;
        // If user provides a custom service path, return the current service
        // path and do not attempt to add mtls subdomain:
        if (customServicePath || !servicePath) return servicePath;
        if (typeof process !== 'undefined' && ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.GOOGLE_API_USE_MTLS_ENDPOINT) === 'never') {
            // It was explicitly asked that mtls endpoint not be used:
            return servicePath;
        } else if (typeof process !== 'undefined' && ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.GOOGLE_API_USE_MTLS_ENDPOINT) === 'always' || hasCertificate) {
            // Either auto-detect or explicit setting of endpoint:
            return servicePath.replace('googleapis.com', 'mtls.googleapis.com');
        }
        return servicePath;
    }
    /**
     * Creates a 'bytelength' function for a given proto message class.
     *
     * See {@link BundleDescriptor} about the meaning of the return value.
     *
     * @param {function} message - a constructor function that is generated by
     *   protobuf.js. Assumes 'encoder' field in the message.
     * @return {function(Object):number} - a function to compute the byte length
     *   for an object.
     */ static createByteLengthFunction(message) {
        return gax.createByteLengthFunction(message);
    }
}
exports.GrpcClient = GrpcClient;
GrpcClient.protoCache = new Map();
class GoogleProtoFilesRoot extends protobuf.Root {
    constructor(...args){
        super(...args);
    }
    // Causes the loading of an included proto to check if it is a common
    // proto. If it is a common proto, use the bundled proto.
    resolvePath(originPath, includePath) {
        originPath = path.normalize(originPath);
        includePath = path.normalize(includePath);
        // Fully qualified paths don't need to be resolved.
        if (path.isAbsolute(includePath)) {
            if (!fs.existsSync(includePath)) {
                throw new Error('The include `' + includePath + '` was not found.');
            }
            return includePath;
        }
        if (COMMON_PROTO_FILES.indexOf(includePath) > -1) {
            return path.join(googleProtoFilesDir, includePath);
        }
        return GoogleProtoFilesRoot._findIncludePath(originPath, includePath);
    }
    static _findIncludePath(originPath, includePath) {
        originPath = path.normalize(originPath);
        includePath = path.normalize(includePath);
        let current = originPath;
        let found = fs.existsSync(path.join(current, includePath));
        while(!found && current.length > 0){
            current = current.substring(0, current.lastIndexOf(path.sep));
            found = fs.existsSync(path.join(current, includePath));
        }
        if (!found) {
            throw new Error('The include `' + includePath + '` was not found.');
        }
        return path.join(current, includePath);
    }
}
exports.GoogleProtoFilesRoot = GoogleProtoFilesRoot; //# sourceMappingURL=grpc.js.map
}}),
"[project]/node_modules/google-gax/build/src/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.serializer = exports.warn = exports.ChannelCredentials = exports.makeUUID = exports.fallback = exports.protobufMinimal = exports.protobuf = exports.version = exports.createByteLengthFunction = exports.LocationsClient = exports.IamClient = exports.OperationsClient = exports.LocationProtos = exports.IamProtos = exports.operationsProtos = exports.routingHeader = exports.StreamType = exports.Status = exports.PathTemplate = exports.operation = exports.Operation = exports.GrpcClient = exports.GoogleProtoFilesRoot = exports.ClientStub = exports.GoogleError = exports.createMaxRetriesBackoffSettings = exports.createDefaultBackoffSettings = exports.createBackoffSettings = exports.createBundleOptions = exports.createRetryOptions = exports.RetryOptions = exports.constructSettings = exports.CallSettings = exports.StreamDescriptor = exports.PageDescriptor = exports.LongrunningDescriptor = exports.BundleDescriptor = exports.createApiCall = exports.OngoingCall = exports.grpc = exports.GoogleAuth = void 0;
exports.lro = lro;
const grpc = __turbopack_context__.r("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-rsc] (ecmascript)");
exports.grpc = grpc;
const grpc_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/grpc.js [app-rsc] (ecmascript)");
const IamProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/iam_service.js [app-rsc] (ecmascript)");
exports.IamProtos = IamProtos;
const LocationProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/locations.js [app-rsc] (ecmascript)");
exports.LocationProtos = LocationProtos;
const operationsProtos = __turbopack_context__.r("[project]/node_modules/google-gax/build/protos/operations.js [app-rsc] (ecmascript)");
exports.operationsProtos = operationsProtos;
const operationsClient = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/operationsClient.js [app-rsc] (ecmascript)");
const routingHeader = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/routingHeader.js [app-rsc] (ecmascript)");
exports.routingHeader = routingHeader;
var google_auth_library_1 = __turbopack_context__.r("[project]/node_modules/google-auth-library/build/src/index.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "GoogleAuth", {
    enumerable: true,
    get: function() {
        return google_auth_library_1.GoogleAuth;
    }
});
var call_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/call.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "OngoingCall", {
    enumerable: true,
    get: function() {
        return call_1.OngoingCall;
    }
});
var createApiCall_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/createApiCall.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "createApiCall", {
    enumerable: true,
    get: function() {
        return createApiCall_1.createApiCall;
    }
});
var descriptor_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/descriptor.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "BundleDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.BundleDescriptor;
    }
});
Object.defineProperty(exports, "LongrunningDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.LongrunningDescriptor;
    }
});
Object.defineProperty(exports, "PageDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.PageDescriptor;
    }
});
Object.defineProperty(exports, "StreamDescriptor", {
    enumerable: true,
    get: function() {
        return descriptor_1.StreamDescriptor;
    }
});
var gax_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/gax.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "CallSettings", {
    enumerable: true,
    get: function() {
        return gax_1.CallSettings;
    }
});
Object.defineProperty(exports, "constructSettings", {
    enumerable: true,
    get: function() {
        return gax_1.constructSettings;
    }
});
Object.defineProperty(exports, "RetryOptions", {
    enumerable: true,
    get: function() {
        return gax_1.RetryOptions;
    }
});
Object.defineProperty(exports, "createRetryOptions", {
    enumerable: true,
    get: function() {
        return gax_1.createRetryOptions;
    }
});
Object.defineProperty(exports, "createBundleOptions", {
    enumerable: true,
    get: function() {
        return gax_1.createBundleOptions;
    }
});
Object.defineProperty(exports, "createBackoffSettings", {
    enumerable: true,
    get: function() {
        return gax_1.createBackoffSettings;
    }
});
Object.defineProperty(exports, "createDefaultBackoffSettings", {
    enumerable: true,
    get: function() {
        return gax_1.createDefaultBackoffSettings;
    }
});
Object.defineProperty(exports, "createMaxRetriesBackoffSettings", {
    enumerable: true,
    get: function() {
        return gax_1.createMaxRetriesBackoffSettings;
    }
});
var googleError_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/googleError.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "GoogleError", {
    enumerable: true,
    get: function() {
        return googleError_1.GoogleError;
    }
});
var grpc_2 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/grpc.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ClientStub", {
    enumerable: true,
    get: function() {
        return grpc_2.ClientStub;
    }
});
Object.defineProperty(exports, "GoogleProtoFilesRoot", {
    enumerable: true,
    get: function() {
        return grpc_2.GoogleProtoFilesRoot;
    }
});
Object.defineProperty(exports, "GrpcClient", {
    enumerable: true,
    get: function() {
        return grpc_2.GrpcClient;
    }
});
var longrunning_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/longRunningCalls/longrunning.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "Operation", {
    enumerable: true,
    get: function() {
        return longrunning_1.Operation;
    }
});
Object.defineProperty(exports, "operation", {
    enumerable: true,
    get: function() {
        return longrunning_1.operation;
    }
});
var pathTemplate_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/pathTemplate.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "PathTemplate", {
    enumerable: true,
    get: function() {
        return pathTemplate_1.PathTemplate;
    }
});
var status_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/status.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "Status", {
    enumerable: true,
    get: function() {
        return status_1.Status;
    }
});
var streaming_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/streamingCalls/streaming.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "StreamType", {
    enumerable: true,
    get: function() {
        return streaming_1.StreamType;
    }
});
function lro(options) {
    options = Object.assign({
        scopes: lro.ALL_SCOPES
    }, options);
    const gaxGrpc = new grpc_1.GrpcClient(options);
    return new operationsClient.OperationsClientBuilder(gaxGrpc);
}
lro.SERVICE_ADDRESS = operationsClient.SERVICE_ADDRESS;
lro.ALL_SCOPES = operationsClient.ALL_SCOPES;
var operationsClient_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/operationsClient.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "OperationsClient", {
    enumerable: true,
    get: function() {
        return operationsClient_1.OperationsClient;
    }
});
var iamService_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/iamService.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "IamClient", {
    enumerable: true,
    get: function() {
        return iamService_1.IamClient;
    }
});
var locationService_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/locationService.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "LocationsClient", {
    enumerable: true,
    get: function() {
        return locationService_1.LocationsClient;
    }
});
exports.createByteLengthFunction = grpc_1.GrpcClient.createByteLengthFunction;
exports.version = __turbopack_context__.r("[project]/node_modules/google-gax/package.json (json)").version;
const protobuf = __turbopack_context__.r("[project]/node_modules/protobufjs/index.js [app-rsc] (ecmascript)");
exports.protobuf = protobuf;
exports.protobufMinimal = __turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)");
const fallback = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/fallback.js [app-rsc] (ecmascript)");
exports.fallback = fallback;
var util_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/util.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "makeUUID", {
    enumerable: true,
    get: function() {
        return util_1.makeUUID;
    }
});
var grpc_js_1 = __turbopack_context__.r("[project]/node_modules/@grpc/grpc-js/build/src/index.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ChannelCredentials", {
    enumerable: true,
    get: function() {
        return grpc_js_1.ChannelCredentials;
    }
});
var warnings_1 = __turbopack_context__.r("[project]/node_modules/google-gax/build/src/warnings.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "warn", {
    enumerable: true,
    get: function() {
        return warnings_1.warn;
    }
});
const serializer = __turbopack_context__.r("[project]/node_modules/proto3-json-serializer/build/src/index.js [app-rsc] (ecmascript)");
exports.serializer = serializer; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/google-gax/build/src/protobuf.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.protobufMinimal = void 0;
// This file is here to re-export protobuf.js so that the proto.js files
// produced by tools/compileProtos.ts did not depend on protobuf.js
// directly.
// Usage:
//   const {protobufMinimal} = require('google-gax/build/src/protobuf');
exports.protobufMinimal = __turbopack_context__.r("[project]/node_modules/protobufjs/minimal.js [app-rsc] (ecmascript)"); //# sourceMappingURL=protobuf.js.map
}}),

};

//# sourceMappingURL=node_modules_google-gax_7c3f1164._.js.map