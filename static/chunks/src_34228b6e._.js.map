{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { generatePetPortrait } from \"@/ai/flows/generate-pet-portrait\";\nimport { addPortraitToGallery } from '@/services/gallery.service';\n\n// Define the shape of the data returned by the actions\nexport interface GenerateActionResult {\n  success: boolean;\n  message: string;\n  portraitDataUri?: string;\n  petName?: string;\n  hatStyle?: string;\n};\n\nexport interface PublishActionResult {\n    success: boolean;\n    message: string;\n}\n\n/**\n * A standard async function to handle portrait generation.\n * It's called from the client with a structured object.\n */\nexport async function handleGeneratePortrait(\n  input: { petName: string, photoDataUri: string, hatStyle: string }\n): Promise<GenerateActionResult> {\n  try {\n    // Basic validation\n    if (!input.petName || !input.photoDataUri || !input.hatStyle) {\n      return { success: false, message: 'Invalid form data. All fields are required.' };\n    }\n    \n    const result = await generatePetPortrait(input);\n\n    if (!result.portraitDataUri) {\n        throw new Error('AI generation failed to return a portrait.');\n    }\n\n    return {\n      success: true,\n      message: 'Your masterpiece is ready!',\n      portraitDataUri: result.portraitDataUri,\n      petName: input.petName,\n      hatStyle: input.hatStyle,\n    };\n  } catch (error) {\n    console.error('Error generating portrait:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return {\n      success: false,\n      message: `Generation failed: ${errorMessage}`,\n    };\n  }\n}\n\n/**\n * A standard async function to handle publishing.\n * It's called from the client with a structured object.\n */\nexport async function handlePublishPortrait(\n    input: { petName: string, hatStyle: string, portraitDataUri: string }\n): Promise<PublishActionResult> {\n    try {\n        if (!input.petName || !input.hatStyle || !input.portraitDataUri) {\n            return {\n                success: false,\n                message: 'Invalid data for publishing.',\n            };\n        }\n\n        await addPortraitToGallery(input);\n\n        return {\n            success: true,\n            message: 'Your portrait has been published to the gallery!',\n        };\n\n    } catch (error) {\n        console.error('Error publishing portrait:', error);\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n        return {\n            success: false,\n            message: `Failed to publish: ${errorMessage}`,\n        };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAuBsB,yBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { generatePetPortrait } from \"@/ai/flows/generate-pet-portrait\";\nimport { addPortraitToGallery } from '@/services/gallery.service';\n\n// Define the shape of the data returned by the actions\nexport interface GenerateActionResult {\n  success: boolean;\n  message: string;\n  portraitDataUri?: string;\n  petName?: string;\n  hatStyle?: string;\n};\n\nexport interface PublishActionResult {\n    success: boolean;\n    message: string;\n}\n\n/**\n * A standard async function to handle portrait generation.\n * It's called from the client with a structured object.\n */\nexport async function handleGeneratePortrait(\n  input: { petName: string, photoDataUri: string, hatStyle: string }\n): Promise<GenerateActionResult> {\n  try {\n    // Basic validation\n    if (!input.petName || !input.photoDataUri || !input.hatStyle) {\n      return { success: false, message: 'Invalid form data. All fields are required.' };\n    }\n    \n    const result = await generatePetPortrait(input);\n\n    if (!result.portraitDataUri) {\n        throw new Error('AI generation failed to return a portrait.');\n    }\n\n    return {\n      success: true,\n      message: 'Your masterpiece is ready!',\n      portraitDataUri: result.portraitDataUri,\n      petName: input.petName,\n      hatStyle: input.hatStyle,\n    };\n  } catch (error) {\n    console.error('Error generating portrait:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return {\n      success: false,\n      message: `Generation failed: ${errorMessage}`,\n    };\n  }\n}\n\n/**\n * A standard async function to handle publishing.\n * It's called from the client with a structured object.\n */\nexport async function handlePublishPortrait(\n    input: { petName: string, hatStyle: string, portraitDataUri: string }\n): Promise<PublishActionResult> {\n    try {\n        if (!input.petName || !input.hatStyle || !input.portraitDataUri) {\n            return {\n                success: false,\n                message: 'Invalid data for publishing.',\n            };\n        }\n\n        await addPortraitToGallery(input);\n\n        return {\n            success: true,\n            message: 'Your portrait has been published to the gallery!',\n        };\n\n    } catch (error) {\n        console.error('Error publishing portrait:', error);\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n        return {\n            success: false,\n            message: `Failed to publish: ${errorMessage}`,\n        };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA2DsB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  CardTitleProps\n>(({ className, as: Comp = 'div', ...props }, ref) => (\n  <Comp\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n\ninterface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\n  as?: React.ElementType;\n}\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  CardDescriptionProps\n>(({ className, as: Comp = 'div', ...props }, ref) => (\n  <Comp\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAGA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAMzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,IAAI,OAAO,KAAK,EAAE,GAAG,OAAO,EAAE,oBAC5C,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAOxB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,IAAI,OAAO,KAAK,EAAE,GAAG,OAAO,EAAE,oBAC5C,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/portrait-generator-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport Image from 'next/image';\nimport { Camera, Sparkles, Wand2, Share2, RefreshCw, ShoppingCart, RefreshCcw, Download } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { handleGeneratePortrait, handlePublishPortrait } from '@/app/actions';\nimport type { GenerateActionResult, PublishActionResult } from '@/app/actions';\n\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { cn } from '@/lib/utils';\nimport { Textarea } from './ui/textarea';\n\nconst allHatOptions = [\n  'Top Hat', 'Cowboy Hat', 'Beanie', 'Fez', 'Beret', 'Baseball Cap', \n  'Graduation Cap', 'Sombrero', 'Wizard Hat', 'Chef Hat', 'Sailor Hat', \n  'Detective Hat', 'Propeller Beanie', 'Crown', 'Viking Helmet', 'Pirate Hat',\n  'Hard Hat', 'Jester Hat', 'Bowler Hat', 'Fedora', 'Santa Hat', 'Elf Hat',\n  'Newsboy Cap', 'Turban', 'Ushanka', 'Safari Helmet', 'Mortar Board',\n  'Party Hat', 'Tricorne', 'Pork Pie Hat', 'Kepi', 'Deerstalker'\n];\n\nconst HATS_TO_SHOW = 15;\n\n\nexport default function PortraitGeneratorForm() {\n  const { toast } = useToast();\n  \n  // State for form inputs\n  const [photoPreview, setPhotoPreview] = useState<string | null>(null);\n  const [photoDataUri, setPhotoDataUri] = useState<string>('');\n  const [petName, setPetName] = useState('');\n  const [selectedHat, setSelectedHat] = useState('');\n  const [customHat, setCustomHat] = useState('');\n  const [displayedHats, setDisplayedHats] = useState<string[]>([]);\n  \n  // State for generation results\n  const [generatedPortrait, setGeneratedPortrait] = useState<GenerateActionResult | null>(null);\n  \n  // State for loading and submission status\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isPublishing, setIsPublishing] = useState(false);\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const hatSelectionRef = useRef<HTMLDivElement>(null);\n  const portraitSectionRef = useRef<HTMLDivElement>(null);\n  \n  const getHatStyle = () => customHat.trim() || selectedHat;\n  \n  const resetPortrait = () => {\n    setGeneratedPortrait(null);\n    setSelectedHat('');\n    setCustomHat('');\n    hatSelectionRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  const shuffleHats = () => {\n    const shuffled = [...allHatOptions].sort(() => 0.5 - Math.random());\n    setDisplayedHats(shuffled.slice(0, HATS_TO_SHOW));\n  };\n  \n  useEffect(() => {\n    shuffleHats();\n  }, []);\n\n  useEffect(() => {\n    if (generatedPortrait?.success && generatedPortrait?.portraitDataUri) {\n      portraitSectionRef.current?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  }, [generatedPortrait]);\n\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const newPhotoUrl = URL.createObjectURL(file);\n      setPhotoPreview(newPhotoUrl);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPhotoDataUri(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  const handleGenerationSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsGenerating(true);\n    setGeneratedPortrait(null);\n\n    const hatStyle = getHatStyle();\n\n    // Basic client-side validation\n    if (!photoDataUri) {\n      toast({ title: 'Oops!', description: 'Please upload a photo of your pet.', variant: 'destructive' });\n      setIsGenerating(false);\n      return;\n    }\n     if (!petName) {\n      toast({ title: 'Oops!', description: 'Please enter your pet\\'s name.', variant: 'destructive' });\n      setIsGenerating(false);\n      return;\n    }\n     if (!hatStyle) {\n      toast({ title: 'Oops!', description: 'Please select or describe a hat style.', variant: 'destructive' });\n      setIsGenerating(false);\n      return;\n    }\n\n    const result = await handleGeneratePortrait({ petName, photoDataUri, hatStyle });\n    \n    if (!result.success) {\n      toast({ title: 'Oops!', description: result.message, variant: 'destructive' });\n    }\n    \n    setGeneratedPortrait(result);\n    setIsGenerating(false);\n  }\n\n  const handlePublishSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!generatedPortrait?.portraitDataUri || !generatedPortrait?.petName || !generatedPortrait?.hatStyle) return;\n    \n    setIsPublishing(true);\n\n    const result = await handlePublishPortrait({\n        petName: generatedPortrait.petName,\n        hatStyle: generatedPortrait.hatStyle,\n        portraitDataUri: generatedPortrait.portraitDataUri,\n    });\n\n    toast({\n        title: result.success ? 'Success!' : 'Oops!',\n        description: result.message,\n        variant: result.success ? 'default' : 'destructive',\n    });\n\n    if (result.success) {\n       setGeneratedPortrait(null);\n    }\n    setIsPublishing(false);\n  }\n\n  const handleHatSelect = (hat: string) => {\n    setSelectedHat(hat);\n    setCustomHat('');\n  }\n  \n  const handleCustomHatChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setCustomHat(e.target.value);\n      setSelectedHat('');\n  }\n\n  const handleDownload = () => {\n    if (!generatedPortrait?.portraitDataUri) return;\n\n    const link = document.createElement('a');\n    link.href = generatedPortrait.portraitDataUri;\n    const timestamp = new Date().getTime();\n    const petNameForFile = petName || 'pet';\n    const hatStyleForFile = (getHatStyle() || 'portrait').replace(/\\s+/g, '_');\n    link.download = `${petNameForFile}_in_${hatStyleForFile}_${timestamp}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const localPortraitUri = generatedPortrait?.portraitDataUri;\n  const currentHatStyle = generatedPortrait?.hatStyle;\n  const currentPetName = generatedPortrait?.petName;\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CardTitle as=\"h2\">Create Your Masterpiece</CardTitle>\n          <CardDescription as=\"p\">Follow these simple steps to get a portrait of your furry friend.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleGenerationSubmit} className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"pet-photo\" className=\"text-base\">1. Upload a Photo</Label>\n              <div\n                className=\"relative flex justify-center items-center w-full h-48 md:h-64 border-2 border-dashed rounded-lg cursor-pointer hover:border-primary transition-colors\"\n                onClick={() => fileInputRef.current?.click()}\n              >\n                {photoPreview ? (\n                  <Image\n                    src={photoPreview}\n                    alt=\"Pet preview\"\n                    fill\n                    className=\"object-contain rounded-lg p-1\"\n                  />\n                ) : (\n                  <div className=\"text-center text-muted-foreground\">\n                    <Camera className=\"mx-auto h-12 w-12\" />\n                    <p>Click to upload a photo</p>\n                  </div>\n                )}\n              </div>\n              <Input\n                id=\"pet-photo\"\n                name=\"pet-photo-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                ref={fileInputRef}\n                className=\"hidden\"\n                onChange={handleFileChange}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"petName\" className=\"text-base\">2. Name Your Pet</Label>\n              <Input\n                id=\"petName\"\n                name=\"petName\"\n                placeholder=\"e.g., Buddy\"\n                value={petName}\n                onChange={(e) => setPetName(e.target.value)}\n                disabled={isGenerating}\n              />\n            </div>\n\n           <div className=\"space-y-4\" ref={hatSelectionRef}>\n              <Label className=\"text-base\">3. Choose a Hat Style</Label>\n              <div className=\"flex flex-wrap gap-2\">\n                {displayedHats.map((hat) => (\n                  <Button\n                    key={hat}\n                    type=\"button\"\n                    variant={selectedHat === hat ? 'default' : 'outline'}\n                    onClick={() => handleHatSelect(hat)}\n                    disabled={isGenerating}\n                  >\n                    {hat}\n                  </Button>\n                ))}\n                <Button\n                  type=\"button\"\n                  variant=\"secondary\"\n                  onClick={shuffleHats}\n                  disabled={isGenerating}\n                >\n                  <RefreshCw className=\"mr-2 h-4 w-4\" />\n                  More Choices\n                </Button>\n              </div>\n               <Textarea\n                  name=\"customHatStyle\"\n                  placeholder=\"...or describe a custom hat in detail (e.g., 'a funky rainbow propeller hat')\"\n                  value={customHat}\n                  onChange={handleCustomHatChange}\n                  className=\"mt-2\"\n                  disabled={isGenerating}\n                />\n            </div>\n\n            <Button type=\"submit\" variant=\"accent\" size=\"lg\" className=\"w-full\" disabled={isGenerating}>\n              {isGenerating ? (\n                <>\n                  <Sparkles className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Creating Magic...\n                </>\n              ) : (\n                <>\n                  <Wand2 className=\"mr-2 h-4 w-4\" />\n                  Generate Portrait\n                </>\n              )}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n\n      <div ref={portraitSectionRef} className=\"sticky top-20\">\n          <Card>\n            <CardHeader>\n              <CardTitle as=\"h2\">Your Portrait</CardTitle>\n              <CardDescription as=\"p\">The generated portrait will appear here.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"aspect-square w-full rounded-lg bg-muted flex items-center justify-center overflow-hidden\">\n                {isGenerating ? (\n                  <div className=\"w-full h-full flex flex-col items-center justify-center space-y-4\">\n                    <Skeleton className=\"h-full w-full\" />\n                    <p className=\"text-muted-foreground animate-pulse\">Dipping the brushes...</p>\n                  </div>\n                ) : localPortraitUri ? (\n                  <Image\n                    src={localPortraitUri}\n                    alt=\"Generated pet portrait\"\n                    width={512}\n                    height={512}\n                    className=\"object-cover w-full h-full transition-opacity duration-500 opacity-100\"\n                    priority\n                  />\n                ) : (\n                  <div className=\"text-center text-muted-foreground p-8\">\n                    <Wand2 className=\"mx-auto h-16 w-16\" />\n                    <p className=\"mt-4\">Your pet's portrait awaits!</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n             {localPortraitUri && (\n              <CardFooter className=\"flex-col gap-4\">\n                  <form onSubmit={handlePublishSubmit} className=\"w-full\">\n                      <Button type=\"submit\" variant=\"secondary\" className=\"w-full\" disabled={isPublishing}>\n                        {isPublishing ? (\n                            <>\n                              <Sparkles className=\"mr-2 h-4 w-4 animate-spin\" />\n                              Publishing...\n                            </>\n                        ) : (\n                            <>\n                              <Share2 className=\"mr-2 h-4 w-4\" />\n                              Publish to Gallery\n                            </>\n                        )}\n                      </Button>\n                  </form>\n                  <div className=\"w-full grid grid-cols-1 sm:grid-cols-3 gap-2\">\n                      <Button asChild variant=\"outline\" className=\"w-full\">\n                          <a\n                           href={`https://www.amazon.com/s?k=${encodeURIComponent((currentHatStyle || '') + ' for pet')}&tag=logonitro-20`}\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\"\n                          >\n                              <ShoppingCart /> \n                              <span className=\"sm:hidden\">Shop</span>\n                              <span className=\"hidden sm:inline\">Shop this look</span>\n                          </a>\n                      </Button>\n                      <Button variant=\"outline\" className=\"w-full\" onClick={resetPortrait}>\n                          <RefreshCcw /> \n                          <span className=\"sm:hidden\">Remix</span>\n                           <span className=\"hidden sm:inline\">Choose another hat</span>\n                      </Button>\n                      <Button variant=\"outline\" className=\"w-full\" onClick={handleDownload}>\n                          <Download /> \n                           <span className=\"sm:hidden\">Save</span>\n                           <span className=\"hidden sm:inline\">Download</span>\n                      </Button>\n                  </div>\n                  <p className=\"text-xs text-muted-foreground text-center w-full pt-2\">\n                      As an Amazon Associate, we earn from qualifying purchases.\n                  </p>\n              </CardFooter>\n             )}\n          </Card>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}