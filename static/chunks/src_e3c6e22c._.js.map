{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generatePetPortrait } from \"@/ai/flows/generate-pet-portrait\";\nimport { validatePetImage } from \"@/ai/flows/validate-pet-image\";\nimport type { GeneratePetPortraitInput } from \"@/ai/flows/types\";\n\n// Define the shape of the data returned by the actions\nexport interface GenerateActionResult {\n  success: boolean;\n  message: string;\n  portraitDataUri?: string;\n};\n\nexport interface ValidateImageResult {\n    success: boolean;\n    isHumanPresent: boolean;\n    message: string;\n}\n\n/**\n * A standard async function to handle portrait generation.\n * It's called from the client with a structured object.\n */\nexport async function handleGeneratePortrait(\n  input: GeneratePetPortraitInput\n): Promise<GenerateActionResult> {\n  // Basic validation\n  if (!input.petName || !input.photoDataUri || !input.hatStyle) {\n    return { success: false, message: 'Invalid form data. All fields are required.' };\n  }\n  \n  const result = await generatePetPortrait(input);\n\n  if (!result.portraitDataUri) {\n      return {\n        success: false,\n        message: 'AI generation failed to return a portrait. This may be due to a network error or a problem with the generation service.'\n      };\n  }\n\n  return {\n    success: true,\n    message: 'Your masterpiece is ready!',\n    portraitDataUri: result.portraitDataUri,\n  };\n}\n\n/**\n * A server action to validate the uploaded image.\n */\nexport async function handleValidateImage(photoDataUri: string): Promise<ValidateImageResult> {\n  if (!photoDataUri) {\n    return { success: false, isHumanPresent: false, message: 'No image data provided.' };\n  }\n\n  try {\n    const result = await validatePetImage({ photoDataUri });\n    return { success: true, isHumanPresent: result.isHumanPresent, message: 'Validation complete.' };\n  } catch (error) {\n    console.error('Image validation error:', error);\n    // In case of an error, we'll assume it's not a human to avoid blocking the user.\n    // The main generation safety filters will still apply.\n    return { success: false, isHumanPresent: false, message: 'Could not validate image.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAwBsB,yBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generatePetPortrait } from \"@/ai/flows/generate-pet-portrait\";\nimport { validatePetImage } from \"@/ai/flows/validate-pet-image\";\nimport type { GeneratePetPortraitInput } from \"@/ai/flows/types\";\n\n// Define the shape of the data returned by the actions\nexport interface GenerateActionResult {\n  success: boolean;\n  message: string;\n  portraitDataUri?: string;\n};\n\nexport interface ValidateImageResult {\n    success: boolean;\n    isHumanPresent: boolean;\n    message: string;\n}\n\n/**\n * A standard async function to handle portrait generation.\n * It's called from the client with a structured object.\n */\nexport async function handleGeneratePortrait(\n  input: GeneratePetPortraitInput\n): Promise<GenerateActionResult> {\n  // Basic validation\n  if (!input.petName || !input.photoDataUri || !input.hatStyle) {\n    return { success: false, message: 'Invalid form data. All fields are required.' };\n  }\n  \n  const result = await generatePetPortrait(input);\n\n  if (!result.portraitDataUri) {\n      return {\n        success: false,\n        message: 'AI generation failed to return a portrait. This may be due to a network error or a problem with the generation service.'\n      };\n  }\n\n  return {\n    success: true,\n    message: 'Your masterpiece is ready!',\n    portraitDataUri: result.portraitDataUri,\n  };\n}\n\n/**\n * A server action to validate the uploaded image.\n */\nexport async function handleValidateImage(photoDataUri: string): Promise<ValidateImageResult> {\n  if (!photoDataUri) {\n    return { success: false, isHumanPresent: false, message: 'No image data provided.' };\n  }\n\n  try {\n    const result = await validatePetImage({ photoDataUri });\n    return { success: true, isHumanPresent: result.isHumanPresent, message: 'Validation complete.' };\n  } catch (error) {\n    console.error('Image validation error:', error);\n    // In case of an error, we'll assume it's not a human to avoid blocking the user.\n    // The main generation safety filters will still apply.\n    return { success: false, isHumanPresent: false, message: 'Could not validate image.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmDsB,sBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        accent: \"bg-accent text-accent-foreground hover:bg-accent/90\"\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;YACN,QAAQ;QACV;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  CardTitleProps\n>(({ className, as: Comp = 'div', ...props }, ref) => (\n  <Comp\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n\ninterface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\n  as?: React.ElementType;\n}\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  CardDescriptionProps\n>(({ className, as: Comp = 'div', ...props }, ref) => (\n  <Comp\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAGA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAMzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,IAAI,OAAO,KAAK,EAAE,GAAG,OAAO,EAAE,oBAC5C,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAOxB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,IAAI,OAAO,KAAK,EAAE,GAAG,OAAO,EAAE,oBAC5C,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/portrait-generator-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport Image from 'next/image';\nimport { Camera, Sparkles, Wand2, ShoppingCart, RefreshCcw, Download, ArrowDown, Share2, Loader2, AlertCircle } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { handleGeneratePortrait, handleValidateImage } from '@/app/actions';\nimport type { GenerateActionResult } from '@/app/actions';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Textarea } from './ui/textarea';\nimport { cn } from '@/lib/utils';\nimport { Alert, AlertDescription } from './ui/alert';\n\nconst allHatOptions = [\n  'Top Hat', 'Cowboy Hat', 'Beanie', 'Fez', 'Beret', 'Baseball Cap', \n  'Graduation Cap', 'Sombrero', 'Wizard Hat', 'Chef Hat', 'Sailor Hat', \n  'Detective Hat', 'Propeller Beanie', 'Crown', 'Viking Helmet', 'Pirate Hat',\n  'Hard Hat', 'Jester Hat', 'Bowler Hat', 'Fedora', 'Santa Hat', 'Elf Hat',\n  'Newsboy Cap', 'Turban', 'Ushanka', 'Safari Helmet', 'Mortar Board',\n  'Party Hat', 'Tricorne', 'Pork Pie Hat', 'Kepi', 'Deerstalker'\n];\n\nconst HATS_TO_SHOW = 15;\n\ntype PortraitState = 'idle' | 'generating' | 'generated';\ntype ValidationState = 'idle' | 'validating' | 'validated';\n\nexport default function PortraitGeneratorForm() {\n  const { toast } = useToast();\n  \n  // Form input state\n  const [photoPreview, setPhotoPreview] = useState<string | null>(null);\n  const [photoDataUri, setPhotoDataUri] = useState<string>('');\n  const [petName, setPetName] = useState('');\n  const [selectedHat, setSelectedHat] = useState('');\n  const [customHat, setCustomHat] = useState('');\n  \n  // Generation and UI flow state\n  const [portraitState, setPortraitState] = useState<PortraitState>('idle');\n  const [validationState, setValidationState] = useState<ValidationState>('idle');\n  const [isHumanDetected, setIsHumanDetected] = useState(false);\n  const [generatedPortraitUri, setGeneratedPortraitUri] = useState<string>('');\n  const [displayedHats, setDisplayedHats] = useState<string[]>([]);\n  const [isShareable, setIsShareable] = useState(false);\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const portraitSectionRef = useRef<HTMLDivElement>(null);\n  \n  const getHatStyle = () => customHat.trim() || selectedHat;\n  \n  const resetForRemix = () => {\n    setPortraitState('idle');\n    setGeneratedPortraitUri('');\n    setSelectedHat('');\n    setCustomHat('');\n  };\n  \n  const shuffleHats = () => {\n    const shuffled = [...allHatOptions].sort(() => 0.5 - Math.random());\n    setDisplayedHats(shuffled.slice(0, HATS_TO_SHOW));\n  };\n  \n  useEffect(() => {\n    shuffleHats();\n    // Check for Web Share API support on component mount\n    if (navigator.share) {\n      setIsShareable(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (portraitState === 'generated') {\n      portraitSectionRef.current?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  }, [portraitState]);\n\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setValidationState('validating');\n      setIsHumanDetected(false);\n      setPhotoPreview(URL.createObjectURL(file));\n\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        const dataUri = reader.result as string;\n        setPhotoDataUri(dataUri);\n\n        const validationResult = await handleValidateImage(dataUri);\n        if (validationResult.success && validationResult.isHumanPresent) {\n          setIsHumanDetected(true);\n          setPhotoDataUri(''); // Clear data URI to prevent submission\n        } else if (!validationResult.success) {\n          // Handle validation error if needed, for now we let it pass\n        }\n        setValidationState('validated');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  const handleGenerationSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    \n    const hatStyle = getHatStyle();\n\n    // Client-side validation\n    if (!photoDataUri) {\n      toast({ title: 'Oops!', description: 'Please upload a valid photo of your pet.', variant: 'destructive' });\n      return;\n    }\n    if (isHumanDetected) {\n       toast({ title: 'Oops!', description: 'Please upload a photo of a pet, not a human.', variant: 'destructive' });\n       return;\n    }\n    if (!petName) {\n      toast({ title: 'Oops!', description: \"Please enter your pet's name.\", variant: 'destructive' });\n      return;\n    }\n    if (!hatStyle) {\n      toast({ title: 'Oops!', description: 'Please select or describe a hat style.', variant: 'destructive' });\n      return;\n    }\n    \n    setPortraitState('generating');\n    setGeneratedPortraitUri('');\n\n    const result: GenerateActionResult = await handleGeneratePortrait({ petName, photoDataUri, hatStyle });\n    \n    if (result.success && result.portraitDataUri) {\n      setGeneratedPortraitUri(result.portraitDataUri);\n      setPortraitState('generated');\n    } else {\n      toast({ \n        title: 'Generation Failed', \n        description: result.message || 'Please check your input for any offensive language or try a different prompt.', \n        variant: 'destructive',\n        duration: 9000,\n      });\n      setPortraitState('idle');\n    }\n  }\n\n  const handleHatSelect = (hat: string) => {\n    setSelectedHat(hat);\n    setCustomHat('');\n  }\n  \n  const handleCustomHatChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setCustomHat(e.target.value);\n      setSelectedHat('');\n  }\n\n  const handleDownload = () => {\n    if (!generatedPortraitUri) return;\n\n    const link = document.createElement('a');\n    link.href = generatedPortraitUri;\n    const timestamp = new Date().getTime();\n    const petNameForFile = petName || 'pet';\n    const hatStyleForFile = (getHatStyle() || 'portrait').replace(/\\s+/g, '_');\n    link.download = `${petNameForFile}_in_${hatStyleForFile}_${timestamp}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleShare = async () => {\n    if (!navigator.share || !generatedPortraitUri) {\n      toast({\n        title: 'Sharing not available',\n        description: 'Your browser does not support the Web Share API or you are not on a secure connection (https).',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      const response = await fetch(generatedPortraitUri);\n      const blob = await response.blob();\n      const file = new File([blob], 'licks-and-lids-portrait.png', { type: 'image/png' });\n\n      const shareData = {\n        title: 'My Licks & Lids Creation!',\n        text: 'Created by Licks & Lids: www.licksandlids.com',\n        files: [file],\n      };\n\n      if (navigator.canShare && navigator.canShare(shareData)) {\n        await navigator.share(shareData);\n      } else {\n        // Fallback for when files can't be shared\n        await navigator.share({\n            title: shareData.title,\n            text: shareData.text,\n            url: 'https://www.licksandlids.com',\n        });\n      }\n    } catch (error) {\n      console.error('Sharing failed', error);\n      toast({\n        title: 'Sharing failed',\n        description: 'There was an error trying to share your portrait.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const isGenerating = portraitState === 'generating';\n  const isFormDisabled = isGenerating || validationState === 'validating';\n\n  return (\n    <div className=\"space-y-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle as=\"h2\">Create Your Masterpiece</CardTitle>\n          <CardDescription as=\"p\">Follow these simple steps to get a portrait of your furry friend.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleGenerationSubmit} className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"pet-photo\" className=\"text-base\">1. Upload a Photo</Label>\n              <div\n                className=\"relative flex justify-center items-center w-full h-48 md:h-64 border-2 border-dashed rounded-lg cursor-pointer hover:border-primary transition-colors\"\n                onClick={() => fileInputRef.current?.click()}\n                data-ai-hint=\"pet photo\"\n              >\n                {photoPreview ? (\n                  <>\n                  <Image\n                    src={photoPreview}\n                    alt=\"Pet preview\"\n                    fill\n                    className={cn(\"object-contain rounded-lg p-1\", (isFormDisabled || isHumanDetected) && \"opacity-50\")}\n                  />\n                  {validationState === 'validating' && (\n                    <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-background/80\">\n                        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                        <p className=\"mt-2 text-sm text-muted-foreground\">Checking your photo...</p>\n                    </div>\n                  )}\n                  </>\n                ) : (\n                  <div className=\"text-center text-muted-foreground\">\n                    <Camera className=\"mx-auto h-12 w-12\" />\n                    <p>Click to upload a photo</p>\n                  </div>\n                )}\n              </div>\n              <Input\n                id=\"pet-photo\"\n                name=\"pet-photo-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                ref={fileInputRef}\n                className=\"hidden\"\n                onChange={handleFileChange}\n                disabled={isFormDisabled}\n              />\n               {isHumanDetected && (\n                 <Alert variant=\"destructive\">\n                   <AlertCircle className=\"h-4 w-4\" />\n                   <AlertDescription>\n                     Human detected! Please upload a picture of a pet.\n                   </AlertDescription>\n                 </Alert>\n               )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"petName\" className=\"text-base\">2. Name Your Pet</Label>\n              <Input\n                id=\"petName\"\n                name=\"petName\"\n                placeholder=\"e.g., Buddy\"\n                value={petName}\n                onChange={(e) => setPetName(e.target.value)}\n                disabled={isFormDisabled}\n              />\n            </div>\n\n           <div className=\"space-y-4\">\n              <Label className=\"text-base\">3. Choose a Hat Style</Label>\n              <div className=\"flex flex-wrap gap-2\">\n                {displayedHats.map((hat) => (\n                  <Button\n                    key={hat}\n                    type=\"button\"\n                    variant={selectedHat === hat ? 'default' : 'outline'}\n                    onClick={() => handleHatSelect(hat)}\n                    disabled={isFormDisabled}\n                  >\n                    {hat}\n                  </Button>\n                ))}\n                <Button\n                  type=\"button\"\n                  variant=\"secondary\"\n                  onClick={shuffleHats}\n                  disabled={isFormDisabled}\n                >\n                  <RefreshCcw className=\"mr-2 h-4 w-4\" />\n                  Shuffle Hats\n                </Button>\n              </div>\n               <Textarea\n                  name=\"customHatStyle\"\n                  placeholder=\"...or describe a custom hat in detail (e.g., 'a funky rainbow propeller hat')\"\n                  value={customHat}\n                  onChange={handleCustomHatChange}\n                  className=\"mt-2\"\n                  disabled={isFormDisabled}\n                />\n            </div>\n\n            <Button type=\"submit\" variant=\"accent\" size=\"lg\" className=\"w-full\" disabled={isFormDisabled || isHumanDetected}>\n              {isGenerating ? (\n                <>\n                  <Sparkles className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Creating Magic...\n                </>\n              ) : (\n                <>\n                  <Wand2 className=\"mr-2 h-4 w-4\" />\n                  Generate Portrait\n                </>\n              )}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n      \n      {(portraitState === 'generating' || portraitState === 'generated') && (\n        <div ref={portraitSectionRef}>\n          <div className=\"flex justify-center items-center text-muted-foreground my-4\">\n            <ArrowDown className=\"h-6 w-6 animate-bounce\" />\n          </div>\n          <Card className={cn(portraitState === 'generated' && 'animate-in fade-in zoom-in-95 duration-500')}>\n            <CardHeader>\n              <CardTitle as=\"h2\">Your Portrait</CardTitle>\n              <CardDescription as=\"p\">Behold! Your pet's masterpiece.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"aspect-square w-full rounded-lg bg-muted flex items-center justify-center overflow-hidden\" data-ai-hint=\"generated portrait\">\n                {isGenerating ? (\n                  <div className=\"w-full h-full flex flex-col items-center justify-center space-y-4 bg-muted p-4\">\n                    <Skeleton className=\"h-full w-full\" />\n                    <p className=\"text-muted-foreground animate-pulse\">Dipping the brushes...</p>\n                  </div>\n                ) : (generatedPortraitUri &&\n                  <Image\n                    src={generatedPortraitUri}\n                    alt=\"Generated pet portrait\"\n                    width={512}\n                    height={512}\n                    className=\"object-cover w-full h-full transition-opacity duration-500 opacity-100\"\n                    priority\n                  />\n                )}\n              </div>\n            </CardContent>\n             {portraitState === 'generated' && (\n              <CardFooter className=\"flex-col gap-4\">\n                  <div className=\"w-full grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2\">\n                      <Button asChild variant=\"outline\" className=\"w-full\">\n                          <a\n                           href={`https://www.amazon.com/s?k=${encodeURIComponent((getHatStyle() || '') + ' for pet')}&tag=logonitro-20`}\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\"\n                          >\n                              <ShoppingCart /> \n                              Shop Look\n                          </a>\n                      </Button>\n                      <Button variant=\"outline\" className=\"w-full\" onClick={resetForRemix}>\n                          <RefreshCcw /> \n                          Create New\n                      </Button>\n                      <Button variant=\"outline\" className=\"w-full\" onClick={handleDownload}>\n                          <Download /> \n                           Download\n                      </Button>\n                      {isShareable && (\n                        <Button variant=\"outline\" className=\"w-full\" onClick={handleShare}>\n                            <Share2 /> \n                            Share\n                        </Button>\n                      )}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground text-center w-full pt-2\">\n                      As an Amazon Associate, we earn from qualifying purchases.\n                  </p>\n              </CardFooter>\n             )}\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}